.TH "D:/RayTracing/include/SDL_syswm.h" 3 "Mon Jan 24 2022" "Version 1.0" "RayTracer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
D:/RayTracing/include/SDL_syswm.h
.SH SYNOPSIS
.br
.PP
\fC#include 'SDL_stdinc\&.h'\fP
.br
\fC#include 'SDL_error\&.h'\fP
.br
\fC#include 'SDL_video\&.h'\fP
.br
\fC#include 'SDL_version\&.h'\fP
.br
\fC#include <windows\&.h>\fP
.br
\fC#include 'begin_code\&.h'\fP
.br
\fC#include 'close_code\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSDL_SysWMmsg\fP"
.br
.ti -1c
.RI "struct \fBSDL_SysWMinfo\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBWIN32_LEAN_AND_MEAN\fP"
.br
.ti -1c
.RI "#define \fBNOMINMAX\fP"
.br
.ti -1c
.RI "#define \fBSDL_METALVIEW_TAG\fP   255"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBSDL_SysWMinfo\fP \fBSDL_SysWMinfo\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBSDL_SYSWM_TYPE\fP { \fBSDL_SYSWM_UNKNOWN\fP, \fBSDL_SYSWM_WINDOWS\fP, \fBSDL_SYSWM_X11\fP, \fBSDL_SYSWM_DIRECTFB\fP, \fBSDL_SYSWM_COCOA\fP, \fBSDL_SYSWM_UIKIT\fP, \fBSDL_SYSWM_WAYLAND\fP, \fBSDL_SYSWM_MIR\fP, \fBSDL_SYSWM_WINRT\fP, \fBSDL_SYSWM_ANDROID\fP, \fBSDL_SYSWM_VIVANTE\fP, \fBSDL_SYSWM_OS2\fP, \fBSDL_SYSWM_HAIKU\fP, \fBSDL_SYSWM_KMSDRM\fP, \fBSDL_SYSWM_RISCOS\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP \fBSDL_GetWindowWMInfo\fP (\fBSDL_Window\fP *window, \fBSDL_SysWMinfo\fP *info)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Include file for SDL custom system window manager hooks\&. 
.SH "Macro Definition Documentation"
.PP 
.SS "#define NOMINMAX"

.SS "#define SDL_METALVIEW_TAG   255"

.SS "#define WIN32_LEAN_AND_MEAN"

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBSDL_SysWMinfo\fP \fBSDL_SysWMinfo\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBSDL_SYSWM_TYPE\fP"
These are the various supported windowing subsystems 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISDL_SYSWM_UNKNOWN \fP\fP
.TP
\fB\fISDL_SYSWM_WINDOWS \fP\fP
.TP
\fB\fISDL_SYSWM_X11 \fP\fP
.TP
\fB\fISDL_SYSWM_DIRECTFB \fP\fP
.TP
\fB\fISDL_SYSWM_COCOA \fP\fP
.TP
\fB\fISDL_SYSWM_UIKIT \fP\fP
.TP
\fB\fISDL_SYSWM_WAYLAND \fP\fP
.TP
\fB\fISDL_SYSWM_MIR \fP\fP
.TP
\fB\fISDL_SYSWM_WINRT \fP\fP
.TP
\fB\fISDL_SYSWM_ANDROID \fP\fP
.TP
\fB\fISDL_SYSWM_VIVANTE \fP\fP
.TP
\fB\fISDL_SYSWM_OS2 \fP\fP
.TP
\fB\fISDL_SYSWM_HAIKU \fP\fP
.TP
\fB\fISDL_SYSWM_KMSDRM \fP\fP
.TP
\fB\fISDL_SYSWM_RISCOS \fP\fP
.SH "Function Documentation"
.PP 
.SS "\fBDECLSPEC\fP \fBSDL_bool\fP \fBSDLCALL\fP SDL_GetWindowWMInfo (\fBSDL_Window\fP * window, \fBSDL_SysWMinfo\fP * info)"
Get driver-specific information about a window\&.
.PP
You must include SDL_syswm\&.h for the declaration of \fBSDL_SysWMinfo\fP\&.
.PP
The caller must initialize the \fCinfo\fP structure's version by using \fCSDL_VERSION(&info\&.version)\fP, and then this function will fill in the rest of the structure with information about the given window\&.
.PP
\fBParameters\fP
.RS 4
\fIwindow\fP the window about which information is being requested 
.br
\fIinfo\fP an \fBSDL_SysWMinfo\fP structure filled in with window information 
.RE
.PP
\fBReturns\fP
.RS 4
SDL_TRUE if the function is implemented and the \fCversion\fP member of the \fCinfo\fP struct is valid, or SDL_FALSE if the information could not be retrieved; call \fBSDL_GetError()\fP for more information\&.
.RE
.PP
\fBSince\fP
.RS 4
This function is available since SDL 2\&.0\&.0\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for RayTracer from the source code\&.
