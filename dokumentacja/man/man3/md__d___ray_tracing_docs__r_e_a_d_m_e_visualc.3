.TH "md__d___ray_tracing_docs__r_e_a_d_m_e_visualc" 3 "Mon Jan 24 2022" "Version 1.0" "RayTracer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__d___ray_tracing_docs__r_e_a_d_m_e_visualc \- Using SDL with Microsoft Visual C++ 

.SS "by <a href='mailto:snowlion@sprynet\&.com' >Lion Kimbro</a> with additions by <a href='mailto:james@conceptofzero\&.net' >James Turk</a>"
You can either use the precompiled libraries from the \fCSDL\fP web site, or you can build SDL yourself\&.
.SS "Building SDL"
0\&. To build SDL, your machine must, at a minimum, have the DirectX9\&.0c SDK installed\&. It may or may not be retrievable from the \fCMicrosoft\fP website, so you might need to locate it \fConline\fP\&. \fIEditor's note: I've been able to successfully build SDL using Visual Studio 2019 \fBwithout\fP the DX9\&.0c SDK\fP
.PP
.IP "1." 4
Open the Visual Studio solution file at \fC\&./VisualC/SDL\&.sln\fP\&.
.IP "2." 4
Your IDE will likely prompt you to upgrade this solution file to whatever later version of the IDE you're using\&. In the \fCRetarget Projects\fP dialog, all of the affected project files should be checked allowing you to use the latest \fCWindows SDK Version\fP you have installed, along with the \fCPlatform Toolset\fP\&.
.PP
.PP
If you choose \fINOT\fP to upgrade to use the latest \fCWindows SDK Version\fP or \fCPlatform Toolset\fP, then you'll need the \fCVisual Studio 2010 Platform Toolset\fP\&.
.PP
.IP "3." 4
Build the \fC\&.dll\fP and \fC\&.lib\fP files by right clicking on each project in turn (Projects are listed in the \fIWorkspace\fP panel in the \fIFileView\fP tab), and selecting \fCBuild\fP\&.
.PP
.PP
You may get a few warnings, but you should not get any errors\&.
.PP
Later, we will refer to the following \fC\&.lib\fP and \fC\&.dll\fP files that have just been generated:
.PP
.IP "\(bu" 2
\fC\&./VisualC/Win32/Debug/SDL2\&.dll\fP or \fC\&./VisualC/Win32/Release/SDL2\&.dll\fP
.IP "\(bu" 2
\fC\&./VisualC/Win32/Debug/SDL2\&.lib\fP or \fC\&./VisualC/Win32/Release/SDL2\&.lib\fP
.IP "\(bu" 2
\fC\&./VisualC/Win32/Debug/SDL2main\&.lib\fP or \fC\&./VisualC/Win32/Release/SDL2main\&.lib\fP
.PP
.PP
\fINote for the \fCx64\fP versions, just replace \fCWin32\fP in the path with \fCx64\fP\fP
.SS "Creating a Project with SDL"
.IP "\(bu" 2
Create a project as a \fCWin32 Application\fP\&.
.IP "\(bu" 2
Create a C++ file for your project\&.
.IP "\(bu" 2
Set the C runtime to \fCMulti-threaded DLL\fP in the menu: \fCProject|Settings|C/C++ tab|Code Generation|Runtime Library\fP\&.
.IP "\(bu" 2
Add the SDL \fCinclude\fP directory to your list of includes in the menu: \fCProject|Settings|C/C++ tab|Preprocessor|Additional include directories\fP
.PP
.PP
\fIVC7 Specific: Instead of doing this, I find it easier to add the include and library directories to the list that VC7 keeps\&. Do this by selecting Tools|Options|Projects|VC++ Directories and under the 'Show
Directories For:' dropbox select 'Include Files', and click the 'New
Directory Icon' and add the [SDLROOT]\\include directory (e\&.g\&. If you installed to c:\\SDL\\ add c:\\SDL\\include)\&. Proceed to change the dropbox selection to 'Library Files' and add [SDLROOT]\\lib\&.\fP
.PP
The 'include directory' I am referring to is the \fC\&./include\fP folder\&.
.PP
Now we're going to use the files that we had created earlier in the \fIBuild SDL\fP step\&.
.PP
Copy the following file into your Project directory:
.PP
.IP "\(bu" 2
\fCSDL2\&.dll\fP
.PP
.PP
Add the following files to your project (It is not necessary to copy them to your project directory):
.PP
.IP "\(bu" 2
\fCSDL2\&.lib\fP
.IP "\(bu" 2
\fCSDL2main\&.lib\fP
.PP
.PP
To add them to your project, right click on your project, and select \fCAdd files to project\fP\&.
.PP
\fBInstead of adding the files to your project, it is more desirable to add them to the linker options: Project|Properties|Linker|Command Line and type the names of the libraries to link with in the 'Additional Options:' box\&. Note: This must be done for each build configuration (e\&.g\&. Release,Debug)\&.\fP
.SS "Hello SDL2"
Here's a sample SDL snippet to verify everything is setup in your IDE:
.PP
.PP
.nf
#include "SDL\&.h"

int main( int argc, char* argv[] )
{
    const int WIDTH = 640;
    const int HEIGHT = 480;
    SDL_Window* window = NULL;
    SDL_Renderer* renderer = NULL;

    SDL_Init(SDL_INIT_VIDEO);
    window = SDL_CreateWindow("SDL2 Test", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, WIDTH, HEIGHT, SDL_WINDOW_SHOWN);
    renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);

    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit();
    return 0;
}
.fi
.PP
.SS "That's it!"
I hope that this document has helped you get through the most difficult part of using the SDL: installing it\&. Suggestions for improvements should be posted to the \fCGithub Issues\fP\&.
.SS "Credits"
Thanks to \fCPaulus Esterhazy\fP, for the work on VC++ port\&.
.PP
This document was originally called 'VisualC\&.txt', and was written by \fCSam Lantinga\fP\&.
.PP
Later, it was converted to HTML and expanded into the document that you see today by \fCLion Kimbro\fP\&.
.PP
Minor Fixes and Visual C++ 7 Information (In Green) was added by \fCJames Turk\fP 
