.TH "D:/RayTracing/include/SDL_test_common.h" 3 "Mon Jan 24 2022" "Version 1.0" "RayTracer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
D:/RayTracing/include/SDL_test_common.h
.SH SYNOPSIS
.br
.PP
\fC#include 'SDL\&.h'\fP
.br
\fC#include 'begin_code\&.h'\fP
.br
\fC#include 'close_code\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSDLTest_CommonState\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDEFAULT_WINDOW_WIDTH\fP   640"
.br
.ti -1c
.RI "#define \fBDEFAULT_WINDOW_HEIGHT\fP   480"
.br
.ti -1c
.RI "#define \fBVERBOSE_VIDEO\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBVERBOSE_MODES\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBVERBOSE_RENDER\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBVERBOSE_EVENT\fP   0x00000008"
.br
.ti -1c
.RI "#define \fBVERBOSE_AUDIO\fP   0x00000010"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBSDLTest_CommonState\fP * \fBSDLTest_CommonCreateState\fP (char **argv, \fBUint32\fP \fBflags\fP)"
.br
.RI "Parse command line parameters and create common state\&. "
.ti -1c
.RI "int \fBSDLTest_CommonArg\fP (\fBSDLTest_CommonState\fP *state, int \fBindex\fP)"
.br
.RI "Process one common argument\&. "
.ti -1c
.RI "\fBvoid\fP \fBSDLTest_CommonLogUsage\fP (\fBSDLTest_CommonState\fP *state, const char *argv0, const char **options)"
.br
.RI "Logs command line usage info\&. "
.ti -1c
.RI "const char * \fBSDLTest_CommonUsage\fP (\fBSDLTest_CommonState\fP *state)"
.br
.RI "Returns common usage information\&. "
.ti -1c
.RI "\fBSDL_bool\fP \fBSDLTest_CommonInit\fP (\fBSDLTest_CommonState\fP *state)"
.br
.RI "Open test window\&. "
.ti -1c
.RI "\fBSDL_bool\fP \fBSDLTest_CommonDefaultArgs\fP (\fBSDLTest_CommonState\fP *state, const int argc, char **argv)"
.br
.RI "Easy argument handling when test app doesn't need any custom args\&. "
.ti -1c
.RI "\fBvoid\fP \fBSDLTest_CommonEvent\fP (\fBSDLTest_CommonState\fP *state, \fBSDL_Event\fP *\fBevent\fP, int *done)"
.br
.RI "Common event handler for test windows\&. "
.ti -1c
.RI "\fBvoid\fP \fBSDLTest_CommonQuit\fP (\fBSDLTest_CommonState\fP *state)"
.br
.RI "Close test window\&. "
.ti -1c
.RI "\fBvoid\fP \fBSDLTest_CommonDrawWindowInfo\fP (\fBSDL_Renderer\fP *renderer, \fBSDL_Window\fP *window, int *usedHeight)"
.br
.RI "Draws various window information (position, size, etc\&.) to the renderer\&. "
.in -1c
.SH "Detailed Description"
.PP 
Include file for SDL test framework\&.
.PP
This code is a part of the SDL2_test library, not the main SDL library\&. 
.SH "Macro Definition Documentation"
.PP 
.SS "#define DEFAULT_WINDOW_HEIGHT   480"

.SS "#define DEFAULT_WINDOW_WIDTH   640"

.SS "#define VERBOSE_AUDIO   0x00000010"

.SS "#define VERBOSE_EVENT   0x00000008"

.SS "#define VERBOSE_MODES   0x00000002"

.SS "#define VERBOSE_RENDER   0x00000004"

.SS "#define VERBOSE_VIDEO   0x00000001"

.SH "Function Documentation"
.PP 
.SS "int SDLTest_CommonArg (\fBSDLTest_CommonState\fP * state, int index)"

.PP
Process one common argument\&. 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The common state describing the test window to create\&. 
.br
\fIindex\fP The index of the argument to process in argv[]\&.
.RE
.PP
\fBReturns\fP
.RS 4
the number of arguments processed (i\&.e\&. 1 for --fullscreen, 2 for --video [videodriver], or -1 on error\&. 
.RE
.PP

.SS "\fBSDLTest_CommonState\fP * SDLTest_CommonCreateState (char ** argv, \fBUint32\fP flags)"

.PP
Parse command line parameters and create common state\&. 
.PP
\fBParameters\fP
.RS 4
\fIargv\fP Array of command line parameters 
.br
\fIflags\fP Flags indicating which subsystem to initialize (i\&.e\&. SDL_INIT_VIDEO | SDL_INIT_AUDIO)
.RE
.PP
\fBReturns\fP
.RS 4
a newly allocated common state object\&. 
.RE
.PP

.SS "\fBSDL_bool\fP SDLTest_CommonDefaultArgs (\fBSDLTest_CommonState\fP * state, const int argc, char ** argv)"

.PP
Easy argument handling when test app doesn't need any custom args\&. 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The common state describing the test window to create\&. 
.br
\fIargc\fP argc, as supplied to SDL_main 
.br
\fIargv\fP argv, as supplied to SDL_main
.RE
.PP
\fBReturns\fP
.RS 4
SDL_FALSE if app should quit, true otherwise\&. 
.RE
.PP

.SS "\fBvoid\fP SDLTest_CommonDrawWindowInfo (\fBSDL_Renderer\fP * renderer, \fBSDL_Window\fP * window, int * usedHeight)"

.PP
Draws various window information (position, size, etc\&.) to the renderer\&. 
.PP
\fBParameters\fP
.RS 4
\fIrenderer\fP The renderer to draw to\&. 
.br
\fIwindow\fP The window whose information should be displayed\&. 
.br
\fIusedHeight\fP Returns the height used, so the caller can draw more below\&. 
.RE
.PP

.SS "\fBvoid\fP SDLTest_CommonEvent (\fBSDLTest_CommonState\fP * state, \fBSDL_Event\fP * event, int * done)"

.PP
Common event handler for test windows\&. 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The common state used to create test window\&. 
.br
\fIevent\fP The event to handle\&. 
.br
\fIdone\fP Flag indicating we are done\&. 
.RE
.PP

.SS "\fBSDL_bool\fP SDLTest_CommonInit (\fBSDLTest_CommonState\fP * state)"

.PP
Open test window\&. 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The common state describing the test window to create\&.
.RE
.PP
\fBReturns\fP
.RS 4
SDL_TRUE if initialization succeeded, false otherwise 
.RE
.PP

.SS "\fBvoid\fP SDLTest_CommonLogUsage (\fBSDLTest_CommonState\fP * state, const char * argv0, const char ** options)"

.PP
Logs command line usage info\&. This logs the appropriate command line options for the subsystems in use plus other common options, and then any application-specific options\&. This uses the \fBSDL_Log()\fP function and splits up output to be friendly to 80-character-wide terminals\&.
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The common state describing the test window for the app\&. 
.br
\fIargv0\fP argv[0], as passed to main/SDL_main\&. 
.br
\fIoptions\fP an array of strings for application specific options\&. The last element of the array should be NULL\&. 
.RE
.PP

.SS "\fBvoid\fP SDLTest_CommonQuit (\fBSDLTest_CommonState\fP * state)"

.PP
Close test window\&. 
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The common state used to create test window\&. 
.RE
.PP

.SS "const char * SDLTest_CommonUsage (\fBSDLTest_CommonState\fP * state)"

.PP
Returns common usage information\&. You should (probably) be using \fBSDLTest_CommonLogUsage()\fP instead, but this function remains for binary compatibility\&. Strings returned from this function are valid until \fBSDLTest_CommonQuit()\fP is called, in which case those strings' memory is freed and can no longer be used\&.
.PP
\fBParameters\fP
.RS 4
\fIstate\fP The common state describing the test window to create\&. 
.RE
.PP
\fBReturns\fP
.RS 4
a string with usage information 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for RayTracer from the source code\&.
