<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_md__d___ray_tracing_docs__r_e_a_d_m_e_windows" xml:lang="en-US">

<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
<section xml:id="_md__d___ray_tracing_docs__r_e_a_d_m_e_windows_1autotoc_md121">
<title>OpenGL ES 2.x support</title>

<para>SDL has support for OpenGL ES 2.x under Windows via two alternative implementations. The most straightforward method consists in running your app in a system with a graphic card paired with a relatively recent (as of November of 2013) driver which supports the WGL_EXT_create_context_es2_profile extension. Vendors known to ship said extension on Windows currently include nVidia and Intel.</para>

<para>The other method involves using the ANGLE library (<link xlink:href="https://code.google.com/p/angleproject/">https://code.google.com/p/angleproject/</link>) If an OpenGL ES 2.x context is requested and no WGL_EXT_create_context_es2_profile extension is found, SDL will try to load the libEGL.dll library provided by ANGLE. To obtain the ANGLE binaries, you can either compile from source from <link xlink:href="https://chromium.googlesource.com/angle/angle">https://chromium.googlesource.com/angle/angle</link> or copy the relevant binaries from a recent Chrome/Chromium install for Windows. The files you need are: <literallayout><computeroutput>* libEGL.dll
* libGLESv2.dll
* d3dcompiler_46.dll (supports Windows Vista or later, better shader compiler)
or...
* d3dcompiler_43.dll (supports Windows XP or later)
</computeroutput></literallayout> If you compile ANGLE from source, you can configure it so it does not need the d3dcompiler_* DLL at all (for details on this, see their documentation). However, by default SDL will try to preload the d3dcompiler_46.dll to comply with ANGLE&apos;s requirements. If you wish SDL to preload d3dcompiler_43.dll (to support Windows XP) or to skip this step at all, you can use the SDL_HINT_VIDEO_WIN_D3DCOMPILER hint (see SDL_hints.h for more details).</para>

<para>Known Bugs: <literallayout><computeroutput>* SDL_GL_SetSwapInterval is currently a no op when using ANGLE. It appears
  that there&apos;s a bug in the library which prevents the window contents from
  refreshing if this is set to anything other than the default value.
</computeroutput></literallayout> </para>
</section>
<section xml:id="_md__d___ray_tracing_docs__r_e_a_d_m_e_windows_1autotoc_md122">
<title>Vulkan Surface Support</title>

<para>Support for creating Vulkan surfaces is configured on by default. To disable it change the value of <computeroutput>SDL_VIDEO_VULKAN</computeroutput> to 0 in <computeroutput>SDL_config_windows.h</computeroutput>. You must install the <link xlink:href="https://www.lunarg.com/vulkan-sdk/">Vulkan SDK</link> in order to use Vulkan graphics in your application. </para>
</section>
</section>
