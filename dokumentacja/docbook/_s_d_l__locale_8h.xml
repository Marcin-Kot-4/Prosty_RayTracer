<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__s_d_l__locale_8h" xml:lang="en-US">
<title>D:/RayTracing/include/SDL_locale.h File Reference</title>
<indexterm><primary>D:/RayTracing/include/SDL_locale.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;SDL_stdinc.h&quot;
#include &quot;SDL_error.h&quot;
#include &quot;begin_code.h&quot;
#include &quot;close_code.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_s_d_l___locale">SDL_Locale</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct_s_d_l___locale">SDL_Locale</link> <link linkend="__s_d_l__locale_8h_1a5c754f8e118f475987824610010a53ed">SDL_Locale</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="_struct_s_d_l___locale">SDL_Locale</link> *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__locale_8h_1a3a548844c2f24c9310f579eae7027165">SDL_GetPreferredLocales</link> (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Include file for SDL locale services </para>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="__s_d_l__locale_8h_1a5c754f8e118f475987824610010a53ed"/><section>
    <title>SDL_Locale</title>
<indexterm><primary>SDL_Locale</primary><secondary>SDL_locale.h</secondary></indexterm>
<indexterm><primary>SDL_locale.h</primary><secondary>SDL_Locale</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_s_d_l___locale">SDL_Locale</link> <link linkend="_struct_s_d_l___locale">SDL_Locale</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__s_d_l__locale_8h_1a3a548844c2f24c9310f579eae7027165"/><section>
    <title>SDL_GetPreferredLocales()</title>
<indexterm><primary>SDL_GetPreferredLocales</primary><secondary>SDL_locale.h</secondary></indexterm>
<indexterm><primary>SDL_locale.h</primary><secondary>SDL_GetPreferredLocales</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="_struct_s_d_l___locale">SDL_Locale</link> *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_GetPreferredLocales (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> )</computeroutput></para>
<para>Report the user&apos;s preferred locale.</para>

<para>This returns an array of <link linkend="_struct_s_d_l___locale">SDL_Locale</link> structs, the final item zeroed out. When the caller is done with this array, it should call <link linkend="__s_d_l__stdinc_8h_1a0e4ade894d550ada1fa19dc2d46e88b8">SDL_free()</link> on the returned value; all the memory involved is allocated in a single block, so a single <link linkend="__s_d_l__stdinc_8h_1a0e4ade894d550ada1fa19dc2d46e88b8">SDL_free()</link> will suffice.</para>

<para>Returned language strings are in the format xx, where &apos;xx&apos; is an ISO-639 language specifier (such as &quot;en&quot; for English, &quot;de&quot; for German, etc). Country strings are in the format YY, where &quot;YY&quot; is an ISO-3166 country code (such as &quot;US&quot; for the United States, &quot;CA&quot; for Canada, etc). Country might be NULL if there&apos;s no specific guidance on them (so you might get { &quot;en&quot;, &quot;US&quot; } for American English, but { &quot;en&quot;, NULL } means &quot;English
language, generically&quot;). Language strings are never NULL, except to terminate the array.</para>

<para>Please note that not all of these strings are 2 characters; some are three or more.</para>

<para>The returned list of locales are in the order of the user&apos;s preference. For example, a German citizen that is fluent in US English and knows enough Japanese to navigate around Tokyo might have a list like: { &quot;de&quot;, &quot;en_US&quot;, &quot;jp&quot;, NULL }. Someone from England might prefer British English (where &quot;color&quot; is spelled &quot;colour&quot;, etc), but will settle for anything like it: { &quot;en_GB&quot;, &quot;en&quot;, NULL }.</para>

<para>This function returns NULL on error, including when the platform does not supply this information at all.</para>

<para>This might be a &quot;slow&quot; call that has to query the operating system. It&apos;s best to ask for this once and save the results. However, this list can change, usually because the user has changed a system preference outside of your program; SDL will send an SDL_LOCALECHANGED event in this case, if possible, and you can call this function again to get an updated copy of preferred locales.</para>

<para><formalpara><title>Returns</title>

<para>array of locales, terminated with a locale with a NULL language field. Will return NULL on error.</para>
</formalpara>
<formalpara><title>Since</title>

<para>This function is available since SDL 2.0.14. </para>
</formalpara>
</para>
</section>
</section>
</section>
