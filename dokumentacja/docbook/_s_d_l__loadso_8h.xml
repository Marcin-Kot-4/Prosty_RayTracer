<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__s_d_l__loadso_8h" xml:lang="en-US">
<title>D:/RayTracing/include/SDL_loadso.h File Reference</title>
<indexterm><primary>D:/RayTracing/include/SDL_loadso.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;SDL_stdinc.h&quot;
#include &quot;SDL_error.h&quot;
#include &quot;begin_code.h&quot;
#include &quot;close_code.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__loadso_8h_1ab4adfde098ce42506123b9ddabac5884">SDL_LoadObject</link> (const char *sofile)</para>
</listitem>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__loadso_8h_1a9013bf9ba13dc4f9b7b56ab35c4ef9ba">SDL_LoadFunction</link> (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> *handle, const char *<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>)</para>
</listitem>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> <link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__loadso_8h_1a041e43c276cb826c2034eff220be7fe4">SDL_UnloadObject</link> (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> *handle)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>System dependent library loading routines</para>

<para>Some things to keep in mind: <itemizedlist>
<listitem>
<para>These functions only work on C function names. Other languages may have name mangling and intrinsic language support that varies from compiler to compiler. </para>
</listitem>
<listitem>
<para>Make sure you declare your function pointers with the same calling convention as the actual library function. Your code will crash mysteriously if you do not do this. </para>
</listitem>
<listitem>
<para>Avoid namespace collisions. If you load a symbol from the library, it is not defined whether or not it goes into the global symbol namespace for the application. If it does and it conflicts with symbols in your code or other shared libraries, you will not get the results you expect. :) </para>
</listitem>
</itemizedlist>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__s_d_l__loadso_8h_1a9013bf9ba13dc4f9b7b56ab35c4ef9ba"/><section>
    <title>SDL_LoadFunction()</title>
<indexterm><primary>SDL_LoadFunction</primary><secondary>SDL_loadso.h</secondary></indexterm>
<indexterm><primary>SDL_loadso.h</primary><secondary>SDL_LoadFunction</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_LoadFunction (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> * handle, const char * name)</computeroutput></para>
<para>Look up the address of the named function in a shared object.</para>

<para>This function pointer is no longer valid after calling <link linkend="__s_d_l__loadso_8h_1a041e43c276cb826c2034eff220be7fe4">SDL_UnloadObject()</link>.</para>

<para>This function can only look up C function names. Other languages may have name mangling and intrinsic language support that varies from compiler to compiler.</para>

<para>Make sure you declare your function pointers with the same calling convention as the actual library function. Your code will crash mysteriously if you do not do this.</para>

<para>If the requested function doesn&apos;t exist, NULL is returned.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>handle</entry><entry>
<para>a valid shared object handle returned by <link linkend="__s_d_l__loadso_8h_1ab4adfde098ce42506123b9ddabac5884">SDL_LoadObject()</link> </para>
</entry>
                            </row>
                            <row>
<entry>name</entry><entry>
<para>the name of the function to look up </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>a pointer to the function or NULL if there was an error; call <link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError()</link> for more information.</para>
</formalpara>
<formalpara><title>Since</title>

<para>This function is available since SDL 2.0.0.</para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="__s_d_l__loadso_8h_1ab4adfde098ce42506123b9ddabac5884">SDL_LoadObject</link> </para>

<para><link linkend="__s_d_l__loadso_8h_1a041e43c276cb826c2034eff220be7fe4">SDL_UnloadObject</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__s_d_l__loadso_8h_1ab4adfde098ce42506123b9ddabac5884"/><section>
    <title>SDL_LoadObject()</title>
<indexterm><primary>SDL_LoadObject</primary><secondary>SDL_loadso.h</secondary></indexterm>
<indexterm><primary>SDL_loadso.h</primary><secondary>SDL_LoadObject</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_LoadObject (const char * sofile)</computeroutput></para>
<para>Dynamically load a shared object.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>sofile</entry><entry>
<para>a system-dependent name of the object file </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>an opaque pointer to the object handle or NULL if there was an error; call <link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError()</link> for more information.</para>
</formalpara>
<formalpara><title>Since</title>

<para>This function is available since SDL 2.0.0.</para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="__s_d_l__loadso_8h_1a9013bf9ba13dc4f9b7b56ab35c4ef9ba">SDL_LoadFunction</link> </para>

<para><link linkend="__s_d_l__loadso_8h_1a041e43c276cb826c2034eff220be7fe4">SDL_UnloadObject</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__s_d_l__loadso_8h_1a041e43c276cb826c2034eff220be7fe4"/><section>
    <title>SDL_UnloadObject()</title>
<indexterm><primary>SDL_UnloadObject</primary><secondary>SDL_loadso.h</secondary></indexterm>
<indexterm><primary>SDL_loadso.h</primary><secondary>SDL_UnloadObject</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> <link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_UnloadObject (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> * handle)</computeroutput></para>
<para>Unload a shared object from memory.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>handle</entry><entry>
<para>a valid shared object handle returned by <link linkend="__s_d_l__loadso_8h_1ab4adfde098ce42506123b9ddabac5884">SDL_LoadObject()</link></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Since</title>

<para>This function is available since SDL 2.0.0.</para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="__s_d_l__loadso_8h_1a9013bf9ba13dc4f9b7b56ab35c4ef9ba">SDL_LoadFunction</link> </para>

<para><link linkend="__s_d_l__loadso_8h_1ab4adfde098ce42506123b9ddabac5884">SDL_LoadObject</link> </para>
</formalpara>
</para>
</section>
</section>
</section>
