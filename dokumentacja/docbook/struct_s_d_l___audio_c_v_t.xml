<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_s_d_l___audio_c_v_t" xml:lang="en-US">
<title>SDL_AudioCVT Struct Reference</title>
<indexterm><primary>SDL_AudioCVT</primary></indexterm>
<para>

<para>A structure to hold a set of audio conversion filters and buffers. </para>
 
</para>
<para>
<computeroutput>#include &lt;SDL_audio.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_struct_s_d_l___audio_c_v_t_1ac600a035a48df05e14d3712fd6953ad4">needed</link></para>
</listitem>
            <listitem><para><link linkend="__s_d_l__audio_8h_1a491ed103fd25d920c4e6b7495217ce66">SDL_AudioFormat</link> <link linkend="_struct_s_d_l___audio_c_v_t_1a6ae81231e017105e6d5e745a51732e16">src_format</link></para>
</listitem>
            <listitem><para><link linkend="__s_d_l__audio_8h_1a491ed103fd25d920c4e6b7495217ce66">SDL_AudioFormat</link> <link linkend="_struct_s_d_l___audio_c_v_t_1a8f890d017be857a3b048bf00525736c6">dst_format</link></para>
</listitem>
            <listitem><para>double <link linkend="_struct_s_d_l___audio_c_v_t_1ad886122c23a6673073baace31bff3b6c">rate_incr</link></para>
</listitem>
            <listitem><para><link linkend="__s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2">Uint8</link> * <link linkend="_struct_s_d_l___audio_c_v_t_1a080db27b929efa983c5161360ffce310">buf</link></para>
</listitem>
            <listitem><para>int <link linkend="_struct_s_d_l___audio_c_v_t_1aeaeb8c5a63c3ab96471fbfdf412c78ff">len</link></para>
</listitem>
            <listitem><para>int <link linkend="_struct_s_d_l___audio_c_v_t_1a5c60163f34d1947e5b166c23aba9879d">len_cvt</link></para>
</listitem>
            <listitem><para>int <link linkend="_struct_s_d_l___audio_c_v_t_1ac9662d47cf2348b82b27b151150116b0">len_mult</link></para>
</listitem>
            <listitem><para>double <link linkend="_struct_s_d_l___audio_c_v_t_1a5628ff5ccf711de9d77c0a4a9f57d2f0">len_ratio</link></para>
</listitem>
            <listitem><para>SDL_AudioFilter <link linkend="_struct_s_d_l___audio_c_v_t_1afeb8dc60716644de3b681653442de1db">filters</link> [<link linkend="__s_d_l__audio_8h_1a3d38380ac4a45a68a0e1c1a7a02bd290">SDL_AUDIOCVT_MAX_FILTERS</link>+1]</para>
</listitem>
            <listitem><para>int <link linkend="_struct_s_d_l___audio_c_v_t_1a35093b3ad3331c17416c593a76012b63">filter_index</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>A structure to hold a set of audio conversion filters and buffers. </para>



<para>Note that various parts of the conversion pipeline can take advantage of SIMD operations (like SSE2, for example). <link linkend="_struct_s_d_l___audio_c_v_t">SDL_AudioCVT</link> doesn&apos;t require you to pass it aligned data, but can possibly run much faster if you set both its (buf) field to a pointer that is aligned to 16 bytes, and its (len) field to something that&apos;s a multiple of 16, if possible. </para>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1a080db27b929efa983c5161360ffce310"/><section>
    <title>buf</title>
<indexterm><primary>buf</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>buf</secondary></indexterm>
<para><computeroutput><link linkend="__s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2">Uint8</link>* SDL_AudioCVT::buf</computeroutput></para>
<para>Buffer to hold entire audio data </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1a8f890d017be857a3b048bf00525736c6"/><section>
    <title>dst_format</title>
<indexterm><primary>dst_format</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>dst_format</secondary></indexterm>
<para><computeroutput><link linkend="__s_d_l__audio_8h_1a491ed103fd25d920c4e6b7495217ce66">SDL_AudioFormat</link> SDL_AudioCVT::dst_format</computeroutput></para>
<para>Target audio format </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1a35093b3ad3331c17416c593a76012b63"/><section>
    <title>filter_index</title>
<indexterm><primary>filter_index</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>filter_index</secondary></indexterm>
<para><computeroutput>int SDL_AudioCVT::filter_index</computeroutput></para>
<para>Current audio conversion function </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1afeb8dc60716644de3b681653442de1db"/><section>
    <title>filters</title>
<indexterm><primary>filters</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>filters</secondary></indexterm>
<para><computeroutput>SDL_AudioFilter SDL_AudioCVT::filters[<link linkend="__s_d_l__audio_8h_1a3d38380ac4a45a68a0e1c1a7a02bd290">SDL_AUDIOCVT_MAX_FILTERS</link>+1]</computeroutput></para>
<para>NULL-terminated list of filter functions </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1aeaeb8c5a63c3ab96471fbfdf412c78ff"/><section>
    <title>len</title>
<indexterm><primary>len</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>len</secondary></indexterm>
<para><computeroutput>int SDL_AudioCVT::len</computeroutput></para>
<para>Length of original audio buffer </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1a5c60163f34d1947e5b166c23aba9879d"/><section>
    <title>len_cvt</title>
<indexterm><primary>len_cvt</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>len_cvt</secondary></indexterm>
<para><computeroutput>int SDL_AudioCVT::len_cvt</computeroutput></para>
<para>Length of converted audio buffer </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1ac9662d47cf2348b82b27b151150116b0"/><section>
    <title>len_mult</title>
<indexterm><primary>len_mult</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>len_mult</secondary></indexterm>
<para><computeroutput>int SDL_AudioCVT::len_mult</computeroutput></para>
<para>buffer must be len*len_mult big </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1a5628ff5ccf711de9d77c0a4a9f57d2f0"/><section>
    <title>len_ratio</title>
<indexterm><primary>len_ratio</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>len_ratio</secondary></indexterm>
<para><computeroutput>double SDL_AudioCVT::len_ratio</computeroutput></para>
<para>Given len, final size is len*len_ratio </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1ac600a035a48df05e14d3712fd6953ad4"/><section>
    <title>needed</title>
<indexterm><primary>needed</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>needed</secondary></indexterm>
<para><computeroutput>int SDL_AudioCVT::needed</computeroutput></para>
<para>Set to 1 if conversion possible </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1ad886122c23a6673073baace31bff3b6c"/><section>
    <title>rate_incr</title>
<indexterm><primary>rate_incr</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>rate_incr</secondary></indexterm>
<para><computeroutput>double SDL_AudioCVT::rate_incr</computeroutput></para>
<para>Rate conversion increment </para>
</section>
<anchor xml:id="_struct_s_d_l___audio_c_v_t_1a6ae81231e017105e6d5e745a51732e16"/><section>
    <title>src_format</title>
<indexterm><primary>src_format</primary><secondary>SDL_AudioCVT</secondary></indexterm>
<indexterm><primary>SDL_AudioCVT</primary><secondary>src_format</secondary></indexterm>
<para><computeroutput><link linkend="__s_d_l__audio_8h_1a491ed103fd25d920c4e6b7495217ce66">SDL_AudioFormat</link> SDL_AudioCVT::src_format</computeroutput></para>
<para>Source audio format </para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
D:/RayTracing/include/<link linkend="__s_d_l__audio_8h">SDL_audio.h</link></section>
</section>
