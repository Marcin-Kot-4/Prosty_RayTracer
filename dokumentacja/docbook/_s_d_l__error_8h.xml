<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__s_d_l__error_8h" xml:lang="en-US">
<title>D:/RayTracing/include/SDL_error.h File Reference</title>
<indexterm><primary>D:/RayTracing/include/SDL_error.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;SDL_stdinc.h&quot;
#include &quot;begin_code.h&quot;
#include &quot;close_code.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> int <link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__error_8h_1a26775853eaf43390bbceb27eb21a2240">SDL_SetError</link> (<link linkend="__s_d_l__stdinc_8h_1ab13a729d2e3e2d1e1b3b2dc0bfb858eb">SDL_PRINTF_FORMAT_STRING</link> const char *fmt,...) <link linkend="__s_d_l__stdinc_8h_1ab974676e45d9edeef6598d601d4fdd6a">SDL_PRINTF_VARARG_FUNC</link>(1)</para>
</listitem>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> const char *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError</link> (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link>)</para>
</listitem>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> char *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__error_8h_1a230c4f6ec50e6d035801b506097a3f69">SDL_GetErrorMsg</link> (char *errstr, int maxlen)</para>
</listitem>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> <link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__error_8h_1a007ed517953a99a46e46be567ef5609e">SDL_ClearError</link> (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Internal error functions    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__s_d_l__error_8h_1a440edcb93dba4e39c88ecf8dc676b6c1">SDL_OutOfMemory</link>()   <link linkend="__s_d_l__error_8h_1a0ec05915c315049ed2ab74cfe1ff980f">SDL_Error</link>(<link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1aeaf35f3f31922623b3f773c749c7ae4a">SDL_ENOMEM</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="__s_d_l__error_8h_1a45dc695e3a906dd40f00e204ace3bcf5">SDL_Unsupported</link>()   <link linkend="__s_d_l__error_8h_1a0ec05915c315049ed2ab74cfe1ff980f">SDL_Error</link>(<link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a8f8a44a4f0a0ec7f25ea8e3c88bcd54b">SDL_UNSUPPORTED</link>)</para>
</listitem>
            <listitem><para>#define <link linkend="__s_d_l__error_8h_1a5875c9c083a88408e11abeaa8391dfa5">SDL_InvalidParamError</link>(<link linkend="__s_d_l__opengl__glext_8h_1ac7c896d55e93a6cf7ff8524005b4e7b4">param</link>)   <link linkend="__s_d_l__error_8h_1a26775853eaf43390bbceb27eb21a2240">SDL_SetError</link>(&quot;Parameter &apos;%<link linkend="__s_d_l__opengl_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&apos; is invalid&quot;, (param))</para>
</listitem>
            <listitem><para>enum <link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1">SDL_errorcode</link> { 
<link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1aeaf35f3f31922623b3f773c749c7ae4a">SDL_ENOMEM</link>
, <link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1abf97ce3dad635bff2cd5a97d095b1421">SDL_EFREAD</link>
, <link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a4ef09219815642370515451395f42683">SDL_EFWRITE</link>
, <link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a3eda0d07dbe5bdcf0aeedf9e33866474">SDL_EFSEEK</link>
, 
<link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a8f8a44a4f0a0ec7f25ea8e3c88bcd54b">SDL_UNSUPPORTED</link>
, <link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a41573dd5f912c3648ac06b9dbb89cfcd">SDL_LASTERROR</link>
 }</para>
</listitem>
            <listitem><para><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> int <link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> <link linkend="__s_d_l__error_8h_1a0ec05915c315049ed2ab74cfe1ff980f">SDL_Error</link> (<link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1">SDL_errorcode</link> code)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Simple error message routines for SDL. </para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__s_d_l__error_8h_1a5875c9c083a88408e11abeaa8391dfa5"/><section>
    <title>SDL_InvalidParamError</title>
<indexterm><primary>SDL_InvalidParamError</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_InvalidParamError</secondary></indexterm>
<para><computeroutput>#define SDL_InvalidParamError( <link linkend="__s_d_l__opengl__glext_8h_1ac7c896d55e93a6cf7ff8524005b4e7b4">param</link>)   <link linkend="__s_d_l__error_8h_1a26775853eaf43390bbceb27eb21a2240">SDL_SetError</link>(&quot;Parameter &apos;%<link linkend="__s_d_l__opengl_8h_1a4af680a6c683f88ed67b76f207f2e6e4">s</link>&apos; is invalid&quot;, (param))</computeroutput></para></section>
<anchor xml:id="__s_d_l__error_8h_1a440edcb93dba4e39c88ecf8dc676b6c1"/><section>
    <title>SDL_OutOfMemory</title>
<indexterm><primary>SDL_OutOfMemory</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_OutOfMemory</secondary></indexterm>
<para><computeroutput>#define SDL_OutOfMemory( )   <link linkend="__s_d_l__error_8h_1a0ec05915c315049ed2ab74cfe1ff980f">SDL_Error</link>(<link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1aeaf35f3f31922623b3f773c749c7ae4a">SDL_ENOMEM</link>)</computeroutput></para></section>
<anchor xml:id="__s_d_l__error_8h_1a45dc695e3a906dd40f00e204ace3bcf5"/><section>
    <title>SDL_Unsupported</title>
<indexterm><primary>SDL_Unsupported</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_Unsupported</secondary></indexterm>
<para><computeroutput>#define SDL_Unsupported( )   <link linkend="__s_d_l__error_8h_1a0ec05915c315049ed2ab74cfe1ff980f">SDL_Error</link>(<link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a8f8a44a4f0a0ec7f25ea8e3c88bcd54b">SDL_UNSUPPORTED</link>)</computeroutput></para></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1"/><section>
    <title>SDL_errorcode</title>
<indexterm><primary>SDL_errorcode</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_errorcode</secondary></indexterm>
<para><computeroutput>enum <link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1">SDL_errorcode</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>SDL_ENOMEM</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_ENOMEM</secondary></indexterm>
<anchor xml:id="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1aeaf35f3f31922623b3f773c749c7ae4a"/>SDL_ENOMEM</entry><entry></entry></row><row><entry><indexterm><primary>SDL_EFREAD</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_EFREAD</secondary></indexterm>
<anchor xml:id="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1abf97ce3dad635bff2cd5a97d095b1421"/>SDL_EFREAD</entry><entry></entry></row><row><entry><indexterm><primary>SDL_EFWRITE</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_EFWRITE</secondary></indexterm>
<anchor xml:id="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a4ef09219815642370515451395f42683"/>SDL_EFWRITE</entry><entry></entry></row><row><entry><indexterm><primary>SDL_EFSEEK</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_EFSEEK</secondary></indexterm>
<anchor xml:id="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a3eda0d07dbe5bdcf0aeedf9e33866474"/>SDL_EFSEEK</entry><entry></entry></row><row><entry><indexterm><primary>SDL_UNSUPPORTED</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_UNSUPPORTED</secondary></indexterm>
<anchor xml:id="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a8f8a44a4f0a0ec7f25ea8e3c88bcd54b"/>SDL_UNSUPPORTED</entry><entry></entry></row><row><entry><indexterm><primary>SDL_LASTERROR</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_LASTERROR</secondary></indexterm>
<anchor xml:id="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1a41573dd5f912c3648ac06b9dbb89cfcd"/>SDL_LASTERROR</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="__s_d_l__error_8h_1a007ed517953a99a46e46be567ef5609e"/><section>
    <title>SDL_ClearError()</title>
<indexterm><primary>SDL_ClearError</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_ClearError</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> <link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> <link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_ClearError (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> )</computeroutput></para>
<para>Clear any previous error message for this thread.</para>

<para><formalpara><title>Since</title>

<para>This function is available since SDL 2.0.0.</para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError</link> </para>

<para><link linkend="__s_d_l__error_8h_1a26775853eaf43390bbceb27eb21a2240">SDL_SetError</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__s_d_l__error_8h_1a0ec05915c315049ed2ab74cfe1ff980f"/><section>
    <title>SDL_Error()</title>
<indexterm><primary>SDL_Error</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_Error</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> int <link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_Error (<link linkend="__s_d_l__error_8h_1a5c417ba725f086b33390a5e5d5dabfe1">SDL_errorcode</link> code)</computeroutput></para></section>
<anchor xml:id="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a"/><section>
    <title>SDL_GetError()</title>
<indexterm><primary>SDL_GetError</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_GetError</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> const char *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_GetError (<link linkend="__s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95">void</link> )</computeroutput></para>
<para>Retrieve a message about the last error that occurred on the current thread.</para>

<para>It is possible for multiple errors to occur before calling <link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError()</link>. Only the last error is returned.</para>

<para>The message is only applicable when an SDL function has signaled an error. You must check the return values of SDL function calls to determine when to appropriately call <link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError()</link>. You should <emphasis>not</emphasis> use the results of <link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError()</link> to decide if an error has occurred! Sometimes SDL will set an error string even when reporting success.</para>

<para>SDL will <emphasis>not</emphasis> clear the error string for successful API calls. You <emphasis>must</emphasis> check return values for failure cases before you can assume the error string applies.</para>

<para>Error strings are set per-thread, so an error set in a different thread will not interfere with the current thread&apos;s operation.</para>

<para>The returned string is internally allocated and must not be freed by the application.</para>

<para><formalpara><title>Returns</title>

<para>a message with information about the specific error that occurred, or an empty string if there hasn&apos;t been an error message set since the last call to <link linkend="__s_d_l__error_8h_1a007ed517953a99a46e46be567ef5609e">SDL_ClearError()</link>. The message is only applicable when an SDL function has signaled an error. You must check the return values of SDL function calls to determine when to appropriately call <link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError()</link>.</para>
</formalpara>
<formalpara><title>Since</title>

<para>This function is available since SDL 2.0.0.</para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="__s_d_l__error_8h_1a007ed517953a99a46e46be567ef5609e">SDL_ClearError</link> </para>

<para><link linkend="__s_d_l__error_8h_1a26775853eaf43390bbceb27eb21a2240">SDL_SetError</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__s_d_l__error_8h_1a230c4f6ec50e6d035801b506097a3f69"/><section>
    <title>SDL_GetErrorMsg()</title>
<indexterm><primary>SDL_GetErrorMsg</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_GetErrorMsg</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> char *<link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_GetErrorMsg (char * errstr, int maxlen)</computeroutput></para>
<para>Get the last error message that was set for the current thread.</para>

<para>This allows the caller to copy the error string into a provided buffer, but otherwise operates exactly the same as <link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError()</link>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>errstr</entry><entry>
<para>A buffer to fill with the last error message that was set for the current thread </para>
</entry>
                            </row>
                            <row>
<entry>maxlen</entry><entry>
<para>The size of the buffer pointed to by the errstr parameter </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>the pointer passed in as the <computeroutput>errstr</computeroutput> parameter.</para>
</formalpara>
<formalpara><title>Since</title>

<para>This function is available since SDL 2.0.14.</para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="__s_d_l__error_8h_1a26775853eaf43390bbceb27eb21a2240"/><section>
    <title>SDL_SetError()</title>
<indexterm><primary>SDL_SetError</primary><secondary>SDL_error.h</secondary></indexterm>
<indexterm><primary>SDL_error.h</primary><secondary>SDL_SetError</secondary></indexterm>
<para><computeroutput><link linkend="_begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185">DECLSPEC</link> int <link linkend="_begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401">SDLCALL</link> SDL_SetError (<link linkend="__s_d_l__stdinc_8h_1ab13a729d2e3e2d1e1b3b2dc0bfb858eb">SDL_PRINTF_FORMAT_STRING</link> const char * fmt,  ...)</computeroutput></para>
<para>Set the SDL error message for the current thread.</para>

<para>Calling this function will replace any previous error message that was set.</para>

<para>This function always returns -1, since SDL frequently uses -1 to signify an failing result, leading to this idiom:</para>

<para><literallayout><computeroutput><emphasis role="keywordflow">if</emphasis>&#32;(error_code)&#32;{
&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="__s_d_l__error_8h_1a26775853eaf43390bbceb27eb21a2240">SDL_SetError</link>(<emphasis role="stringliteral">&quot;This&#32;operation&#32;has&#32;failed:&#32;%d&quot;</emphasis>,&#32;error_code);
}
</computeroutput></literallayout></para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>fmt</entry><entry>
<para>a printf()-style message format string </para>
</entry>
                            </row>
                            <row>
<entry>...</entry><entry>
<para>additional parameters matching % tokens in the <computeroutput>fmt</computeroutput> string, if any </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>always -1.</para>
</formalpara>
<formalpara><title>Since</title>

<para>This function is available since SDL 2.0.0.</para>
</formalpara>
<formalpara><title>See also</title>

<para><link linkend="__s_d_l__error_8h_1a007ed517953a99a46e46be567ef5609e">SDL_ClearError</link> </para>

<para><link linkend="__s_d_l__error_8h_1adaef317de186f072f8328798de29d51a">SDL_GetError</link> </para>
</formalpara>
</para>
</section>
</section>
</section>
