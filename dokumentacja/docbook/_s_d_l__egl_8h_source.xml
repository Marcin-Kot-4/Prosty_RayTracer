<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__s_d_l__egl_8h_source" xml:lang="en-US">
<title>SDL_egl.h</title>
<indexterm><primary>D:/RayTracing/include/SDL_egl.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">&#32;&#32;Simple&#32;DirectMedia&#32;Layer</emphasis>
3 <emphasis role="comment">&#32;&#32;Copyright&#32;(C)&#32;1997-2022&#32;Sam&#32;Lantinga&#32;&lt;slouken@libsdl.org&gt;</emphasis>
4 <emphasis role="comment"></emphasis>
5 <emphasis role="comment">&#32;&#32;This&#32;software&#32;is&#32;provided&#32;&apos;as-is&apos;,&#32;without&#32;any&#32;express&#32;or&#32;implied</emphasis>
6 <emphasis role="comment">&#32;&#32;warranty.&#32;&#32;In&#32;no&#32;event&#32;will&#32;the&#32;authors&#32;be&#32;held&#32;liable&#32;for&#32;any&#32;damages</emphasis>
7 <emphasis role="comment">&#32;&#32;arising&#32;from&#32;the&#32;use&#32;of&#32;this&#32;software.</emphasis>
8 <emphasis role="comment"></emphasis>
9 <emphasis role="comment">&#32;&#32;Permission&#32;is&#32;granted&#32;to&#32;anyone&#32;to&#32;use&#32;this&#32;software&#32;for&#32;any&#32;purpose,</emphasis>
10 <emphasis role="comment">&#32;&#32;including&#32;commercial&#32;applications,&#32;and&#32;to&#32;alter&#32;it&#32;and&#32;redistribute&#32;it</emphasis>
11 <emphasis role="comment">&#32;&#32;freely,&#32;subject&#32;to&#32;the&#32;following&#32;restrictions:</emphasis>
12 <emphasis role="comment"></emphasis>
13 <emphasis role="comment">&#32;&#32;1.&#32;The&#32;origin&#32;of&#32;this&#32;software&#32;must&#32;not&#32;be&#32;misrepresented;&#32;you&#32;must&#32;not</emphasis>
14 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;claim&#32;that&#32;you&#32;wrote&#32;the&#32;original&#32;software.&#32;If&#32;you&#32;use&#32;this&#32;software</emphasis>
15 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;in&#32;a&#32;product,&#32;an&#32;acknowledgment&#32;in&#32;the&#32;product&#32;documentation&#32;would&#32;be</emphasis>
16 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;appreciated&#32;but&#32;is&#32;not&#32;required.</emphasis>
17 <emphasis role="comment">&#32;&#32;2.&#32;Altered&#32;source&#32;versions&#32;must&#32;be&#32;plainly&#32;marked&#32;as&#32;such,&#32;and&#32;must&#32;not&#32;be</emphasis>
18 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;misrepresented&#32;as&#32;being&#32;the&#32;original&#32;software.</emphasis>
19 <emphasis role="comment">&#32;&#32;3.&#32;This&#32;notice&#32;may&#32;not&#32;be&#32;removed&#32;or&#32;altered&#32;from&#32;any&#32;source&#32;distribution.</emphasis>
20 <emphasis role="comment">*/</emphasis>
21 
27 <emphasis role="preprocessor">#if&#32;!defined(_MSC_VER)&#32;&amp;&amp;&#32;!defined(__ANDROID__)&#32;&amp;&amp;&#32;!defined(SDL_USE_BUILTIN_OPENGL_DEFINITIONS)</emphasis>
28 
29 <emphasis role="preprocessor">#if&#32;defined(__vita__)&#32;||&#32;defined(__psp2__)</emphasis>
30 <emphasis role="preprocessor">#include&#32;&lt;psp2/types.h&gt;</emphasis>
31 <emphasis role="preprocessor">#endif</emphasis>
32 
33 <emphasis role="preprocessor">#include&#32;&lt;EGL/egl.h&gt;</emphasis>
34 <emphasis role="preprocessor">#include&#32;&lt;EGL/eglext.h&gt;</emphasis>
35 
36 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">/*&#32;_MSC_VER&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
37 
38 <emphasis role="comment">/*&#32;EGL&#32;headers&#32;for&#32;Visual&#32;Studio&#32;*/</emphasis>
39 
40 <emphasis role="preprocessor">#ifndef&#32;__khrplatform_h_</emphasis>
41 <emphasis role="preprocessor">#define&#32;__khrplatform_h_</emphasis>
42 
43 <emphasis role="comment">/*</emphasis>
44 <emphasis role="comment">**&#32;Copyright&#32;(c)&#32;2008-2018&#32;The&#32;Khronos&#32;Group&#32;Inc.</emphasis>
45 <emphasis role="comment">**</emphasis>
46 <emphasis role="comment">**&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a</emphasis>
47 <emphasis role="comment">**&#32;copy&#32;of&#32;this&#32;software&#32;and/or&#32;associated&#32;documentation&#32;files&#32;(the</emphasis>
48 <emphasis role="comment">**&#32;&quot;Materials&quot;),&#32;to&#32;deal&#32;in&#32;the&#32;Materials&#32;without&#32;restriction,&#32;including</emphasis>
49 <emphasis role="comment">**&#32;without&#32;limitation&#32;the&#32;rights&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,</emphasis>
50 <emphasis role="comment">**&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell&#32;copies&#32;of&#32;the&#32;Materials,&#32;and&#32;to</emphasis>
51 <emphasis role="comment">**&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Materials&#32;are&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to</emphasis>
52 <emphasis role="comment">**&#32;the&#32;following&#32;conditions:</emphasis>
53 <emphasis role="comment">**</emphasis>
54 <emphasis role="comment">**&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included</emphasis>
55 <emphasis role="comment">**&#32;in&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Materials.</emphasis>
56 <emphasis role="comment">**</emphasis>
57 <emphasis role="comment">**&#32;THE&#32;MATERIALS&#32;ARE&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,</emphasis>
58 <emphasis role="comment">**&#32;EXPRESS&#32;OR&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF</emphasis>
59 <emphasis role="comment">**&#32;MERCHANTABILITY,&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.</emphasis>
60 <emphasis role="comment">**&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY</emphasis>
61 <emphasis role="comment">**&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,</emphasis>
62 <emphasis role="comment">**&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE</emphasis>
63 <emphasis role="comment">**&#32;MATERIALS&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE&#32;MATERIALS.</emphasis>
64 <emphasis role="comment">*/</emphasis>
65 
66 <emphasis role="comment">/*&#32;Khronos&#32;platform-specific&#32;types&#32;and&#32;definitions.</emphasis>
67 <emphasis role="comment">&#32;*</emphasis>
68 <emphasis role="comment">&#32;*&#32;The&#32;master&#32;copy&#32;of&#32;khrplatform.h&#32;is&#32;maintained&#32;in&#32;the&#32;Khronos&#32;EGL</emphasis>
69 <emphasis role="comment">&#32;*&#32;Registry&#32;repository&#32;at&#32;https://github.com/KhronosGroup/EGL-Registry</emphasis>
70 <emphasis role="comment">&#32;*&#32;The&#32;last&#32;semantic&#32;modification&#32;to&#32;khrplatform.h&#32;was&#32;at&#32;commit&#32;ID:</emphasis>
71 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;67a3e0864c2d75ea5287b9f3d2eb74a745936692</emphasis>
72 <emphasis role="comment">&#32;*</emphasis>
73 <emphasis role="comment">&#32;*&#32;Adopters&#32;may&#32;modify&#32;this&#32;file&#32;to&#32;suit&#32;their&#32;platform.&#32;Adopters&#32;are</emphasis>
74 <emphasis role="comment">&#32;*&#32;encouraged&#32;to&#32;submit&#32;platform&#32;specific&#32;modifications&#32;to&#32;the&#32;Khronos</emphasis>
75 <emphasis role="comment">&#32;*&#32;group&#32;so&#32;that&#32;they&#32;can&#32;be&#32;included&#32;in&#32;future&#32;versions&#32;of&#32;this&#32;file.</emphasis>
76 <emphasis role="comment">&#32;*&#32;Please&#32;submit&#32;changes&#32;by&#32;filing&#32;pull&#32;requests&#32;or&#32;issues&#32;on</emphasis>
77 <emphasis role="comment">&#32;*&#32;the&#32;EGL&#32;Registry&#32;repository&#32;linked&#32;above.</emphasis>
78 <emphasis role="comment">&#32;*</emphasis>
79 <emphasis role="comment">&#32;*</emphasis>
80 <emphasis role="comment">&#32;*&#32;See&#32;the&#32;Implementer&apos;s&#32;Guidelines&#32;for&#32;information&#32;about&#32;where&#32;this&#32;file</emphasis>
81 <emphasis role="comment">&#32;*&#32;should&#32;be&#32;located&#32;on&#32;your&#32;system&#32;and&#32;for&#32;more&#32;details&#32;of&#32;its&#32;use:</emphasis>
82 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;http://www.khronos.org/registry/implementers_guide.pdf</emphasis>
83 <emphasis role="comment">&#32;*</emphasis>
84 <emphasis role="comment">&#32;*&#32;This&#32;file&#32;should&#32;be&#32;included&#32;as</emphasis>
85 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#include&#32;&lt;KHR/khrplatform.h&gt;</emphasis>
86 <emphasis role="comment">&#32;*&#32;by&#32;Khronos&#32;client&#32;API&#32;header&#32;files&#32;that&#32;use&#32;its&#32;types&#32;and&#32;defines.</emphasis>
87 <emphasis role="comment">&#32;*</emphasis>
88 <emphasis role="comment">&#32;*&#32;The&#32;types&#32;in&#32;khrplatform.h&#32;should&#32;only&#32;be&#32;used&#32;to&#32;define&#32;API-specific&#32;types.</emphasis>
89 <emphasis role="comment">&#32;*</emphasis>
90 <emphasis role="comment">&#32;*&#32;Types&#32;defined&#32;in&#32;khrplatform.h:</emphasis>
91 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_int8_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed&#32;&#32;&#32;8&#32;&#32;bit</emphasis>
92 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_uint8_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;8&#32;&#32;bit</emphasis>
93 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_int16_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed&#32;&#32;&#32;16&#32;bit</emphasis>
94 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_uint16_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;16&#32;bit</emphasis>
95 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_int32_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed&#32;&#32;&#32;32&#32;bit</emphasis>
96 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_uint32_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;32&#32;bit</emphasis>
97 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_int64_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed&#32;&#32;&#32;64&#32;bit</emphasis>
98 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_uint64_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;64&#32;bit</emphasis>
99 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_intptr_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed&#32;&#32;&#32;same&#32;number&#32;of&#32;bits&#32;as&#32;a&#32;pointer</emphasis>
100 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_uintptr_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;same&#32;number&#32;of&#32;bits&#32;as&#32;a&#32;pointer</emphasis>
101 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_ssize_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed&#32;&#32;&#32;size</emphasis>
102 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_usize_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;size</emphasis>
103 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_float_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed&#32;&#32;&#32;32&#32;bit&#32;floating&#32;point</emphasis>
104 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_time_ns_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unsigned&#32;64&#32;bit&#32;time&#32;in&#32;nanoseconds</emphasis>
105 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_utime_nanoseconds_t&#32;unsigned&#32;time&#32;interval&#32;or&#32;absolute&#32;time&#32;in</emphasis>
106 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nanoseconds</emphasis>
107 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_stime_nanoseconds_t&#32;signed&#32;time&#32;interval&#32;in&#32;nanoseconds</emphasis>
108 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;khronos_boolean_enum_t&#32;&#32;&#32;&#32;&#32;&#32;enumerated&#32;boolean&#32;type.&#32;This&#32;should</emphasis>
109 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;only&#32;be&#32;used&#32;as&#32;a&#32;base&#32;type&#32;when&#32;a&#32;client&#32;API&apos;s&#32;boolean&#32;type&#32;is</emphasis>
110 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;an&#32;enum.&#32;Client&#32;APIs&#32;which&#32;use&#32;an&#32;integer&#32;or&#32;other&#32;type&#32;for</emphasis>
111 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;booleans&#32;cannot&#32;use&#32;this&#32;as&#32;the&#32;base&#32;type&#32;for&#32;their&#32;boolean.</emphasis>
112 <emphasis role="comment">&#32;*</emphasis>
113 <emphasis role="comment">&#32;*&#32;Tokens&#32;defined&#32;in&#32;khrplatform.h:</emphasis>
114 <emphasis role="comment">&#32;*</emphasis>
115 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;KHRONOS_FALSE,&#32;KHRONOS_TRUE&#32;Enumerated&#32;boolean&#32;false/true&#32;values.</emphasis>
116 <emphasis role="comment">&#32;*</emphasis>
117 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;KHRONOS_SUPPORT_INT64&#32;is&#32;1&#32;if&#32;64&#32;bit&#32;integers&#32;are&#32;supported;&#32;otherwise&#32;0.</emphasis>
118 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;KHRONOS_SUPPORT_FLOAT&#32;is&#32;1&#32;if&#32;floats&#32;are&#32;supported;&#32;otherwise&#32;0.</emphasis>
119 <emphasis role="comment">&#32;*</emphasis>
120 <emphasis role="comment">&#32;*&#32;Calling&#32;convention&#32;macros&#32;defined&#32;in&#32;this&#32;file:</emphasis>
121 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;KHRONOS_APICALL</emphasis>
122 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;KHRONOS_APIENTRY</emphasis>
123 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;KHRONOS_APIATTRIBUTES</emphasis>
124 <emphasis role="comment">&#32;*</emphasis>
125 <emphasis role="comment">&#32;*&#32;These&#32;may&#32;be&#32;used&#32;in&#32;function&#32;prototypes&#32;as:</emphasis>
126 <emphasis role="comment">&#32;*</emphasis>
127 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;KHRONOS_APICALL&#32;void&#32;KHRONOS_APIENTRY&#32;funcname(</emphasis>
128 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;arg1,</emphasis>
129 <emphasis role="comment">&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;arg2)&#32;KHRONOS_APIATTRIBUTES;</emphasis>
130 <emphasis role="comment">&#32;*/</emphasis>
131 
132 <emphasis role="preprocessor">#if&#32;defined(__SCITECH_SNAP__)&#32;&amp;&amp;&#32;!defined(KHRONOS_STATIC)</emphasis>
133 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;KHRONOS_STATIC&#32;1</emphasis>
134 <emphasis role="preprocessor">#endif</emphasis>
135 
136 <emphasis role="comment">/*-------------------------------------------------------------------------</emphasis>
137 <emphasis role="comment">&#32;*&#32;Definition&#32;of&#32;KHRONOS_APICALL</emphasis>
138 <emphasis role="comment">&#32;*-------------------------------------------------------------------------</emphasis>
139 <emphasis role="comment">&#32;*&#32;This&#32;precedes&#32;the&#32;return&#32;type&#32;of&#32;the&#32;function&#32;in&#32;the&#32;function&#32;prototype.</emphasis>
140 <emphasis role="comment">&#32;*/</emphasis>
141 <emphasis role="preprocessor">#if&#32;defined(KHRONOS_STATIC)</emphasis>
142 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;If&#32;the&#32;preprocessor&#32;constant&#32;KHRONOS_STATIC&#32;is&#32;defined,&#32;make&#32;the</emphasis>
143 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;header&#32;compatible&#32;with&#32;static&#32;linking.&#32;*/</emphasis>
144 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;KHRONOS_APICALL</emphasis>
145 <emphasis role="preprocessor">#elif&#32;defined(_WIN32)</emphasis>
146 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;KHRONOS_APICALL&#32;__declspec(dllimport)</emphasis>
147 <emphasis role="preprocessor">#elif&#32;defined&#32;(__SYMBIAN32__)</emphasis>
148 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;KHRONOS_APICALL&#32;IMPORT_C</emphasis>
149 <emphasis role="preprocessor">#elif&#32;defined(__ANDROID__)</emphasis>
150 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;KHRONOS_APICALL&#32;__attribute__((visibility(&quot;default&quot;</emphasis>)))
151 <emphasis role="preprocessor">#else</emphasis>
152 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;KHRONOS_APICALL</emphasis>
153 <emphasis role="preprocessor">#endif</emphasis>
154 
155 <emphasis role="comment">/*-------------------------------------------------------------------------</emphasis>
156 <emphasis role="comment">&#32;*&#32;Definition&#32;of&#32;KHRONOS_APIENTRY</emphasis>
157 <emphasis role="comment">&#32;*-------------------------------------------------------------------------</emphasis>
158 <emphasis role="comment">&#32;*&#32;This&#32;follows&#32;the&#32;return&#32;type&#32;of&#32;the&#32;function&#32;&#32;and&#32;precedes&#32;the&#32;function</emphasis>
159 <emphasis role="comment">&#32;*&#32;name&#32;in&#32;the&#32;function&#32;prototype.</emphasis>
160 <emphasis role="comment">&#32;*/</emphasis>
161 <emphasis role="preprocessor">#if&#32;defined(_WIN32)&#32;&amp;&amp;&#32;!defined(_WIN32_WCE)&#32;&amp;&amp;&#32;!defined(__SCITECH_SNAP__)</emphasis>
162 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Win32&#32;but&#32;not&#32;WinCE&#32;*/</emphasis>
163 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;KHRONOS_APIENTRY&#32;__stdcall</emphasis>
164 <emphasis role="preprocessor">#else</emphasis>
165 <emphasis role="preprocessor">#&#32;&#32;&#32;define&#32;KHRONOS_APIENTRY</emphasis>
166 <emphasis role="preprocessor">#endif</emphasis>
167 
168 <emphasis role="comment">/*-------------------------------------------------------------------------</emphasis>
169 <emphasis role="comment">&#32;*&#32;Definition&#32;of&#32;KHRONOS_APIATTRIBUTES</emphasis>
170 <emphasis role="comment">&#32;*-------------------------------------------------------------------------</emphasis>
171 <emphasis role="comment">&#32;*&#32;This&#32;follows&#32;the&#32;closing&#32;parenthesis&#32;of&#32;the&#32;function&#32;prototype&#32;arguments.</emphasis>
172 <emphasis role="comment">&#32;*/</emphasis>
173 <emphasis role="preprocessor">#if&#32;defined&#32;(__ARMCC_2__)</emphasis>
174 <emphasis role="preprocessor">#define&#32;KHRONOS_APIATTRIBUTES&#32;__softfp</emphasis>
175 <emphasis role="preprocessor">#else</emphasis>
176 <emphasis role="preprocessor">#define&#32;KHRONOS_APIATTRIBUTES</emphasis>
177 <emphasis role="preprocessor">#endif</emphasis>
178 
179 <emphasis role="comment">/*-------------------------------------------------------------------------</emphasis>
180 <emphasis role="comment">&#32;*&#32;basic&#32;type&#32;definitions</emphasis>
181 <emphasis role="comment">&#32;*-----------------------------------------------------------------------*/</emphasis>
182 <emphasis role="preprocessor">#if&#32;(defined(__STDC_VERSION__)&#32;&amp;&amp;&#32;__STDC_VERSION__&#32;&gt;=&#32;199901L)&#32;||&#32;defined(__GNUC__)&#32;||&#32;defined(__SCO__)&#32;||&#32;defined(__USLC__)</emphasis>
183 
184 
185 <emphasis role="comment">/*</emphasis>
186 <emphasis role="comment">&#32;*&#32;Using&#32;&lt;stdint.h&gt;</emphasis>
187 <emphasis role="comment">&#32;*/</emphasis>
188 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
189 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1af409d81dd359bf16ec33a34810a61b7c">khronos_int32_t</link>;
190 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c4a2ace0aee51dc1c2c9827b90a31cf">khronos_uint32_t</link>;
191 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1adec1df1b8b51cb32b77e5b86fff46471">int64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a55dc5b71f5c76458b3bfaa7621520796">khronos_int64_t</link>;
192 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1aaa5d1cd013383c889537491c3cfd9aad">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c07fcf14a1c0f49618f9abd659a3c99">khronos_uint64_t</link>;
193 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_INT64&#32;&#32;&#32;1</emphasis>
194 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_FLOAT&#32;&#32;&#32;1</emphasis>
195 
196 <emphasis role="preprocessor">#elif&#32;defined(__VMS&#32;)&#32;||&#32;defined(__sgi)</emphasis>
197 
198 <emphasis role="comment">/*</emphasis>
199 <emphasis role="comment">&#32;*&#32;Using&#32;&lt;inttypes.h&gt;</emphasis>
200 <emphasis role="comment">&#32;*/</emphasis>
201 <emphasis role="preprocessor">#include&#32;&lt;inttypes.h&gt;</emphasis>
202 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1af409d81dd359bf16ec33a34810a61b7c">khronos_int32_t</link>;
203 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c4a2ace0aee51dc1c2c9827b90a31cf">khronos_uint32_t</link>;
204 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1adec1df1b8b51cb32b77e5b86fff46471">int64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a55dc5b71f5c76458b3bfaa7621520796">khronos_int64_t</link>;
205 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1aaa5d1cd013383c889537491c3cfd9aad">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c07fcf14a1c0f49618f9abd659a3c99">khronos_uint64_t</link>;
206 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_INT64&#32;&#32;&#32;1</emphasis>
207 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_FLOAT&#32;&#32;&#32;1</emphasis>
208 
209 <emphasis role="preprocessor">#elif&#32;defined(_WIN32)&#32;&amp;&amp;&#32;!defined(__SCITECH_SNAP__)</emphasis>
210 
211 <emphasis role="comment">/*</emphasis>
212 <emphasis role="comment">&#32;*&#32;Win32</emphasis>
213 <emphasis role="comment">&#32;*/</emphasis>
214 <emphasis role="keyword">typedef</emphasis>&#32;__int32&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1af409d81dd359bf16ec33a34810a61b7c">khronos_int32_t</link>;
215 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;__int32&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c4a2ace0aee51dc1c2c9827b90a31cf">khronos_uint32_t</link>;
216 <emphasis role="keyword">typedef</emphasis>&#32;__int64&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a55dc5b71f5c76458b3bfaa7621520796">khronos_int64_t</link>;
217 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;__int64&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c07fcf14a1c0f49618f9abd659a3c99">khronos_uint64_t</link>;
218 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_INT64&#32;&#32;&#32;1</emphasis>
219 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_FLOAT&#32;&#32;&#32;1</emphasis>
220 
221 <emphasis role="preprocessor">#elif&#32;defined(__sun__)&#32;||&#32;defined(__digital__)</emphasis>
222 
223 <emphasis role="comment">/*</emphasis>
224 <emphasis role="comment">&#32;*&#32;Sun&#32;or&#32;Digital</emphasis>
225 <emphasis role="comment">&#32;*/</emphasis>
226 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1af409d81dd359bf16ec33a34810a61b7c">khronos_int32_t</link>;
227 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c4a2ace0aee51dc1c2c9827b90a31cf">khronos_uint32_t</link>;
228 <emphasis role="preprocessor">#if&#32;defined(__arch64__)&#32;||&#32;defined(_LP64)</emphasis>
229 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a55dc5b71f5c76458b3bfaa7621520796">khronos_int64_t</link>;
230 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c07fcf14a1c0f49618f9abd659a3c99">khronos_uint64_t</link>;
231 <emphasis role="preprocessor">#else</emphasis>
232 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a55dc5b71f5c76458b3bfaa7621520796">khronos_int64_t</link>;
233 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c07fcf14a1c0f49618f9abd659a3c99">khronos_uint64_t</link>;
234 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__arch64__&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
235 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_INT64&#32;&#32;&#32;1</emphasis>
236 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_FLOAT&#32;&#32;&#32;1</emphasis>
237 
238 <emphasis role="preprocessor">#elif&#32;0</emphasis>
239 
240 <emphasis role="comment">/*</emphasis>
241 <emphasis role="comment">&#32;*&#32;Hypothetical&#32;platform&#32;with&#32;no&#32;float&#32;or&#32;int64&#32;support</emphasis>
242 <emphasis role="comment">&#32;*/</emphasis>
243 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1af409d81dd359bf16ec33a34810a61b7c">khronos_int32_t</link>;
244 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c4a2ace0aee51dc1c2c9827b90a31cf">khronos_uint32_t</link>;
245 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_INT64&#32;&#32;&#32;0</emphasis>
246 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_FLOAT&#32;&#32;&#32;0</emphasis>
247 
248 <emphasis role="preprocessor">#else</emphasis>
249 
250 <emphasis role="comment">/*</emphasis>
251 <emphasis role="comment">&#32;*&#32;Generic&#32;fallback</emphasis>
252 <emphasis role="comment">&#32;*/</emphasis>
253 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
254 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1ab1967d8591af1a4e48c37fd2b0f184d0">int32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1af409d81dd359bf16ec33a34810a61b7c">khronos_int32_t</link>;
255 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1a435d1572bf3f880d55459d9805097f62">uint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c4a2ace0aee51dc1c2c9827b90a31cf">khronos_uint32_t</link>;
256 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1adec1df1b8b51cb32b77e5b86fff46471">int64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a55dc5b71f5c76458b3bfaa7621520796">khronos_int64_t</link>;
257 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__config_8h_1aaa5d1cd013383c889537491c3cfd9aad">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c07fcf14a1c0f49618f9abd659a3c99">khronos_uint64_t</link>;
258 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_INT64&#32;&#32;&#32;1</emphasis>
259 <emphasis role="preprocessor">#define&#32;KHRONOS_SUPPORT_FLOAT&#32;&#32;&#32;1</emphasis>
260 
261 <emphasis role="preprocessor">#endif</emphasis>
262 
263 
264 <emphasis role="comment">/*</emphasis>
265 <emphasis role="comment">&#32;*&#32;Types&#32;that&#32;are&#32;(so&#32;far)&#32;the&#32;same&#32;on&#32;all&#32;platforms</emphasis>
266 <emphasis role="comment">&#32;*/</emphasis>
267 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1afb103620f76ee8c038529cbf0375cfed">khronos_int8_t</link>;
268 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab18f061b993d901e1161a4de18e8fc6b">khronos_uint8_t</link>;
269 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">short</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1aea31402f1f8fad5bec8bdc4dd0919da9">khronos_int16_t</link>;
270 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a99a2182846c1c18bb6629ac57ccbe178">khronos_uint16_t</link>;
271 
272 <emphasis role="comment">/*</emphasis>
273 <emphasis role="comment">&#32;*&#32;Types&#32;that&#32;differ&#32;between&#32;LLP64&#32;and&#32;LP64&#32;architectures&#32;-&#32;in&#32;LLP64,</emphasis>
274 <emphasis role="comment">&#32;*&#32;pointers&#32;are&#32;64&#32;bits,&#32;but&#32;&apos;long&apos;&#32;is&#32;still&#32;32&#32;bits.&#32;Win64&#32;appears</emphasis>
275 <emphasis role="comment">&#32;*&#32;to&#32;be&#32;the&#32;only&#32;LLP64&#32;architecture&#32;in&#32;current&#32;use.</emphasis>
276 <emphasis role="comment">&#32;*/</emphasis>
277 <emphasis role="preprocessor">#ifdef&#32;_WIN64</emphasis>
278 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a182f27e517e990b263b51dc7b5f4ca3f">khronos_intptr_t</link>;
279 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab5f63ab277fa98e81850e4d15f87c19b">khronos_uintptr_t</link>;
280 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8bd045e2edc004c61c2586c7cbcff35d">khronos_ssize_t</link>;
281 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a0e1021b0953a3d0e673c83cc66c58164">khronos_usize_t</link>;
282 <emphasis role="preprocessor">#else</emphasis>
283 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a182f27e517e990b263b51dc7b5f4ca3f">khronos_intptr_t</link>;
284 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab5f63ab277fa98e81850e4d15f87c19b">khronos_uintptr_t</link>;
285 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">signed</emphasis>&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8bd045e2edc004c61c2586c7cbcff35d">khronos_ssize_t</link>;
286 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a0e1021b0953a3d0e673c83cc66c58164">khronos_usize_t</link>;
287 <emphasis role="preprocessor">#endif</emphasis>
288 
289 <emphasis role="preprocessor">#if&#32;KHRONOS_SUPPORT_FLOAT</emphasis>
290 <emphasis role="comment">/*</emphasis>
291 <emphasis role="comment">&#32;*&#32;Float&#32;type</emphasis>
292 <emphasis role="comment">&#32;*/</emphasis>
293 <emphasis role="keyword">typedef</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a1591fab40b33ac5df09dfe668d4c62fe">khronos_float_t</link>;
294 <emphasis role="preprocessor">#endif</emphasis>
295 
296 <emphasis role="preprocessor">#if&#32;KHRONOS_SUPPORT_INT64</emphasis>
297 <emphasis role="comment">/*&#32;Time&#32;types</emphasis>
298 <emphasis role="comment">&#32;*</emphasis>
299 <emphasis role="comment">&#32;*&#32;These&#32;types&#32;can&#32;be&#32;used&#32;to&#32;represent&#32;a&#32;time&#32;interval&#32;in&#32;nanoseconds&#32;or</emphasis>
300 <emphasis role="comment">&#32;*&#32;an&#32;absolute&#32;Unadjusted&#32;System&#32;Time.&#32;&#32;Unadjusted&#32;System&#32;Time&#32;is&#32;the&#32;number</emphasis>
301 <emphasis role="comment">&#32;*&#32;of&#32;nanoseconds&#32;since&#32;some&#32;arbitrary&#32;system&#32;event&#32;(e.g.&#32;since&#32;the&#32;last</emphasis>
302 <emphasis role="comment">&#32;*&#32;time&#32;the&#32;system&#32;booted).&#32;&#32;The&#32;Unadjusted&#32;System&#32;Time&#32;is&#32;an&#32;unsigned</emphasis>
303 <emphasis role="comment">&#32;*&#32;64&#32;bit&#32;value&#32;that&#32;wraps&#32;back&#32;to&#32;0&#32;every&#32;584&#32;years.&#32;&#32;Time&#32;intervals</emphasis>
304 <emphasis role="comment">&#32;*&#32;may&#32;be&#32;either&#32;signed&#32;or&#32;unsigned.</emphasis>
305 <emphasis role="comment">&#32;*/</emphasis>
306 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c07fcf14a1c0f49618f9abd659a3c99">khronos_uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a7643cf38bfc46e0d120a42d586639856">khronos_utime_nanoseconds_t</link>;
307 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a55dc5b71f5c76458b3bfaa7621520796">khronos_int64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1aaec967d90a72559fa6aa12e0160743f8">khronos_stime_nanoseconds_t</link>;
308 <emphasis role="preprocessor">#endif</emphasis>
309 
310 <emphasis role="comment">/*</emphasis>
311 <emphasis role="comment">&#32;*&#32;Dummy&#32;value&#32;used&#32;to&#32;pad&#32;enum&#32;types&#32;to&#32;32&#32;bits.</emphasis>
312 <emphasis role="comment">&#32;*/</emphasis>
313 <emphasis role="preprocessor">#ifndef&#32;KHRONOS_MAX_ENUM</emphasis>
314 <emphasis role="preprocessor">#define&#32;KHRONOS_MAX_ENUM&#32;0x7FFFFFFF</emphasis>
315 <emphasis role="preprocessor">#endif</emphasis>
316 
317 <emphasis role="comment">/*</emphasis>
318 <emphasis role="comment">&#32;*&#32;Enumerated&#32;boolean&#32;type</emphasis>
319 <emphasis role="comment">&#32;*</emphasis>
320 <emphasis role="comment">&#32;*&#32;Values&#32;other&#32;than&#32;zero&#32;should&#32;be&#32;considered&#32;to&#32;be&#32;true.&#32;&#32;Therefore</emphasis>
321 <emphasis role="comment">&#32;*&#32;comparisons&#32;should&#32;not&#32;be&#32;made&#32;against&#32;KHRONOS_TRUE.</emphasis>
322 <emphasis role="comment">&#32;*/</emphasis>
323 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;{
324 &#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a0b823cfbc138820708978d43a5f26c64a37d68e7202b4d30f7742acebb50d1ba6">KHRONOS_FALSE</link>&#32;=&#32;0,
325 &#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a0b823cfbc138820708978d43a5f26c64a9275264520295ae24bc2033c05d6cb70">KHRONOS_TRUE</link>&#32;&#32;=&#32;1,
326 &#32;&#32;&#32;&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a0b823cfbc138820708978d43a5f26c64a47d7d559cf039488acac78e797bc3cf9">KHRONOS_BOOLEAN_ENUM_FORCE_SIZE</link>&#32;=&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1af23931754c6a5adf1892efe8933bf788">KHRONOS_MAX_ENUM</link>
327 }&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a0b823cfbc138820708978d43a5f26c64">khronos_boolean_enum_t</link>;
328 
329 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__khrplatform_h_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
330 
331 
332 <emphasis role="preprocessor">#ifndef&#32;__eglplatform_h_</emphasis>
333 <emphasis role="preprocessor">#define&#32;__eglplatform_h_</emphasis>
334 
335 <emphasis role="comment">/*</emphasis>
336 <emphasis role="comment">**&#32;Copyright&#32;2007-2020&#32;The&#32;Khronos&#32;Group&#32;Inc.</emphasis>
337 <emphasis role="comment">**&#32;SPDX-License-Identifier:&#32;Apache-2.0</emphasis>
338 <emphasis role="comment">*/</emphasis>
339 
340 <emphasis role="comment">/*&#32;Platform-specific&#32;types&#32;and&#32;definitions&#32;for&#32;egl.h</emphasis>
341 <emphasis role="comment">&#32;*</emphasis>
342 <emphasis role="comment">&#32;*&#32;Adopters&#32;may&#32;modify&#32;khrplatform.h&#32;and&#32;this&#32;file&#32;to&#32;suit&#32;their&#32;platform.</emphasis>
343 <emphasis role="comment">&#32;*&#32;You&#32;are&#32;encouraged&#32;to&#32;submit&#32;all&#32;modifications&#32;to&#32;the&#32;Khronos&#32;group&#32;so&#32;that</emphasis>
344 <emphasis role="comment">&#32;*&#32;they&#32;can&#32;be&#32;included&#32;in&#32;future&#32;versions&#32;of&#32;this&#32;file.&#32;&#32;Please&#32;submit&#32;changes</emphasis>
345 <emphasis role="comment">&#32;*&#32;by&#32;filing&#32;an&#32;issue&#32;or&#32;pull&#32;request&#32;on&#32;the&#32;public&#32;Khronos&#32;EGL&#32;Registry,&#32;at</emphasis>
346 <emphasis role="comment">&#32;*&#32;https://www.github.com/KhronosGroup/EGL-Registry/</emphasis>
347 <emphasis role="comment">&#32;*/</emphasis>
348 
349 <emphasis role="comment">/*#include&#32;&lt;KHR/khrplatform.h&gt;*/</emphasis>
350 
351 <emphasis role="comment">/*&#32;Macros&#32;used&#32;in&#32;EGL&#32;function&#32;prototype&#32;declarations.</emphasis>
352 <emphasis role="comment">&#32;*</emphasis>
353 <emphasis role="comment">&#32;*&#32;EGL&#32;functions&#32;should&#32;be&#32;prototyped&#32;as:</emphasis>
354 <emphasis role="comment">&#32;*</emphasis>
355 <emphasis role="comment">&#32;*&#32;EGLAPI&#32;return-type&#32;EGLAPIENTRY&#32;eglFunction(arguments);</emphasis>
356 <emphasis role="comment">&#32;*&#32;typedef&#32;return-type&#32;(EXPAPIENTRYP&#32;PFNEGLFUNCTIONPROC)&#32;(arguments);</emphasis>
357 <emphasis role="comment">&#32;*</emphasis>
358 <emphasis role="comment">&#32;*&#32;KHRONOS_APICALL&#32;and&#32;KHRONOS_APIENTRY&#32;are&#32;defined&#32;in&#32;KHR/khrplatform.h</emphasis>
359 <emphasis role="comment">&#32;*/</emphasis>
360 
361 <emphasis role="preprocessor">#ifndef&#32;EGLAPI</emphasis>
362 <emphasis role="preprocessor">#define&#32;EGLAPI&#32;KHRONOS_APICALL</emphasis>
363 <emphasis role="preprocessor">#endif</emphasis>
364 
365 <emphasis role="preprocessor">#ifndef&#32;EGLAPIENTRY</emphasis>
366 <emphasis role="preprocessor">#define&#32;EGLAPIENTRY&#32;&#32;KHRONOS_APIENTRY</emphasis>
367 <emphasis role="preprocessor">#endif</emphasis>
368 <emphasis role="preprocessor">#define&#32;EGLAPIENTRYP&#32;EGLAPIENTRY*</emphasis>
369 
370 <emphasis role="comment">/*&#32;The&#32;types&#32;NativeDisplayType,&#32;NativeWindowType,&#32;and&#32;NativePixmapType</emphasis>
371 <emphasis role="comment">&#32;*&#32;are&#32;aliases&#32;of&#32;window-system-dependent&#32;types,&#32;such&#32;as&#32;X&#32;Display&#32;*&#32;or</emphasis>
372 <emphasis role="comment">&#32;*&#32;Windows&#32;Device&#32;Context.&#32;They&#32;must&#32;be&#32;defined&#32;in&#32;platform-specific</emphasis>
373 <emphasis role="comment">&#32;*&#32;code&#32;below.&#32;The&#32;EGL-prefixed&#32;versions&#32;of&#32;Native*Type&#32;are&#32;the&#32;same</emphasis>
374 <emphasis role="comment">&#32;*&#32;types,&#32;renamed&#32;in&#32;EGL&#32;1.3&#32;so&#32;all&#32;types&#32;in&#32;the&#32;API&#32;start&#32;with&#32;&quot;EGL&quot;.</emphasis>
375 <emphasis role="comment">&#32;*</emphasis>
376 <emphasis role="comment">&#32;*&#32;Khronos&#32;STRONGLY&#32;RECOMMENDS&#32;that&#32;you&#32;use&#32;the&#32;default&#32;definitions</emphasis>
377 <emphasis role="comment">&#32;*&#32;provided&#32;below,&#32;since&#32;these&#32;changes&#32;affect&#32;both&#32;binary&#32;and&#32;source</emphasis>
378 <emphasis role="comment">&#32;*&#32;portability&#32;of&#32;applications&#32;using&#32;EGL&#32;running&#32;on&#32;different&#32;EGL</emphasis>
379 <emphasis role="comment">&#32;*&#32;implementations.</emphasis>
380 <emphasis role="comment">&#32;*/</emphasis>
381 
382 <emphasis role="preprocessor">#if&#32;defined(EGL_NO_PLATFORM_SPECIFIC_TYPES)</emphasis>
383 
384 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLNativeDisplayType;
385 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLNativePixmapType;
386 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLNativeWindowType;
387 
388 <emphasis role="preprocessor">#elif&#32;defined(_WIN32)&#32;||&#32;defined(__VC32__)&#32;&amp;&amp;&#32;!defined(__CYGWIN__)&#32;&amp;&amp;&#32;!defined(__SCITECH_SNAP__)&#32;</emphasis><emphasis role="comment">/*&#32;Win32&#32;and&#32;WinCE&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
389 <emphasis role="preprocessor">#ifndef&#32;WIN32_LEAN_AND_MEAN</emphasis>
390 <emphasis role="preprocessor">#define&#32;WIN32_LEAN_AND_MEAN&#32;1</emphasis>
391 <emphasis role="preprocessor">#endif</emphasis>
392 <emphasis role="preprocessor">#include&#32;&lt;windows.h&gt;</emphasis>
393 
394 <emphasis role="keyword">typedef</emphasis>&#32;HDC&#32;&#32;&#32;&#32;&#32;EGLNativeDisplayType;
395 <emphasis role="keyword">typedef</emphasis>&#32;HBITMAP&#32;EGLNativePixmapType;
396 <emphasis role="keyword">typedef</emphasis>&#32;HWND&#32;&#32;&#32;&#32;EGLNativeWindowType;
397 
398 <emphasis role="preprocessor">#elif&#32;defined(__EMSCRIPTEN__)</emphasis>
399 
400 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;EGLNativeDisplayType;
401 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;EGLNativePixmapType;
402 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;EGLNativeWindowType;
403 
404 <emphasis role="preprocessor">#elif&#32;defined(__WINSCW__)&#32;||&#32;defined(__SYMBIAN32__)&#32;&#32;</emphasis><emphasis role="comment">/*&#32;Symbian&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
405 
406 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;EGLNativeDisplayType;
407 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLNativePixmapType;
408 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLNativeWindowType;
409 
410 <emphasis role="preprocessor">#elif&#32;defined(WL_EGL_PLATFORM)</emphasis>
411 
412 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_display&#32;&#32;&#32;&#32;&#32;*EGLNativeDisplayType;
413 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_egl_pixmap&#32;&#32;*EGLNativePixmapType;
414 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_egl_window&#32;&#32;*EGLNativeWindowType;
415 
416 <emphasis role="preprocessor">#elif&#32;defined(__GBM__)</emphasis>
417 
418 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>gbm_device&#32;&#32;*EGLNativeDisplayType;
419 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>gbm_bo&#32;&#32;&#32;&#32;&#32;&#32;*EGLNativePixmapType;
420 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*EGLNativeWindowType;
421 
422 <emphasis role="preprocessor">#elif&#32;defined(__ANDROID__)&#32;||&#32;defined(ANDROID)</emphasis>
423 
424 <emphasis role="keyword">struct&#32;</emphasis>ANativeWindow;
425 <emphasis role="keyword">struct&#32;</emphasis>egl_native_pixmap_t;
426 
427 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGLNativeDisplayType;
428 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>egl_native_pixmap_t*&#32;&#32;&#32;&#32;&#32;EGLNativePixmapType;
429 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>ANativeWindow*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGLNativeWindowType;
430 
431 <emphasis role="preprocessor">#elif&#32;defined(USE_OZONE)</emphasis>
432 
433 <emphasis role="keyword">typedef</emphasis>&#32;intptr_t&#32;EGLNativeDisplayType;
434 <emphasis role="keyword">typedef</emphasis>&#32;intptr_t&#32;EGLNativePixmapType;
435 <emphasis role="keyword">typedef</emphasis>&#32;intptr_t&#32;EGLNativeWindowType;
436 
437 <emphasis role="preprocessor">#elif&#32;defined(USE_X11)</emphasis>
438 
439 <emphasis role="comment">/*&#32;X11&#32;(tentative)&#32;&#32;*/</emphasis>
440 <emphasis role="preprocessor">#include&#32;&lt;X11/Xlib.h&gt;</emphasis>
441 <emphasis role="preprocessor">#include&#32;&lt;X11/Xutil.h&gt;</emphasis>
442 
443 <emphasis role="keyword">typedef</emphasis>&#32;Display&#32;*EGLNativeDisplayType;
444 <emphasis role="keyword">typedef</emphasis>&#32;Pixmap&#32;&#32;&#32;EGLNativePixmapType;
445 <emphasis role="keyword">typedef</emphasis>&#32;Window&#32;&#32;&#32;EGLNativeWindowType;
446 
447 <emphasis role="preprocessor">#elif&#32;defined(__unix__)</emphasis>
448 
449 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*EGLNativeDisplayType;
450 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab5f63ab277fa98e81850e4d15f87c19b">khronos_uintptr_t</link>&#32;EGLNativePixmapType;
451 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab5f63ab277fa98e81850e4d15f87c19b">khronos_uintptr_t</link>&#32;EGLNativeWindowType;
452 
453 <emphasis role="preprocessor">#elif&#32;defined(__APPLE__)</emphasis>
454 
455 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;EGLNativeDisplayType;
456 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLNativePixmapType;
457 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLNativeWindowType;
458 
459 <emphasis role="preprocessor">#elif&#32;defined(__HAIKU__)</emphasis>
460 
461 <emphasis role="preprocessor">#include&#32;&lt;kernel/image.h&gt;</emphasis>
462 
463 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*EGLNativeDisplayType;
464 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab5f63ab277fa98e81850e4d15f87c19b">khronos_uintptr_t</link>&#32;&#32;EGLNativePixmapType;
465 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab5f63ab277fa98e81850e4d15f87c19b">khronos_uintptr_t</link>&#32;&#32;EGLNativeWindowType;
466 
467 <emphasis role="preprocessor">#elif&#32;defined(__Fuchsia__)</emphasis>
468 
469 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*EGLNativeDisplayType;
470 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab5f63ab277fa98e81850e4d15f87c19b">khronos_uintptr_t</link>&#32;&#32;EGLNativePixmapType;
471 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1ab5f63ab277fa98e81850e4d15f87c19b">khronos_uintptr_t</link>&#32;&#32;EGLNativeWindowType;
472 
473 <emphasis role="preprocessor">#else</emphasis>
474 <emphasis role="preprocessor">#error&#32;&quot;Platform&#32;not&#32;recognized&quot;</emphasis>
475 <emphasis role="preprocessor">#endif</emphasis>
476 
477 <emphasis role="comment">/*&#32;EGL&#32;1.2&#32;types,&#32;renamed&#32;for&#32;consistency&#32;in&#32;EGL&#32;1.3&#32;*/</emphasis>
478 <emphasis role="keyword">typedef</emphasis>&#32;EGLNativeDisplayType&#32;NativeDisplayType;
479 <emphasis role="keyword">typedef</emphasis>&#32;EGLNativePixmapType&#32;&#32;NativePixmapType;
480 <emphasis role="keyword">typedef</emphasis>&#32;EGLNativeWindowType&#32;&#32;NativeWindowType;
481 
482 
483 <emphasis role="comment">/*&#32;Define&#32;EGLint.&#32;This&#32;must&#32;be&#32;a&#32;signed&#32;integral&#32;type&#32;large&#32;enough&#32;to&#32;contain</emphasis>
484 <emphasis role="comment">&#32;*&#32;all&#32;legal&#32;attribute&#32;names&#32;and&#32;values&#32;passed&#32;into&#32;and&#32;out&#32;of&#32;EGL,&#32;whether</emphasis>
485 <emphasis role="comment">&#32;*&#32;their&#32;type&#32;is&#32;boolean,&#32;bitmask,&#32;enumerant&#32;(symbolic&#32;constant),&#32;integer,</emphasis>
486 <emphasis role="comment">&#32;*&#32;handle,&#32;or&#32;other.&#32;&#32;While&#32;in&#32;general&#32;a&#32;32-bit&#32;integer&#32;will&#32;suffice,&#32;if</emphasis>
487 <emphasis role="comment">&#32;*&#32;handles&#32;are&#32;64&#32;bit&#32;types,&#32;then&#32;EGLint&#32;should&#32;be&#32;defined&#32;as&#32;a&#32;signed&#32;64-bit</emphasis>
488 <emphasis role="comment">&#32;*&#32;integer&#32;type.</emphasis>
489 <emphasis role="comment">&#32;*/</emphasis>
490 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1af409d81dd359bf16ec33a34810a61b7c">khronos_int32_t</link>&#32;EGLint;
491 
492 
493 <emphasis role="comment">/*&#32;C++&#32;/&#32;C&#32;typecast&#32;macros&#32;for&#32;special&#32;EGL&#32;handle&#32;values&#32;*/</emphasis>
494 <emphasis role="preprocessor">#if&#32;defined(__cplusplus)</emphasis>
495 <emphasis role="preprocessor">#define&#32;EGL_CAST(type,&#32;value)&#32;(static_cast&lt;type&gt;(value))</emphasis>
496 <emphasis role="preprocessor">#else</emphasis>
497 <emphasis role="preprocessor">#define&#32;EGL_CAST(type,&#32;value)&#32;((type)&#32;(value))</emphasis>
498 <emphasis role="preprocessor">#endif</emphasis>
499 
500 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__eglplatform_h&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
501 
502 
503 <emphasis role="preprocessor">#ifndef&#32;__egl_h_</emphasis>
504 <emphasis role="preprocessor">#define&#32;__egl_h_&#32;1</emphasis>
505 
506 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
507 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
508 <emphasis role="preprocessor">#endif</emphasis>
509 
510 <emphasis role="comment">/*</emphasis>
511 <emphasis role="comment">**&#32;Copyright&#32;2013-2020&#32;The&#32;Khronos&#32;Group&#32;Inc.</emphasis>
512 <emphasis role="comment">**&#32;SPDX-License-Identifier:&#32;Apache-2.0</emphasis>
513 <emphasis role="comment">**</emphasis>
514 <emphasis role="comment">**&#32;This&#32;header&#32;is&#32;generated&#32;from&#32;the&#32;Khronos&#32;EGL&#32;XML&#32;API&#32;Registry.</emphasis>
515 <emphasis role="comment">**&#32;The&#32;current&#32;version&#32;of&#32;the&#32;Registry,&#32;generator&#32;scripts</emphasis>
516 <emphasis role="comment">**&#32;used&#32;to&#32;make&#32;the&#32;header,&#32;and&#32;the&#32;header&#32;can&#32;be&#32;found&#32;at</emphasis>
517 <emphasis role="comment">**&#32;&#32;&#32;http://www.khronos.org/registry/egl</emphasis>
518 <emphasis role="comment">**</emphasis>
519 <emphasis role="comment">**&#32;Khronos&#32;$Git&#32;commit&#32;SHA1:&#32;b35e89ca9a&#32;$&#32;on&#32;$Git&#32;commit&#32;date:&#32;2021-09-01&#32;09:34:00&#32;+0530&#32;$</emphasis>
520 <emphasis role="comment">*/</emphasis>
521 
522 <emphasis role="comment">/*#include&#32;&lt;EGL/eglplatform.h&gt;*/</emphasis>
523 
524 <emphasis role="preprocessor">#ifndef&#32;EGL_EGL_PROTOTYPES</emphasis>
525 <emphasis role="preprocessor">#define&#32;EGL_EGL_PROTOTYPES&#32;1</emphasis>
526 <emphasis role="preprocessor">#endif</emphasis>
527 
528 <emphasis role="comment">/*&#32;Generated&#32;on&#32;date&#32;20210901&#32;*/</emphasis>
529 
530 <emphasis role="comment">/*&#32;Generated&#32;C&#32;header&#32;for:</emphasis>
531 <emphasis role="comment">&#32;*&#32;API:&#32;egl</emphasis>
532 <emphasis role="comment">&#32;*&#32;Versions&#32;considered:&#32;.*</emphasis>
533 <emphasis role="comment">&#32;*&#32;Versions&#32;emitted:&#32;.*</emphasis>
534 <emphasis role="comment">&#32;*&#32;Default&#32;extensions&#32;included:&#32;None</emphasis>
535 <emphasis role="comment">&#32;*&#32;Additional&#32;extensions&#32;included:&#32;_nomatch_^</emphasis>
536 <emphasis role="comment">&#32;*&#32;Extensions&#32;removed:&#32;_nomatch_^</emphasis>
537 <emphasis role="comment">&#32;*/</emphasis>
538 
539 <emphasis role="preprocessor">#ifndef&#32;EGL_VERSION_1_0</emphasis>
540 <emphasis role="preprocessor">#define&#32;EGL_VERSION_1_0&#32;1</emphasis>
541 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;EGLBoolean;
542 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLDisplay;
543 <emphasis role="comment">/*#include&#32;&lt;KHR/khrplatform.h&gt;*/</emphasis>
544 <emphasis role="comment">/*#include&#32;&lt;EGL/eglplatform.h&gt;*/</emphasis>
545 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLConfig;
546 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLSurface;
547 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLContext;
548 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>&#32;(*__eglMustCastToProperFunctionPointerType)(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
549 <emphasis role="preprocessor">#define&#32;EGL_ALPHA_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3021</emphasis>
550 <emphasis role="preprocessor">#define&#32;EGL_BAD_ACCESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3002</emphasis>
551 <emphasis role="preprocessor">#define&#32;EGL_BAD_ALLOC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3003</emphasis>
552 <emphasis role="preprocessor">#define&#32;EGL_BAD_ATTRIBUTE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3004</emphasis>
553 <emphasis role="preprocessor">#define&#32;EGL_BAD_CONFIG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3005</emphasis>
554 <emphasis role="preprocessor">#define&#32;EGL_BAD_CONTEXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3006</emphasis>
555 <emphasis role="preprocessor">#define&#32;EGL_BAD_CURRENT_SURFACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3007</emphasis>
556 <emphasis role="preprocessor">#define&#32;EGL_BAD_DISPLAY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3008</emphasis>
557 <emphasis role="preprocessor">#define&#32;EGL_BAD_MATCH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3009</emphasis>
558 <emphasis role="preprocessor">#define&#32;EGL_BAD_NATIVE_PIXMAP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x300A</emphasis>
559 <emphasis role="preprocessor">#define&#32;EGL_BAD_NATIVE_WINDOW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x300B</emphasis>
560 <emphasis role="preprocessor">#define&#32;EGL_BAD_PARAMETER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x300C</emphasis>
561 <emphasis role="preprocessor">#define&#32;EGL_BAD_SURFACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x300D</emphasis>
562 <emphasis role="preprocessor">#define&#32;EGL_BLUE_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3022</emphasis>
563 <emphasis role="preprocessor">#define&#32;EGL_BUFFER_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3020</emphasis>
564 <emphasis role="preprocessor">#define&#32;EGL_CONFIG_CAVEAT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3027</emphasis>
565 <emphasis role="preprocessor">#define&#32;EGL_CONFIG_ID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3028</emphasis>
566 <emphasis role="preprocessor">#define&#32;EGL_CORE_NATIVE_ENGINE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x305B</emphasis>
567 <emphasis role="preprocessor">#define&#32;EGL_DEPTH_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3025</emphasis>
568 <emphasis role="preprocessor">#define&#32;EGL_DONT_CARE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLint,-1)</emphasis>
569 <emphasis role="preprocessor">#define&#32;EGL_DRAW&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3059</emphasis>
570 <emphasis role="preprocessor">#define&#32;EGL_EXTENSIONS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3055</emphasis>
571 <emphasis role="preprocessor">#define&#32;EGL_FALSE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
572 <emphasis role="preprocessor">#define&#32;EGL_GREEN_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3023</emphasis>
573 <emphasis role="preprocessor">#define&#32;EGL_HEIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3056</emphasis>
574 <emphasis role="preprocessor">#define&#32;EGL_LARGEST_PBUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3058</emphasis>
575 <emphasis role="preprocessor">#define&#32;EGL_LEVEL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3029</emphasis>
576 <emphasis role="preprocessor">#define&#32;EGL_MAX_PBUFFER_HEIGHT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x302A</emphasis>
577 <emphasis role="preprocessor">#define&#32;EGL_MAX_PBUFFER_PIXELS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x302B</emphasis>
578 <emphasis role="preprocessor">#define&#32;EGL_MAX_PBUFFER_WIDTH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x302C</emphasis>
579 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_RENDERABLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x302D</emphasis>
580 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_VISUAL_ID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x302E</emphasis>
581 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_VISUAL_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x302F</emphasis>
582 <emphasis role="preprocessor">#define&#32;EGL_NONE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3038</emphasis>
583 <emphasis role="preprocessor">#define&#32;EGL_NON_CONFORMANT_CONFIG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3051</emphasis>
584 <emphasis role="preprocessor">#define&#32;EGL_NOT_INITIALIZED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3001</emphasis>
585 <emphasis role="preprocessor">#define&#32;EGL_NO_CONTEXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLContext,0)</emphasis>
586 <emphasis role="preprocessor">#define&#32;EGL_NO_DISPLAY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLDisplay,0)</emphasis>
587 <emphasis role="preprocessor">#define&#32;EGL_NO_SURFACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLSurface,0)</emphasis>
588 <emphasis role="preprocessor">#define&#32;EGL_PBUFFER_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0001</emphasis>
589 <emphasis role="preprocessor">#define&#32;EGL_PIXMAP_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0002</emphasis>
590 <emphasis role="preprocessor">#define&#32;EGL_READ&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x305A</emphasis>
591 <emphasis role="preprocessor">#define&#32;EGL_RED_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3024</emphasis>
592 <emphasis role="preprocessor">#define&#32;EGL_SAMPLES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3031</emphasis>
593 <emphasis role="preprocessor">#define&#32;EGL_SAMPLE_BUFFERS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3032</emphasis>
594 <emphasis role="preprocessor">#define&#32;EGL_SLOW_CONFIG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3050</emphasis>
595 <emphasis role="preprocessor">#define&#32;EGL_STENCIL_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3026</emphasis>
596 <emphasis role="preprocessor">#define&#32;EGL_SUCCESS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3000</emphasis>
597 <emphasis role="preprocessor">#define&#32;EGL_SURFACE_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3033</emphasis>
598 <emphasis role="preprocessor">#define&#32;EGL_TRANSPARENT_BLUE_VALUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3035</emphasis>
599 <emphasis role="preprocessor">#define&#32;EGL_TRANSPARENT_GREEN_VALUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3036</emphasis>
600 <emphasis role="preprocessor">#define&#32;EGL_TRANSPARENT_RED_VALUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3037</emphasis>
601 <emphasis role="preprocessor">#define&#32;EGL_TRANSPARENT_RGB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3052</emphasis>
602 <emphasis role="preprocessor">#define&#32;EGL_TRANSPARENT_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3034</emphasis>
603 <emphasis role="preprocessor">#define&#32;EGL_TRUE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1</emphasis>
604 <emphasis role="preprocessor">#define&#32;EGL_VENDOR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3053</emphasis>
605 <emphasis role="preprocessor">#define&#32;EGL_VERSION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3054</emphasis>
606 <emphasis role="preprocessor">#define&#32;EGL_WIDTH&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3057</emphasis>
607 <emphasis role="preprocessor">#define&#32;EGL_WINDOW_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0004</emphasis>
608 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCHOOSECONFIGPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list,&#32;EGLConfig&#32;*configs,&#32;EGLint&#32;config_size,&#32;EGLint&#32;*num_config);
609 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCOPYBUFFERSPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLNativePixmapType&#32;<link linkend="__s_d_l__opengl__glext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>);
610 <emphasis role="keyword">typedef</emphasis>&#32;EGLContext&#32;(EGLAPIENTRYP&#32;PFNEGLCREATECONTEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLContext&#32;share_context,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
611 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEPBUFFERSURFACEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
612 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEPIXMAPSURFACEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLNativePixmapType&#32;pixmap,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
613 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEWINDOWSURFACEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLNativeWindowType&#32;win,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
614 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLDESTROYCONTEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLContext&#32;ctx);
615 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLDESTROYSURFACEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface);
616 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETCONFIGATTRIBPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
617 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETCONFIGSPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;*configs,&#32;EGLint&#32;config_size,&#32;EGLint&#32;*num_config);
618 <emphasis role="keyword">typedef</emphasis>&#32;EGLDisplay&#32;(EGLAPIENTRYP&#32;PFNEGLGETCURRENTDISPLAYPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
619 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLGETCURRENTSURFACEPROC)&#32;(EGLint&#32;readdraw);
620 <emphasis role="keyword">typedef</emphasis>&#32;EGLDisplay&#32;(EGLAPIENTRYP&#32;PFNEGLGETDISPLAYPROC)&#32;(EGLNativeDisplayType&#32;display_id);
621 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLGETERRORPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
622 <emphasis role="keyword">typedef</emphasis>&#32;__eglMustCastToProperFunctionPointerType&#32;(EGLAPIENTRYP&#32;PFNEGLGETPROCADDRESSPROC)&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*procname);
623 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLINITIALIZEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;*major,&#32;EGLint&#32;*minor);
624 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLMAKECURRENTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;draw,&#32;EGLSurface&#32;read,&#32;EGLContext&#32;ctx);
625 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYCONTEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLContext&#32;ctx,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
626 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*(EGLAPIENTRYP&#32;PFNEGLQUERYSTRINGPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
627 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSURFACEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
628 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSWAPBUFFERSPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface);
629 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLTERMINATEPROC)&#32;(EGLDisplay&#32;dpy);
630 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLWAITGLPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
631 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLWAITNATIVEPROC)&#32;(EGLint&#32;engine);
632 <emphasis role="preprocessor">#if&#32;EGL_EGL_PROTOTYPES</emphasis>
633 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglChooseConfig&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list,&#32;EGLConfig&#32;*configs,&#32;EGLint&#32;config_size,&#32;EGLint&#32;*num_config);
634 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglCopyBuffers&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLNativePixmapType&#32;<link linkend="__s_d_l__opengl__glext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>);
635 EGLAPI&#32;EGLContext&#32;EGLAPIENTRY&#32;eglCreateContext&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLContext&#32;share_context,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
636 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreatePbufferSurface&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
637 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreatePixmapSurface&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLNativePixmapType&#32;pixmap,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
638 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreateWindowSurface&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLNativeWindowType&#32;win,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
639 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglDestroyContext&#32;(EGLDisplay&#32;dpy,&#32;EGLContext&#32;ctx);
640 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglDestroySurface&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface);
641 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetConfigAttrib&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
642 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetConfigs&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;*configs,&#32;EGLint&#32;config_size,&#32;EGLint&#32;*num_config);
643 EGLAPI&#32;EGLDisplay&#32;EGLAPIENTRY&#32;eglGetCurrentDisplay&#32;(<emphasis role="keywordtype">void</emphasis>);
644 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglGetCurrentSurface&#32;(EGLint&#32;readdraw);
645 EGLAPI&#32;EGLDisplay&#32;EGLAPIENTRY&#32;eglGetDisplay&#32;(EGLNativeDisplayType&#32;display_id);
646 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglGetError&#32;(<emphasis role="keywordtype">void</emphasis>);
647 EGLAPI&#32;__eglMustCastToProperFunctionPointerType&#32;EGLAPIENTRY&#32;eglGetProcAddress&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*procname);
648 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglInitialize&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;*major,&#32;EGLint&#32;*minor);
649 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglMakeCurrent&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;draw,&#32;EGLSurface&#32;read,&#32;EGLContext&#32;ctx);
650 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryContext&#32;(EGLDisplay&#32;dpy,&#32;EGLContext&#32;ctx,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
651 EGLAPI&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*EGLAPIENTRY&#32;eglQueryString&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
652 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQuerySurface&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
653 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSwapBuffers&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface);
654 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglTerminate&#32;(EGLDisplay&#32;dpy);
655 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglWaitGL&#32;(<emphasis role="keywordtype">void</emphasis>);
656 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglWaitNative&#32;(EGLint&#32;engine);
657 <emphasis role="preprocessor">#endif</emphasis>
658 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_VERSION_1_0&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
659 
660 <emphasis role="preprocessor">#ifndef&#32;EGL_VERSION_1_1</emphasis>
661 <emphasis role="preprocessor">#define&#32;EGL_VERSION_1_1&#32;1</emphasis>
662 <emphasis role="preprocessor">#define&#32;EGL_BACK_BUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3084</emphasis>
663 <emphasis role="preprocessor">#define&#32;EGL_BIND_TO_TEXTURE_RGB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3039</emphasis>
664 <emphasis role="preprocessor">#define&#32;EGL_BIND_TO_TEXTURE_RGBA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x303A</emphasis>
665 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_LOST&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x300E</emphasis>
666 <emphasis role="preprocessor">#define&#32;EGL_MIN_SWAP_INTERVAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x303B</emphasis>
667 <emphasis role="preprocessor">#define&#32;EGL_MAX_SWAP_INTERVAL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x303C</emphasis>
668 <emphasis role="preprocessor">#define&#32;EGL_MIPMAP_TEXTURE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3082</emphasis>
669 <emphasis role="preprocessor">#define&#32;EGL_MIPMAP_LEVEL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3083</emphasis>
670 <emphasis role="preprocessor">#define&#32;EGL_NO_TEXTURE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x305C</emphasis>
671 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_2D&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x305F</emphasis>
672 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_FORMAT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3080</emphasis>
673 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_RGB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x305D</emphasis>
674 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_RGBA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x305E</emphasis>
675 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_TARGET&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3081</emphasis>
676 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLBINDTEXIMAGEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>);
677 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLRELEASETEXIMAGEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>);
678 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSURFACEATTRIBPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;attribute,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
679 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSWAPINTERVALPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;interval);
680 <emphasis role="preprocessor">#if&#32;EGL_EGL_PROTOTYPES</emphasis>
681 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglBindTexImage&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>);
682 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglReleaseTexImage&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>);
683 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSurfaceAttrib&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;attribute,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
684 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSwapInterval&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;interval);
685 <emphasis role="preprocessor">#endif</emphasis>
686 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_VERSION_1_1&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
687 
688 <emphasis role="preprocessor">#ifndef&#32;EGL_VERSION_1_2</emphasis>
689 <emphasis role="preprocessor">#define&#32;EGL_VERSION_1_2&#32;1</emphasis>
690 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;EGLenum;
691 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLClientBuffer;
692 <emphasis role="preprocessor">#define&#32;EGL_ALPHA_FORMAT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3088</emphasis>
693 <emphasis role="preprocessor">#define&#32;EGL_ALPHA_FORMAT_NONPRE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308B</emphasis>
694 <emphasis role="preprocessor">#define&#32;EGL_ALPHA_FORMAT_PRE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308C</emphasis>
695 <emphasis role="preprocessor">#define&#32;EGL_ALPHA_MASK_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x303E</emphasis>
696 <emphasis role="preprocessor">#define&#32;EGL_BUFFER_PRESERVED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3094</emphasis>
697 <emphasis role="preprocessor">#define&#32;EGL_BUFFER_DESTROYED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3095</emphasis>
698 <emphasis role="preprocessor">#define&#32;EGL_CLIENT_APIS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308D</emphasis>
699 <emphasis role="preprocessor">#define&#32;EGL_COLORSPACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3087</emphasis>
700 <emphasis role="preprocessor">#define&#32;EGL_COLORSPACE_sRGB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3089</emphasis>
701 <emphasis role="preprocessor">#define&#32;EGL_COLORSPACE_LINEAR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308A</emphasis>
702 <emphasis role="preprocessor">#define&#32;EGL_COLOR_BUFFER_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x303F</emphasis>
703 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_CLIENT_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3097</emphasis>
704 <emphasis role="preprocessor">#define&#32;EGL_DISPLAY_SCALING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;10000</emphasis>
705 <emphasis role="preprocessor">#define&#32;EGL_HORIZONTAL_RESOLUTION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3090</emphasis>
706 <emphasis role="preprocessor">#define&#32;EGL_LUMINANCE_BUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308F</emphasis>
707 <emphasis role="preprocessor">#define&#32;EGL_LUMINANCE_SIZE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x303D</emphasis>
708 <emphasis role="preprocessor">#define&#32;EGL_OPENGL_ES_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0001</emphasis>
709 <emphasis role="preprocessor">#define&#32;EGL_OPENVG_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0002</emphasis>
710 <emphasis role="preprocessor">#define&#32;EGL_OPENGL_ES_API&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30A0</emphasis>
711 <emphasis role="preprocessor">#define&#32;EGL_OPENVG_API&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30A1</emphasis>
712 <emphasis role="preprocessor">#define&#32;EGL_OPENVG_IMAGE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3096</emphasis>
713 <emphasis role="preprocessor">#define&#32;EGL_PIXEL_ASPECT_RATIO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3092</emphasis>
714 <emphasis role="preprocessor">#define&#32;EGL_RENDERABLE_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3040</emphasis>
715 <emphasis role="preprocessor">#define&#32;EGL_RENDER_BUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3086</emphasis>
716 <emphasis role="preprocessor">#define&#32;EGL_RGB_BUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308E</emphasis>
717 <emphasis role="preprocessor">#define&#32;EGL_SINGLE_BUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3085</emphasis>
718 <emphasis role="preprocessor">#define&#32;EGL_SWAP_BEHAVIOR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3093</emphasis>
719 <emphasis role="preprocessor">#define&#32;EGL_UNKNOWN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLint,-1)</emphasis>
720 <emphasis role="preprocessor">#define&#32;EGL_VERTICAL_RESOLUTION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3091</emphasis>
721 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLBINDAPIPROC)&#32;(EGLenum&#32;api);
722 <emphasis role="keyword">typedef</emphasis>&#32;EGLenum&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYAPIPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
723 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;buftype,&#32;EGLClientBuffer&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>,&#32;EGLConfig&#32;config,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
724 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLRELEASETHREADPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
725 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLWAITCLIENTPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
726 <emphasis role="preprocessor">#if&#32;EGL_EGL_PROTOTYPES</emphasis>
727 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglBindAPI&#32;(EGLenum&#32;api);
728 EGLAPI&#32;EGLenum&#32;EGLAPIENTRY&#32;eglQueryAPI&#32;(<emphasis role="keywordtype">void</emphasis>);
729 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreatePbufferFromClientBuffer&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;buftype,&#32;EGLClientBuffer&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>,&#32;EGLConfig&#32;config,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
730 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglReleaseThread&#32;(<emphasis role="keywordtype">void</emphasis>);
731 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglWaitClient&#32;(<emphasis role="keywordtype">void</emphasis>);
732 <emphasis role="preprocessor">#endif</emphasis>
733 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_VERSION_1_2&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
734 
735 <emphasis role="preprocessor">#ifndef&#32;EGL_VERSION_1_3</emphasis>
736 <emphasis role="preprocessor">#define&#32;EGL_VERSION_1_3&#32;1</emphasis>
737 <emphasis role="preprocessor">#define&#32;EGL_CONFORMANT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3042</emphasis>
738 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_CLIENT_VERSION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3098</emphasis>
739 <emphasis role="preprocessor">#define&#32;EGL_MATCH_NATIVE_PIXMAP&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3041</emphasis>
740 <emphasis role="preprocessor">#define&#32;EGL_OPENGL_ES2_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0004</emphasis>
741 <emphasis role="preprocessor">#define&#32;EGL_VG_ALPHA_FORMAT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3088</emphasis>
742 <emphasis role="preprocessor">#define&#32;EGL_VG_ALPHA_FORMAT_NONPRE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308B</emphasis>
743 <emphasis role="preprocessor">#define&#32;EGL_VG_ALPHA_FORMAT_PRE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308C</emphasis>
744 <emphasis role="preprocessor">#define&#32;EGL_VG_ALPHA_FORMAT_PRE_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0040</emphasis>
745 <emphasis role="preprocessor">#define&#32;EGL_VG_COLORSPACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3087</emphasis>
746 <emphasis role="preprocessor">#define&#32;EGL_VG_COLORSPACE_sRGB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3089</emphasis>
747 <emphasis role="preprocessor">#define&#32;EGL_VG_COLORSPACE_LINEAR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308A</emphasis>
748 <emphasis role="preprocessor">#define&#32;EGL_VG_COLORSPACE_LINEAR_BIT&#32;&#32;&#32;&#32;&#32;&#32;0x0020</emphasis>
749 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_VERSION_1_3&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
750 
751 <emphasis role="preprocessor">#ifndef&#32;EGL_VERSION_1_4</emphasis>
752 <emphasis role="preprocessor">#define&#32;EGL_VERSION_1_4&#32;1</emphasis>
753 <emphasis role="preprocessor">#define&#32;EGL_DEFAULT_DISPLAY&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLNativeDisplayType,0)</emphasis>
754 <emphasis role="preprocessor">#define&#32;EGL_MULTISAMPLE_RESOLVE_BOX_BIT&#32;&#32;&#32;0x0200</emphasis>
755 <emphasis role="preprocessor">#define&#32;EGL_MULTISAMPLE_RESOLVE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3099</emphasis>
756 <emphasis role="preprocessor">#define&#32;EGL_MULTISAMPLE_RESOLVE_DEFAULT&#32;&#32;&#32;0x309A</emphasis>
757 <emphasis role="preprocessor">#define&#32;EGL_MULTISAMPLE_RESOLVE_BOX&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x309B</emphasis>
758 <emphasis role="preprocessor">#define&#32;EGL_OPENGL_API&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30A2</emphasis>
759 <emphasis role="preprocessor">#define&#32;EGL_OPENGL_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0008</emphasis>
760 <emphasis role="preprocessor">#define&#32;EGL_SWAP_BEHAVIOR_PRESERVED_BIT&#32;&#32;&#32;0x0400</emphasis>
761 <emphasis role="keyword">typedef</emphasis>&#32;EGLContext&#32;(EGLAPIENTRYP&#32;PFNEGLGETCURRENTCONTEXTPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
762 <emphasis role="preprocessor">#if&#32;EGL_EGL_PROTOTYPES</emphasis>
763 EGLAPI&#32;EGLContext&#32;EGLAPIENTRY&#32;eglGetCurrentContext&#32;(<emphasis role="keywordtype">void</emphasis>);
764 <emphasis role="preprocessor">#endif</emphasis>
765 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_VERSION_1_4&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
766 
767 <emphasis role="preprocessor">#ifndef&#32;EGL_VERSION_1_5</emphasis>
768 <emphasis role="preprocessor">#define&#32;EGL_VERSION_1_5&#32;1</emphasis>
769 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLSync;
770 <emphasis role="keyword">typedef</emphasis>&#32;intptr_t&#32;EGLAttrib;
771 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a7643cf38bfc46e0d120a42d586639856">khronos_utime_nanoseconds_t</link>&#32;EGLTime;
772 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLImage;
773 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_MAJOR_VERSION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3098</emphasis>
774 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_MINOR_VERSION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30FB</emphasis>
775 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_PROFILE_MASK&#32;&#32;&#32;0x30FD</emphasis>
776 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY&#32;0x31BD</emphasis>
777 <emphasis role="preprocessor">#define&#32;EGL_NO_RESET_NOTIFICATION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31BE</emphasis>
778 <emphasis role="preprocessor">#define&#32;EGL_LOSE_CONTEXT_ON_RESET&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31BF</emphasis>
779 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT&#32;0x00000001</emphasis>
780 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT&#32;0x00000002</emphasis>
781 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_DEBUG&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31B0</emphasis>
782 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE&#32;0x31B1</emphasis>
783 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_ROBUST_ACCESS&#32;&#32;0x31B2</emphasis>
784 <emphasis role="preprocessor">#define&#32;EGL_OPENGL_ES3_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00000040</emphasis>
785 <emphasis role="preprocessor">#define&#32;EGL_CL_EVENT_HANDLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x309C</emphasis>
786 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CL_EVENT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30FE</emphasis>
787 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CL_EVENT_COMPLETE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30FF</emphasis>
788 <emphasis role="preprocessor">#define&#32;EGL_SYNC_PRIOR_COMMANDS_COMPLETE&#32;&#32;0x30F0</emphasis>
789 <emphasis role="preprocessor">#define&#32;EGL_SYNC_TYPE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F7</emphasis>
790 <emphasis role="preprocessor">#define&#32;EGL_SYNC_STATUS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F1</emphasis>
791 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CONDITION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F8</emphasis>
792 <emphasis role="preprocessor">#define&#32;EGL_SIGNALED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F2</emphasis>
793 <emphasis role="preprocessor">#define&#32;EGL_UNSIGNALED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F3</emphasis>
794 <emphasis role="preprocessor">#define&#32;EGL_SYNC_FLUSH_COMMANDS_BIT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0001</emphasis>
795 <emphasis role="preprocessor">#define&#32;EGL_FOREVER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFull</emphasis>
796 <emphasis role="preprocessor">#define&#32;EGL_TIMEOUT_EXPIRED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F5</emphasis>
797 <emphasis role="preprocessor">#define&#32;EGL_CONDITION_SATISFIED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F6</emphasis>
798 <emphasis role="preprocessor">#define&#32;EGL_NO_SYNC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLSync,0)</emphasis>
799 <emphasis role="preprocessor">#define&#32;EGL_SYNC_FENCE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F9</emphasis>
800 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x309D</emphasis>
801 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_SRGB&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3089</emphasis>
802 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_LINEAR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x308A</emphasis>
803 <emphasis role="preprocessor">#define&#32;EGL_GL_RENDERBUFFER&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30B9</emphasis>
804 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_2D&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30B1</emphasis>
805 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_LEVEL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30BC</emphasis>
806 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_3D&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30B2</emphasis>
807 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_ZOFFSET&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30BD</emphasis>
808 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X&#32;0x30B3</emphasis>
809 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X&#32;0x30B4</emphasis>
810 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y&#32;0x30B5</emphasis>
811 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y&#32;0x30B6</emphasis>
812 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z&#32;0x30B7</emphasis>
813 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z&#32;0x30B8</emphasis>
814 <emphasis role="preprocessor">#define&#32;EGL_IMAGE_PRESERVED&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30D2</emphasis>
815 <emphasis role="preprocessor">#define&#32;EGL_NO_IMAGE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLImage,0)</emphasis>
816 <emphasis role="keyword">typedef</emphasis>&#32;EGLSync&#32;(EGLAPIENTRYP&#32;PFNEGLCREATESYNCPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188">type</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
817 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLDESTROYSYNCPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync);
818 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLCLIENTWAITSYNCPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>,&#32;EGLTime&#32;<link linkend="__s_d_l__opengl__glext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>);
819 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETSYNCATTRIBPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
820 <emphasis role="keyword">typedef</emphasis>&#32;EGLImage&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEIMAGEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLContext&#32;ctx,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>,&#32;EGLClientBuffer&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
821 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLDESTROYIMAGEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLImage&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>);
822 <emphasis role="keyword">typedef</emphasis>&#32;EGLDisplay&#32;(EGLAPIENTRYP&#32;PFNEGLGETPLATFORMDISPLAYPROC)&#32;(EGLenum&#32;platform,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_display,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
823 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEPLATFORMWINDOWSURFACEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_window,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
824 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEPLATFORMPIXMAPSURFACEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_pixmap,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
825 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLWAITSYNCPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>);
826 <emphasis role="preprocessor">#if&#32;EGL_EGL_PROTOTYPES</emphasis>
827 EGLAPI&#32;EGLSync&#32;EGLAPIENTRY&#32;eglCreateSync&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188">type</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
828 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglDestroySync&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync);
829 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglClientWaitSync&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>,&#32;EGLTime&#32;<link linkend="__s_d_l__opengl__glext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>);
830 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetSyncAttrib&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
831 EGLAPI&#32;EGLImage&#32;EGLAPIENTRY&#32;eglCreateImage&#32;(EGLDisplay&#32;dpy,&#32;EGLContext&#32;ctx,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>,&#32;EGLClientBuffer&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
832 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglDestroyImage&#32;(EGLDisplay&#32;dpy,&#32;EGLImage&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>);
833 EGLAPI&#32;EGLDisplay&#32;EGLAPIENTRY&#32;eglGetPlatformDisplay&#32;(EGLenum&#32;platform,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_display,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
834 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreatePlatformWindowSurface&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_window,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
835 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreatePlatformPixmapSurface&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_pixmap,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
836 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglWaitSync&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>);
837 <emphasis role="preprocessor">#endif</emphasis>
838 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_VERSION_1_5&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
839 
840 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
841 }
842 <emphasis role="preprocessor">#endif</emphasis>
843 
844 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__egl_h_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
845 
846 
847 <emphasis role="preprocessor">#ifndef&#32;__eglext_h_</emphasis>
848 <emphasis role="preprocessor">#define&#32;__eglext_h_&#32;1</emphasis>
849 
850 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
851 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>&#32;{
852 <emphasis role="preprocessor">#endif</emphasis>
853 
854 <emphasis role="comment">/*</emphasis>
855 <emphasis role="comment">**&#32;Copyright&#32;2013-2020&#32;The&#32;Khronos&#32;Group&#32;Inc.</emphasis>
856 <emphasis role="comment">**&#32;SPDX-License-Identifier:&#32;Apache-2.0</emphasis>
857 <emphasis role="comment">**</emphasis>
858 <emphasis role="comment">**&#32;This&#32;header&#32;is&#32;generated&#32;from&#32;the&#32;Khronos&#32;EGL&#32;XML&#32;API&#32;Registry.</emphasis>
859 <emphasis role="comment">**&#32;The&#32;current&#32;version&#32;of&#32;the&#32;Registry,&#32;generator&#32;scripts</emphasis>
860 <emphasis role="comment">**&#32;used&#32;to&#32;make&#32;the&#32;header,&#32;and&#32;the&#32;header&#32;can&#32;be&#32;found&#32;at</emphasis>
861 <emphasis role="comment">**&#32;&#32;&#32;http://www.khronos.org/registry/egl</emphasis>
862 <emphasis role="comment">**</emphasis>
863 <emphasis role="comment">**&#32;Khronos&#32;$Git&#32;commit&#32;SHA1:&#32;b35e89ca9a&#32;$&#32;on&#32;$Git&#32;commit&#32;date:&#32;2021-09-01&#32;09:34:00&#32;+0530&#32;$</emphasis>
864 <emphasis role="comment">*/</emphasis>
865 
866 <emphasis role="comment">/*#include&#32;&lt;EGL/eglplatform.h&gt;*/</emphasis>
867 
868 <emphasis role="preprocessor">#define&#32;EGL_EGLEXT_VERSION&#32;20210901</emphasis>
869 
870 <emphasis role="comment">/*&#32;Generated&#32;C&#32;header&#32;for:</emphasis>
871 <emphasis role="comment">&#32;*&#32;API:&#32;egl</emphasis>
872 <emphasis role="comment">&#32;*&#32;Versions&#32;considered:&#32;.*</emphasis>
873 <emphasis role="comment">&#32;*&#32;Versions&#32;emitted:&#32;_nomatch_^</emphasis>
874 <emphasis role="comment">&#32;*&#32;Default&#32;extensions&#32;included:&#32;egl</emphasis>
875 <emphasis role="comment">&#32;*&#32;Additional&#32;extensions&#32;included:&#32;_nomatch_^</emphasis>
876 <emphasis role="comment">&#32;*&#32;Extensions&#32;removed:&#32;_nomatch_^</emphasis>
877 <emphasis role="comment">&#32;*/</emphasis>
878 
879 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_cl_event</emphasis>
880 <emphasis role="preprocessor">#define&#32;EGL_KHR_cl_event&#32;1</emphasis>
881 <emphasis role="preprocessor">#define&#32;EGL_CL_EVENT_HANDLE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x309C</emphasis>
882 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CL_EVENT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30FE</emphasis>
883 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CL_EVENT_COMPLETE_KHR&#32;&#32;&#32;&#32;0x30FF</emphasis>
884 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_cl_event&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
885 
886 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_cl_event2</emphasis>
887 <emphasis role="preprocessor">#define&#32;EGL_KHR_cl_event2&#32;1</emphasis>
888 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLSyncKHR;
889 <emphasis role="keyword">typedef</emphasis>&#32;intptr_t&#32;EGLAttribKHR;
890 <emphasis role="keyword">typedef</emphasis>&#32;EGLSyncKHR&#32;(EGLAPIENTRYP&#32;PFNEGLCREATESYNC64KHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188">type</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttribKHR&#32;*attrib_list);
891 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
892 EGLAPI&#32;EGLSyncKHR&#32;EGLAPIENTRY&#32;eglCreateSync64KHR&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188">type</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttribKHR&#32;*attrib_list);
893 <emphasis role="preprocessor">#endif</emphasis>
894 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_cl_event2&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
895 
896 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_client_get_all_proc_addresses</emphasis>
897 <emphasis role="preprocessor">#define&#32;EGL_KHR_client_get_all_proc_addresses&#32;1</emphasis>
898 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_client_get_all_proc_addresses&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
899 
900 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_config_attribs</emphasis>
901 <emphasis role="preprocessor">#define&#32;EGL_KHR_config_attribs&#32;1</emphasis>
902 <emphasis role="preprocessor">#define&#32;EGL_CONFORMANT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3042</emphasis>
903 <emphasis role="preprocessor">#define&#32;EGL_VG_COLORSPACE_LINEAR_BIT_KHR&#32;&#32;0x0020</emphasis>
904 <emphasis role="preprocessor">#define&#32;EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR&#32;&#32;&#32;0x0040</emphasis>
905 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_config_attribs&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
906 
907 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_context_flush_control</emphasis>
908 <emphasis role="preprocessor">#define&#32;EGL_KHR_context_flush_control&#32;1</emphasis>
909 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_RELEASE_BEHAVIOR_NONE_KHR&#32;0</emphasis>
910 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_RELEASE_BEHAVIOR_KHR&#32;&#32;0x2097</emphasis>
911 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR&#32;0x2098</emphasis>
912 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_context_flush_control&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
913 
914 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_create_context</emphasis>
915 <emphasis role="preprocessor">#define&#32;EGL_KHR_create_context&#32;1</emphasis>
916 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_MAJOR_VERSION_KHR&#32;&#32;&#32;&#32;&#32;0x3098</emphasis>
917 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_MINOR_VERSION_KHR&#32;&#32;&#32;&#32;&#32;0x30FB</emphasis>
918 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_FLAGS_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30FC</emphasis>
919 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR&#32;0x30FD</emphasis>
920 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR&#32;0x31BD</emphasis>
921 <emphasis role="preprocessor">#define&#32;EGL_NO_RESET_NOTIFICATION_KHR&#32;&#32;&#32;&#32;&#32;0x31BE</emphasis>
922 <emphasis role="preprocessor">#define&#32;EGL_LOSE_CONTEXT_ON_RESET_KHR&#32;&#32;&#32;&#32;&#32;0x31BF</emphasis>
923 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR&#32;&#32;0x00000001</emphasis>
924 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR&#32;0x00000002</emphasis>
925 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR&#32;0x00000004</emphasis>
926 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR&#32;0x00000001</emphasis>
927 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR&#32;0x00000002</emphasis>
928 <emphasis role="preprocessor">#define&#32;EGL_OPENGL_ES3_BIT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00000040</emphasis>
929 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_create_context&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
930 
931 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_create_context_no_error</emphasis>
932 <emphasis role="preprocessor">#define&#32;EGL_KHR_create_context_no_error&#32;1</emphasis>
933 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_NO_ERROR_KHR&#32;&#32;&#32;0x31B3</emphasis>
934 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_create_context_no_error&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
935 
936 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_debug</emphasis>
937 <emphasis role="preprocessor">#define&#32;EGL_KHR_debug&#32;1</emphasis>
938 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLLabelKHR;
939 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLObjectKHR;
940 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>&#32;(EGLAPIENTRY&#32;&#32;*EGLDEBUGPROCKHR)(EGLenum&#32;error,<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*command,EGLint&#32;messageType,EGLLabelKHR&#32;threadLabel,EGLLabelKHR&#32;objectLabel,<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="__s_d_l__opengl__glext_8h_1a7b6161cffb9b8aee272b3b916183d28c">message</link>);
941 <emphasis role="preprocessor">#define&#32;EGL_OBJECT_THREAD_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B0</emphasis>
942 <emphasis role="preprocessor">#define&#32;EGL_OBJECT_DISPLAY_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B1</emphasis>
943 <emphasis role="preprocessor">#define&#32;EGL_OBJECT_CONTEXT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B2</emphasis>
944 <emphasis role="preprocessor">#define&#32;EGL_OBJECT_SURFACE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B3</emphasis>
945 <emphasis role="preprocessor">#define&#32;EGL_OBJECT_IMAGE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B4</emphasis>
946 <emphasis role="preprocessor">#define&#32;EGL_OBJECT_SYNC_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B5</emphasis>
947 <emphasis role="preprocessor">#define&#32;EGL_OBJECT_STREAM_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B6</emphasis>
948 <emphasis role="preprocessor">#define&#32;EGL_DEBUG_MSG_CRITICAL_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B9</emphasis>
949 <emphasis role="preprocessor">#define&#32;EGL_DEBUG_MSG_ERROR_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33BA</emphasis>
950 <emphasis role="preprocessor">#define&#32;EGL_DEBUG_MSG_WARN_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33BB</emphasis>
951 <emphasis role="preprocessor">#define&#32;EGL_DEBUG_MSG_INFO_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33BC</emphasis>
952 <emphasis role="preprocessor">#define&#32;EGL_DEBUG_CALLBACK_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33B8</emphasis>
953 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLDEBUGMESSAGECONTROLKHRPROC)&#32;(EGLDEBUGPROCKHR&#32;callback,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
954 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDEBUGKHRPROC)&#32;(EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
955 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLLABELOBJECTKHRPROC)&#32;(EGLDisplay&#32;display,&#32;EGLenum&#32;objectType,&#32;EGLObjectKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1ab49790263c78300fbf05719e38246198">object</link>,&#32;EGLLabelKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a9371a1f53f8067997cd15aaf657c62d0">label</link>);
956 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
957 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglDebugMessageControlKHR&#32;(EGLDEBUGPROCKHR&#32;callback,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
958 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDebugKHR&#32;(EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
959 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglLabelObjectKHR&#32;(EGLDisplay&#32;display,&#32;EGLenum&#32;objectType,&#32;EGLObjectKHR&#32;<emphasis role="keywordtype">object</emphasis>,&#32;EGLLabelKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a9371a1f53f8067997cd15aaf657c62d0">label</link>);
960 <emphasis role="preprocessor">#endif</emphasis>
961 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_debug&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
962 
963 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_display_reference</emphasis>
964 <emphasis role="preprocessor">#define&#32;EGL_KHR_display_reference&#32;1</emphasis>
965 <emphasis role="preprocessor">#define&#32;EGL_TRACK_REFERENCES_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3352</emphasis>
966 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDISPLAYATTRIBKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
967 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
968 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDisplayAttribKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
969 <emphasis role="preprocessor">#endif</emphasis>
970 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_display_reference&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
971 
972 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_fence_sync</emphasis>
973 <emphasis role="preprocessor">#define&#32;EGL_KHR_fence_sync&#32;1</emphasis>
974 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a7643cf38bfc46e0d120a42d586639856">khronos_utime_nanoseconds_t</link>&#32;EGLTimeKHR;
975 <emphasis role="preprocessor">#ifdef&#32;KHRONOS_SUPPORT_INT64</emphasis>
976 <emphasis role="preprocessor">#define&#32;EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR&#32;0x30F0</emphasis>
977 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CONDITION_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F8</emphasis>
978 <emphasis role="preprocessor">#define&#32;EGL_SYNC_FENCE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F9</emphasis>
979 <emphasis role="keyword">typedef</emphasis>&#32;EGLSyncKHR&#32;(EGLAPIENTRYP&#32;PFNEGLCREATESYNCKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188">type</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
980 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLDESTROYSYNCKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync);
981 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLCLIENTWAITSYNCKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>,&#32;EGLTimeKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>);
982 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETSYNCATTRIBKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
983 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
984 EGLAPI&#32;EGLSyncKHR&#32;EGLAPIENTRY&#32;eglCreateSyncKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188">type</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
985 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglDestroySyncKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync);
986 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglClientWaitSyncKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>,&#32;EGLTimeKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>);
987 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetSyncAttribKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
988 <emphasis role="preprocessor">#endif</emphasis>
989 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KHRONOS_SUPPORT_INT64&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
990 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_fence_sync&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
991 
992 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_get_all_proc_addresses</emphasis>
993 <emphasis role="preprocessor">#define&#32;EGL_KHR_get_all_proc_addresses&#32;1</emphasis>
994 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_get_all_proc_addresses&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
995 
996 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_gl_colorspace</emphasis>
997 <emphasis role="preprocessor">#define&#32;EGL_KHR_gl_colorspace&#32;1</emphasis>
998 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x309D</emphasis>
999 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_SRGB_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3089</emphasis>
1000 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_LINEAR_KHR&#32;&#32;&#32;&#32;&#32;&#32;0x308A</emphasis>
1001 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_gl_colorspace&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1002 
1003 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_gl_renderbuffer_image</emphasis>
1004 <emphasis role="preprocessor">#define&#32;EGL_KHR_gl_renderbuffer_image&#32;1</emphasis>
1005 <emphasis role="preprocessor">#define&#32;EGL_GL_RENDERBUFFER_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30B9</emphasis>
1006 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_gl_renderbuffer_image&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1007 
1008 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_gl_texture_2D_image</emphasis>
1009 <emphasis role="preprocessor">#define&#32;EGL_KHR_gl_texture_2D_image&#32;1</emphasis>
1010 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_2D_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30B1</emphasis>
1011 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_LEVEL_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30BC</emphasis>
1012 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_gl_texture_2D_image&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1013 
1014 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_gl_texture_3D_image</emphasis>
1015 <emphasis role="preprocessor">#define&#32;EGL_KHR_gl_texture_3D_image&#32;1</emphasis>
1016 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_3D_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30B2</emphasis>
1017 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_ZOFFSET_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30BD</emphasis>
1018 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_gl_texture_3D_image&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1019 
1020 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_gl_texture_cubemap_image</emphasis>
1021 <emphasis role="preprocessor">#define&#32;EGL_KHR_gl_texture_cubemap_image&#32;1</emphasis>
1022 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR&#32;0x30B3</emphasis>
1023 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR&#32;0x30B4</emphasis>
1024 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR&#32;0x30B5</emphasis>
1025 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR&#32;0x30B6</emphasis>
1026 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR&#32;0x30B7</emphasis>
1027 <emphasis role="preprocessor">#define&#32;EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR&#32;0x30B8</emphasis>
1028 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_gl_texture_cubemap_image&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1029 
1030 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_image</emphasis>
1031 <emphasis role="preprocessor">#define&#32;EGL_KHR_image&#32;1</emphasis>
1032 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLImageKHR;
1033 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_PIXMAP_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30B0</emphasis>
1034 <emphasis role="preprocessor">#define&#32;EGL_NO_IMAGE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLImageKHR,0)</emphasis>
1035 <emphasis role="keyword">typedef</emphasis>&#32;EGLImageKHR&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEIMAGEKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLContext&#32;ctx,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>,&#32;EGLClientBuffer&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1036 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLDESTROYIMAGEKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>);
1037 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1038 EGLAPI&#32;EGLImageKHR&#32;EGLAPIENTRY&#32;eglCreateImageKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLContext&#32;ctx,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1af9d0cbbbeb7414e786c41899e5a856d7">target</link>,&#32;EGLClientBuffer&#32;<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1039 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglDestroyImageKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>);
1040 <emphasis role="preprocessor">#endif</emphasis>
1041 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_image&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1042 
1043 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_image_base</emphasis>
1044 <emphasis role="preprocessor">#define&#32;EGL_KHR_image_base&#32;1</emphasis>
1045 <emphasis role="preprocessor">#define&#32;EGL_IMAGE_PRESERVED_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30D2</emphasis>
1046 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_image_base&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1047 
1048 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_image_pixmap</emphasis>
1049 <emphasis role="preprocessor">#define&#32;EGL_KHR_image_pixmap&#32;1</emphasis>
1050 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_image_pixmap&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1051 
1052 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_lock_surface</emphasis>
1053 <emphasis role="preprocessor">#define&#32;EGL_KHR_lock_surface&#32;1</emphasis>
1054 <emphasis role="preprocessor">#define&#32;EGL_READ_SURFACE_BIT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0001</emphasis>
1055 <emphasis role="preprocessor">#define&#32;EGL_WRITE_SURFACE_BIT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0002</emphasis>
1056 <emphasis role="preprocessor">#define&#32;EGL_LOCK_SURFACE_BIT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0080</emphasis>
1057 <emphasis role="preprocessor">#define&#32;EGL_OPTIMAL_FORMAT_BIT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0100</emphasis>
1058 <emphasis role="preprocessor">#define&#32;EGL_MATCH_FORMAT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3043</emphasis>
1059 <emphasis role="preprocessor">#define&#32;EGL_FORMAT_RGB_565_EXACT_KHR&#32;&#32;&#32;&#32;&#32;&#32;0x30C0</emphasis>
1060 <emphasis role="preprocessor">#define&#32;EGL_FORMAT_RGB_565_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30C1</emphasis>
1061 <emphasis role="preprocessor">#define&#32;EGL_FORMAT_RGBA_8888_EXACT_KHR&#32;&#32;&#32;&#32;0x30C2</emphasis>
1062 <emphasis role="preprocessor">#define&#32;EGL_FORMAT_RGBA_8888_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30C3</emphasis>
1063 <emphasis role="preprocessor">#define&#32;EGL_MAP_PRESERVE_PIXELS_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30C4</emphasis>
1064 <emphasis role="preprocessor">#define&#32;EGL_LOCK_USAGE_HINT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30C5</emphasis>
1065 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_POINTER_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30C6</emphasis>
1066 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_PITCH_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30C7</emphasis>
1067 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_ORIGIN_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30C8</emphasis>
1068 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_PIXEL_RED_OFFSET_KHR&#32;&#32;&#32;0x30C9</emphasis>
1069 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR&#32;0x30CA</emphasis>
1070 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR&#32;&#32;0x30CB</emphasis>
1071 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR&#32;0x30CC</emphasis>
1072 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR&#32;0x30CD</emphasis>
1073 <emphasis role="preprocessor">#define&#32;EGL_LOWER_LEFT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30CE</emphasis>
1074 <emphasis role="preprocessor">#define&#32;EGL_UPPER_LEFT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30CF</emphasis>
1075 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLLOCKSURFACEKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1076 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLUNLOCKSURFACEKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface);
1077 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1078 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglLockSurfaceKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1079 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglUnlockSurfaceKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface);
1080 <emphasis role="preprocessor">#endif</emphasis>
1081 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_lock_surface&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1082 
1083 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_lock_surface2</emphasis>
1084 <emphasis role="preprocessor">#define&#32;EGL_KHR_lock_surface2&#32;1</emphasis>
1085 <emphasis role="preprocessor">#define&#32;EGL_BITMAP_PIXEL_SIZE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3110</emphasis>
1086 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_lock_surface2&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1087 
1088 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_lock_surface3</emphasis>
1089 <emphasis role="preprocessor">#define&#32;EGL_KHR_lock_surface3&#32;1</emphasis>
1090 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSURFACE64KHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;attribute,&#32;EGLAttribKHR&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1091 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1092 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQuerySurface64KHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;attribute,&#32;EGLAttribKHR&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1093 <emphasis role="preprocessor">#endif</emphasis>
1094 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_lock_surface3&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1095 
1096 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_mutable_render_buffer</emphasis>
1097 <emphasis role="preprocessor">#define&#32;EGL_KHR_mutable_render_buffer&#32;1</emphasis>
1098 <emphasis role="preprocessor">#define&#32;EGL_MUTABLE_RENDER_BUFFER_BIT_KHR&#32;0x1000</emphasis>
1099 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_mutable_render_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1100 
1101 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_no_config_context</emphasis>
1102 <emphasis role="preprocessor">#define&#32;EGL_KHR_no_config_context&#32;1</emphasis>
1103 <emphasis role="preprocessor">#define&#32;EGL_NO_CONFIG_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLConfig,0)</emphasis>
1104 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_no_config_context&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1105 
1106 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_partial_update</emphasis>
1107 <emphasis role="preprocessor">#define&#32;EGL_KHR_partial_update&#32;1</emphasis>
1108 <emphasis role="preprocessor">#define&#32;EGL_BUFFER_AGE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x313D</emphasis>
1109 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSETDAMAGEREGIONKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;*rects,&#32;EGLint&#32;n_rects);
1110 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1111 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSetDamageRegionKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;*rects,&#32;EGLint&#32;n_rects);
1112 <emphasis role="preprocessor">#endif</emphasis>
1113 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_partial_update&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1114 
1115 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_platform_android</emphasis>
1116 <emphasis role="preprocessor">#define&#32;EGL_KHR_platform_android&#32;1</emphasis>
1117 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_ANDROID_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3141</emphasis>
1118 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_platform_android&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1119 
1120 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_platform_gbm</emphasis>
1121 <emphasis role="preprocessor">#define&#32;EGL_KHR_platform_gbm&#32;1</emphasis>
1122 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_GBM_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D7</emphasis>
1123 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_platform_gbm&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1124 
1125 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_platform_wayland</emphasis>
1126 <emphasis role="preprocessor">#define&#32;EGL_KHR_platform_wayland&#32;1</emphasis>
1127 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_WAYLAND_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D8</emphasis>
1128 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_platform_wayland&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1129 
1130 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_platform_x11</emphasis>
1131 <emphasis role="preprocessor">#define&#32;EGL_KHR_platform_x11&#32;1</emphasis>
1132 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_X11_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D5</emphasis>
1133 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_X11_SCREEN_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D6</emphasis>
1134 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_platform_x11&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1135 
1136 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_reusable_sync</emphasis>
1137 <emphasis role="preprocessor">#define&#32;EGL_KHR_reusable_sync&#32;1</emphasis>
1138 <emphasis role="preprocessor">#ifdef&#32;KHRONOS_SUPPORT_INT64</emphasis>
1139 <emphasis role="preprocessor">#define&#32;EGL_SYNC_STATUS_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F1</emphasis>
1140 <emphasis role="preprocessor">#define&#32;EGL_SIGNALED_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F2</emphasis>
1141 <emphasis role="preprocessor">#define&#32;EGL_UNSIGNALED_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F3</emphasis>
1142 <emphasis role="preprocessor">#define&#32;EGL_TIMEOUT_EXPIRED_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F5</emphasis>
1143 <emphasis role="preprocessor">#define&#32;EGL_CONDITION_SATISFIED_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F6</emphasis>
1144 <emphasis role="preprocessor">#define&#32;EGL_SYNC_TYPE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30F7</emphasis>
1145 <emphasis role="preprocessor">#define&#32;EGL_SYNC_REUSABLE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30FA</emphasis>
1146 <emphasis role="preprocessor">#define&#32;EGL_SYNC_FLUSH_COMMANDS_BIT_KHR&#32;&#32;&#32;0x0001</emphasis>
1147 <emphasis role="preprocessor">#define&#32;EGL_FOREVER_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFull</emphasis>
1148 <emphasis role="preprocessor">#define&#32;EGL_NO_SYNC_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLSyncKHR,0)</emphasis>
1149 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSIGNALSYNCKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>);
1150 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1151 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSignalSyncKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>);
1152 <emphasis role="preprocessor">#endif</emphasis>
1153 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KHRONOS_SUPPORT_INT64&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1154 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_reusable_sync&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1155 
1156 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_stream</emphasis>
1157 <emphasis role="preprocessor">#define&#32;EGL_KHR_stream&#32;1</emphasis>
1158 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLStreamKHR;
1159 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8c07fcf14a1c0f49618f9abd659a3c99">khronos_uint64_t</link>&#32;EGLuint64KHR;
1160 <emphasis role="preprocessor">#ifdef&#32;KHRONOS_SUPPORT_INT64</emphasis>
1161 <emphasis role="preprocessor">#define&#32;EGL_NO_STREAM_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLStreamKHR,0)</emphasis>
1162 <emphasis role="preprocessor">#define&#32;EGL_CONSUMER_LATENCY_USEC_KHR&#32;&#32;&#32;&#32;&#32;0x3210</emphasis>
1163 <emphasis role="preprocessor">#define&#32;EGL_PRODUCER_FRAME_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3212</emphasis>
1164 <emphasis role="preprocessor">#define&#32;EGL_CONSUMER_FRAME_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3213</emphasis>
1165 <emphasis role="preprocessor">#define&#32;EGL_STREAM_STATE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3214</emphasis>
1166 <emphasis role="preprocessor">#define&#32;EGL_STREAM_STATE_CREATED_KHR&#32;&#32;&#32;&#32;&#32;&#32;0x3215</emphasis>
1167 <emphasis role="preprocessor">#define&#32;EGL_STREAM_STATE_CONNECTING_KHR&#32;&#32;&#32;0x3216</emphasis>
1168 <emphasis role="preprocessor">#define&#32;EGL_STREAM_STATE_EMPTY_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3217</emphasis>
1169 <emphasis role="preprocessor">#define&#32;EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR&#32;0x3218</emphasis>
1170 <emphasis role="preprocessor">#define&#32;EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR&#32;0x3219</emphasis>
1171 <emphasis role="preprocessor">#define&#32;EGL_STREAM_STATE_DISCONNECTED_KHR&#32;0x321A</emphasis>
1172 <emphasis role="preprocessor">#define&#32;EGL_BAD_STREAM_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x321B</emphasis>
1173 <emphasis role="preprocessor">#define&#32;EGL_BAD_STATE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x321C</emphasis>
1174 <emphasis role="keyword">typedef</emphasis>&#32;EGLStreamKHR&#32;(EGLAPIENTRYP&#32;PFNEGLCREATESTREAMKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1175 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLDESTROYSTREAMKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1176 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMATTRIBKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1177 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSTREAMKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1178 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSTREAMU64KHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLuint64KHR&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1179 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1180 EGLAPI&#32;EGLStreamKHR&#32;EGLAPIENTRY&#32;eglCreateStreamKHR&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1181 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglDestroyStreamKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1182 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamAttribKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1183 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryStreamKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1184 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryStreamu64KHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLuint64KHR&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1185 <emphasis role="preprocessor">#endif</emphasis>
1186 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KHRONOS_SUPPORT_INT64&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1187 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1188 
1189 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_stream_attrib</emphasis>
1190 <emphasis role="preprocessor">#define&#32;EGL_KHR_stream_attrib&#32;1</emphasis>
1191 <emphasis role="preprocessor">#ifdef&#32;KHRONOS_SUPPORT_INT64</emphasis>
1192 <emphasis role="keyword">typedef</emphasis>&#32;EGLStreamKHR&#32;(EGLAPIENTRYP&#32;PFNEGLCREATESTREAMATTRIBKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1193 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSETSTREAMATTRIBKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLAttrib&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1194 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSTREAMATTRIBKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1195 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMCONSUMERACQUIREATTRIBKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1196 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMCONSUMERRELEASEATTRIBKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1197 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1198 EGLAPI&#32;EGLStreamKHR&#32;EGLAPIENTRY&#32;eglCreateStreamAttribKHR&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1199 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSetStreamAttribKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLAttrib&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1200 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryStreamAttribKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1201 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamConsumerAcquireAttribKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1202 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamConsumerReleaseAttribKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1203 <emphasis role="preprocessor">#endif</emphasis>
1204 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KHRONOS_SUPPORT_INT64&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1205 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream_attrib&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1206 
1207 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_stream_consumer_gltexture</emphasis>
1208 <emphasis role="preprocessor">#define&#32;EGL_KHR_stream_consumer_gltexture&#32;1</emphasis>
1209 <emphasis role="preprocessor">#ifdef&#32;EGL_KHR_stream</emphasis>
1210 <emphasis role="preprocessor">#define&#32;EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR&#32;0x321E</emphasis>
1211 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1212 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMCONSUMERACQUIREKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1213 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMCONSUMERRELEASEKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1214 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1215 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamConsumerGLTextureExternalKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1216 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamConsumerAcquireKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1217 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamConsumerReleaseKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1218 <emphasis role="preprocessor">#endif</emphasis>
1219 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1220 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream_consumer_gltexture&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1221 
1222 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_stream_cross_process_fd</emphasis>
1223 <emphasis role="preprocessor">#define&#32;EGL_KHR_stream_cross_process_fd&#32;1</emphasis>
1224 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;EGLNativeFileDescriptorKHR;
1225 <emphasis role="preprocessor">#ifdef&#32;EGL_KHR_stream</emphasis>
1226 <emphasis role="preprocessor">#define&#32;EGL_NO_FILE_DESCRIPTOR_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLNativeFileDescriptorKHR,-1)</emphasis>
1227 <emphasis role="keyword">typedef</emphasis>&#32;EGLNativeFileDescriptorKHR&#32;(EGLAPIENTRYP&#32;PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1228 <emphasis role="keyword">typedef</emphasis>&#32;EGLStreamKHR&#32;(EGLAPIENTRYP&#32;PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLNativeFileDescriptorKHR&#32;file_descriptor);
1229 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1230 EGLAPI&#32;EGLNativeFileDescriptorKHR&#32;EGLAPIENTRY&#32;eglGetStreamFileDescriptorKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
1231 EGLAPI&#32;EGLStreamKHR&#32;EGLAPIENTRY&#32;eglCreateStreamFromFileDescriptorKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLNativeFileDescriptorKHR&#32;file_descriptor);
1232 <emphasis role="preprocessor">#endif</emphasis>
1233 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1234 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream_cross_process_fd&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1235 
1236 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_stream_fifo</emphasis>
1237 <emphasis role="preprocessor">#define&#32;EGL_KHR_stream_fifo&#32;1</emphasis>
1238 <emphasis role="preprocessor">#ifdef&#32;EGL_KHR_stream</emphasis>
1239 <emphasis role="preprocessor">#define&#32;EGL_STREAM_FIFO_LENGTH_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31FC</emphasis>
1240 <emphasis role="preprocessor">#define&#32;EGL_STREAM_TIME_NOW_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31FD</emphasis>
1241 <emphasis role="preprocessor">#define&#32;EGL_STREAM_TIME_CONSUMER_KHR&#32;&#32;&#32;&#32;&#32;&#32;0x31FE</emphasis>
1242 <emphasis role="preprocessor">#define&#32;EGL_STREAM_TIME_PRODUCER_KHR&#32;&#32;&#32;&#32;&#32;&#32;0x31FF</emphasis>
1243 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSTREAMTIMEKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLTimeKHR&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1244 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1245 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryStreamTimeKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;attribute,&#32;EGLTimeKHR&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1246 <emphasis role="preprocessor">#endif</emphasis>
1247 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1248 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream_fifo&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1249 
1250 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_stream_producer_aldatalocator</emphasis>
1251 <emphasis role="preprocessor">#define&#32;EGL_KHR_stream_producer_aldatalocator&#32;1</emphasis>
1252 <emphasis role="preprocessor">#ifdef&#32;EGL_KHR_stream</emphasis>
1253 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1254 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream_producer_aldatalocator&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1255 
1256 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_stream_producer_eglsurface</emphasis>
1257 <emphasis role="preprocessor">#define&#32;EGL_KHR_stream_producer_eglsurface&#32;1</emphasis>
1258 <emphasis role="preprocessor">#ifdef&#32;EGL_KHR_stream</emphasis>
1259 <emphasis role="preprocessor">#define&#32;EGL_STREAM_BIT_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0800</emphasis>
1260 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1261 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1262 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreateStreamProducerSurfaceKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1263 <emphasis role="preprocessor">#endif</emphasis>
1264 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1265 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_stream_producer_eglsurface&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1266 
1267 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_surfaceless_context</emphasis>
1268 <emphasis role="preprocessor">#define&#32;EGL_KHR_surfaceless_context&#32;1</emphasis>
1269 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_surfaceless_context&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1270 
1271 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_swap_buffers_with_damage</emphasis>
1272 <emphasis role="preprocessor">#define&#32;EGL_KHR_swap_buffers_with_damage&#32;1</emphasis>
1273 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*rects,&#32;EGLint&#32;n_rects);
1274 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1275 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSwapBuffersWithDamageKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*rects,&#32;EGLint&#32;n_rects);
1276 <emphasis role="preprocessor">#endif</emphasis>
1277 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_swap_buffers_with_damage&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1278 
1279 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_vg_parent_image</emphasis>
1280 <emphasis role="preprocessor">#define&#32;EGL_KHR_vg_parent_image&#32;1</emphasis>
1281 <emphasis role="preprocessor">#define&#32;EGL_VG_PARENT_IMAGE_KHR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30BA</emphasis>
1282 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_vg_parent_image&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1283 
1284 <emphasis role="preprocessor">#ifndef&#32;EGL_KHR_wait_sync</emphasis>
1285 <emphasis role="preprocessor">#define&#32;EGL_KHR_wait_sync&#32;1</emphasis>
1286 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLWAITSYNCKHRPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>);
1287 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1288 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglWaitSyncKHR&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>);
1289 <emphasis role="preprocessor">#endif</emphasis>
1290 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_KHR_wait_sync&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1291 
1292 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_GLES_layers</emphasis>
1293 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_GLES_layers&#32;1</emphasis>
1294 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_GLES_layers&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1295 
1296 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_blob_cache</emphasis>
1297 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_blob_cache&#32;1</emphasis>
1298 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a8bd045e2edc004c61c2586c7cbcff35d">khronos_ssize_t</link>&#32;EGLsizeiANDROID;
1299 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>&#32;(*EGLSetBlobFuncANDROID)&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*key,&#32;EGLsizeiANDROID&#32;keySize,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>,&#32;EGLsizeiANDROID&#32;valueSize);
1300 <emphasis role="keyword">typedef</emphasis>&#32;EGLsizeiANDROID&#32;(*EGLGetBlobFuncANDROID)&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*key,&#32;EGLsizeiANDROID&#32;keySize,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>,&#32;EGLsizeiANDROID&#32;valueSize);
1301 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>&#32;(EGLAPIENTRYP&#32;PFNEGLSETBLOBCACHEFUNCSANDROIDPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSetBlobFuncANDROID&#32;set,&#32;EGLGetBlobFuncANDROID&#32;get);
1302 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1303 EGLAPI&#32;<emphasis role="keywordtype">void</emphasis>&#32;EGLAPIENTRY&#32;eglSetBlobCacheFuncsANDROID&#32;(EGLDisplay&#32;dpy,&#32;EGLSetBlobFuncANDROID&#32;set,&#32;EGLGetBlobFuncANDROID&#32;get);
1304 <emphasis role="preprocessor">#endif</emphasis>
1305 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_blob_cache&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1306 
1307 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_create_native_client_buffer</emphasis>
1308 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_create_native_client_buffer&#32;1</emphasis>
1309 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_BUFFER_USAGE_ANDROID&#32;&#32;&#32;0x3143</emphasis>
1310 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_BUFFER_USAGE_PROTECTED_BIT_ANDROID&#32;0x00000001</emphasis>
1311 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_BUFFER_USAGE_RENDERBUFFER_BIT_ANDROID&#32;0x00000002</emphasis>
1312 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_BUFFER_USAGE_TEXTURE_BIT_ANDROID&#32;0x00000004</emphasis>
1313 <emphasis role="keyword">typedef</emphasis>&#32;EGLClientBuffer&#32;(EGLAPIENTRYP&#32;PFNEGLCREATENATIVECLIENTBUFFERANDROIDPROC)&#32;(<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1314 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1315 EGLAPI&#32;EGLClientBuffer&#32;EGLAPIENTRY&#32;eglCreateNativeClientBufferANDROID&#32;(<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1316 <emphasis role="preprocessor">#endif</emphasis>
1317 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_create_native_client_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1318 
1319 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_framebuffer_target</emphasis>
1320 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_framebuffer_target&#32;1</emphasis>
1321 <emphasis role="preprocessor">#define&#32;EGL_FRAMEBUFFER_TARGET_ANDROID&#32;&#32;&#32;&#32;0x3147</emphasis>
1322 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_framebuffer_target&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1323 
1324 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_front_buffer_auto_refresh</emphasis>
1325 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_front_buffer_auto_refresh&#32;1</emphasis>
1326 <emphasis role="preprocessor">#define&#32;EGL_FRONT_BUFFER_AUTO_REFRESH_ANDROID&#32;0x314C</emphasis>
1327 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_front_buffer_auto_refresh&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1328 
1329 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_get_frame_timestamps</emphasis>
1330 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_get_frame_timestamps&#32;1</emphasis>
1331 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1aaec967d90a72559fa6aa12e0160743f8">khronos_stime_nanoseconds_t</link>&#32;EGLnsecsANDROID;
1332 <emphasis role="preprocessor">#define&#32;EGL_TIMESTAMP_PENDING_ANDROID&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLnsecsANDROID,-2)</emphasis>
1333 <emphasis role="preprocessor">#define&#32;EGL_TIMESTAMP_INVALID_ANDROID&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLnsecsANDROID,-1)</emphasis>
1334 <emphasis role="preprocessor">#define&#32;EGL_TIMESTAMPS_ANDROID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3430</emphasis>
1335 <emphasis role="preprocessor">#define&#32;EGL_COMPOSITE_DEADLINE_ANDROID&#32;&#32;&#32;&#32;0x3431</emphasis>
1336 <emphasis role="preprocessor">#define&#32;EGL_COMPOSITE_INTERVAL_ANDROID&#32;&#32;&#32;&#32;0x3432</emphasis>
1337 <emphasis role="preprocessor">#define&#32;EGL_COMPOSITE_TO_PRESENT_LATENCY_ANDROID&#32;0x3433</emphasis>
1338 <emphasis role="preprocessor">#define&#32;EGL_REQUESTED_PRESENT_TIME_ANDROID&#32;0x3434</emphasis>
1339 <emphasis role="preprocessor">#define&#32;EGL_RENDERING_COMPLETE_TIME_ANDROID&#32;0x3435</emphasis>
1340 <emphasis role="preprocessor">#define&#32;EGL_COMPOSITION_LATCH_TIME_ANDROID&#32;0x3436</emphasis>
1341 <emphasis role="preprocessor">#define&#32;EGL_FIRST_COMPOSITION_START_TIME_ANDROID&#32;0x3437</emphasis>
1342 <emphasis role="preprocessor">#define&#32;EGL_LAST_COMPOSITION_START_TIME_ANDROID&#32;0x3438</emphasis>
1343 <emphasis role="preprocessor">#define&#32;EGL_FIRST_COMPOSITION_GPU_FINISHED_TIME_ANDROID&#32;0x3439</emphasis>
1344 <emphasis role="preprocessor">#define&#32;EGL_DISPLAY_PRESENT_TIME_ANDROID&#32;&#32;0x343A</emphasis>
1345 <emphasis role="preprocessor">#define&#32;EGL_DEQUEUE_READY_TIME_ANDROID&#32;&#32;&#32;&#32;0x343B</emphasis>
1346 <emphasis role="preprocessor">#define&#32;EGL_READS_DONE_TIME_ANDROID&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x343C</emphasis>
1347 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETCOMPOSITORTIMINGSUPPORTEDANDROIDPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
1348 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETCOMPOSITORTIMINGANDROIDPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;numTimestamps,&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a339b9616ddcfbc036f0258f8dcdd8902">names</link>,&#32;EGLnsecsANDROID&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>);
1349 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETNEXTFRAMEIDANDROIDPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLuint64KHR&#32;*frameId);
1350 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETFRAMETIMESTAMPSUPPORTEDANDROIDPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;timestamp);
1351 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETFRAMETIMESTAMPSANDROIDPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLuint64KHR&#32;frameId,&#32;EGLint&#32;numTimestamps,&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*timestamps,&#32;EGLnsecsANDROID&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>);
1352 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1353 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetCompositorTimingSupportedANDROID&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
1354 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetCompositorTimingANDROID&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;numTimestamps,&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a339b9616ddcfbc036f0258f8dcdd8902">names</link>,&#32;EGLnsecsANDROID&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>);
1355 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetNextFrameIdANDROID&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLuint64KHR&#32;*frameId);
1356 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetFrameTimestampSupportedANDROID&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;timestamp);
1357 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetFrameTimestampsANDROID&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLuint64KHR&#32;frameId,&#32;EGLint&#32;numTimestamps,&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*timestamps,&#32;EGLnsecsANDROID&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a0aa8cf39c79d294b1d9f4daef5020bec">values</link>);
1358 <emphasis role="preprocessor">#endif</emphasis>
1359 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_get_frame_timestamps&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1360 
1361 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_get_native_client_buffer</emphasis>
1362 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_get_native_client_buffer&#32;1</emphasis>
1363 <emphasis role="keyword">struct&#32;</emphasis>AHardwareBuffer;
1364 <emphasis role="keyword">typedef</emphasis>&#32;EGLClientBuffer&#32;(EGLAPIENTRYP&#32;PFNEGLGETNATIVECLIENTBUFFERANDROIDPROC)&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>AHardwareBuffer&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>);
1365 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1366 EGLAPI&#32;EGLClientBuffer&#32;EGLAPIENTRY&#32;eglGetNativeClientBufferANDROID&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct</emphasis>&#32;AHardwareBuffer&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>);
1367 <emphasis role="preprocessor">#endif</emphasis>
1368 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_get_native_client_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1369 
1370 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_image_native_buffer</emphasis>
1371 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_image_native_buffer&#32;1</emphasis>
1372 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_BUFFER_ANDROID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3140</emphasis>
1373 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_image_native_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1374 
1375 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_native_fence_sync</emphasis>
1376 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_native_fence_sync&#32;1</emphasis>
1377 <emphasis role="preprocessor">#define&#32;EGL_SYNC_NATIVE_FENCE_ANDROID&#32;&#32;&#32;&#32;&#32;0x3144</emphasis>
1378 <emphasis role="preprocessor">#define&#32;EGL_SYNC_NATIVE_FENCE_FD_ANDROID&#32;&#32;0x3145</emphasis>
1379 <emphasis role="preprocessor">#define&#32;EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID&#32;0x3146</emphasis>
1380 <emphasis role="preprocessor">#define&#32;EGL_NO_NATIVE_FENCE_FD_ANDROID&#32;&#32;&#32;&#32;-1</emphasis>
1381 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLDUPNATIVEFENCEFDANDROIDPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync);
1382 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1383 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglDupNativeFenceFDANDROID&#32;(EGLDisplay&#32;dpy,&#32;EGLSyncKHR&#32;sync);
1384 <emphasis role="preprocessor">#endif</emphasis>
1385 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_native_fence_sync&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1386 
1387 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_presentation_time</emphasis>
1388 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_presentation_time&#32;1</emphasis>
1389 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLPRESENTATIONTIMEANDROIDPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLnsecsANDROID&#32;time);
1390 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1391 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglPresentationTimeANDROID&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLnsecsANDROID&#32;time);
1392 <emphasis role="preprocessor">#endif</emphasis>
1393 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_presentation_time&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1394 
1395 <emphasis role="preprocessor">#ifndef&#32;EGL_ANDROID_recordable</emphasis>
1396 <emphasis role="preprocessor">#define&#32;EGL_ANDROID_recordable&#32;1</emphasis>
1397 <emphasis role="preprocessor">#define&#32;EGL_RECORDABLE_ANDROID&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3142</emphasis>
1398 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANDROID_recordable&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1399 
1400 <emphasis role="preprocessor">#ifndef&#32;EGL_ANGLE_d3d_share_handle_client_buffer</emphasis>
1401 <emphasis role="preprocessor">#define&#32;EGL_ANGLE_d3d_share_handle_client_buffer&#32;1</emphasis>
1402 <emphasis role="preprocessor">#define&#32;EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE&#32;0x3200</emphasis>
1403 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANGLE_d3d_share_handle_client_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1404 
1405 <emphasis role="preprocessor">#ifndef&#32;EGL_ANGLE_device_d3d</emphasis>
1406 <emphasis role="preprocessor">#define&#32;EGL_ANGLE_device_d3d&#32;1</emphasis>
1407 <emphasis role="preprocessor">#define&#32;EGL_D3D9_DEVICE_ANGLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33A0</emphasis>
1408 <emphasis role="preprocessor">#define&#32;EGL_D3D11_DEVICE_ANGLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x33A1</emphasis>
1409 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANGLE_device_d3d&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1410 
1411 <emphasis role="preprocessor">#ifndef&#32;EGL_ANGLE_query_surface_pointer</emphasis>
1412 <emphasis role="preprocessor">#define&#32;EGL_ANGLE_query_surface_pointer&#32;1</emphasis>
1413 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSURFACEPOINTERANGLEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;attribute,&#32;<emphasis role="keywordtype">void</emphasis>&#32;**<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1414 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1415 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQuerySurfacePointerANGLE&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;attribute,&#32;<emphasis role="keywordtype">void</emphasis>&#32;**<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1416 <emphasis role="preprocessor">#endif</emphasis>
1417 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANGLE_query_surface_pointer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1418 
1419 <emphasis role="preprocessor">#ifndef&#32;EGL_ANGLE_surface_d3d_texture_2d_share_handle</emphasis>
1420 <emphasis role="preprocessor">#define&#32;EGL_ANGLE_surface_d3d_texture_2d_share_handle&#32;1</emphasis>
1421 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANGLE_surface_d3d_texture_2d_share_handle&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1422 
1423 <emphasis role="preprocessor">#ifndef&#32;EGL_ANGLE_sync_control_rate</emphasis>
1424 <emphasis role="preprocessor">#define&#32;EGL_ANGLE_sync_control_rate&#32;1</emphasis>
1425 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETMSCRATEANGLEPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;*numerator,&#32;EGLint&#32;*denominator);
1426 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1427 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetMscRateANGLE&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;*numerator,&#32;EGLint&#32;*denominator);
1428 <emphasis role="preprocessor">#endif</emphasis>
1429 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANGLE_sync_control_rate&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1430 
1431 <emphasis role="preprocessor">#ifndef&#32;EGL_ANGLE_window_fixed_size</emphasis>
1432 <emphasis role="preprocessor">#define&#32;EGL_ANGLE_window_fixed_size&#32;1</emphasis>
1433 <emphasis role="preprocessor">#define&#32;EGL_FIXED_SIZE_ANGLE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3201</emphasis>
1434 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ANGLE_window_fixed_size&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1435 
1436 <emphasis role="preprocessor">#ifndef&#32;EGL_ARM_image_format</emphasis>
1437 <emphasis role="preprocessor">#define&#32;EGL_ARM_image_format&#32;1</emphasis>
1438 <emphasis role="preprocessor">#define&#32;EGL_COLOR_COMPONENT_TYPE_UNSIGNED_INTEGER_ARM&#32;0x3287</emphasis>
1439 <emphasis role="preprocessor">#define&#32;EGL_COLOR_COMPONENT_TYPE_INTEGER_ARM&#32;0x3288</emphasis>
1440 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ARM_image_format&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1441 
1442 <emphasis role="preprocessor">#ifndef&#32;EGL_ARM_implicit_external_sync</emphasis>
1443 <emphasis role="preprocessor">#define&#32;EGL_ARM_implicit_external_sync&#32;1</emphasis>
1444 <emphasis role="preprocessor">#define&#32;EGL_SYNC_PRIOR_COMMANDS_IMPLICIT_EXTERNAL_ARM&#32;0x328A</emphasis>
1445 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ARM_implicit_external_sync&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1446 
1447 <emphasis role="preprocessor">#ifndef&#32;EGL_ARM_pixmap_multisample_discard</emphasis>
1448 <emphasis role="preprocessor">#define&#32;EGL_ARM_pixmap_multisample_discard&#32;1</emphasis>
1449 <emphasis role="preprocessor">#define&#32;EGL_DISCARD_SAMPLES_ARM&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3286</emphasis>
1450 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_ARM_pixmap_multisample_discard&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1451 
1452 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_bind_to_front</emphasis>
1453 <emphasis role="preprocessor">#define&#32;EGL_EXT_bind_to_front&#32;1</emphasis>
1454 <emphasis role="preprocessor">#define&#32;EGL_FRONT_BUFFER_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3464</emphasis>
1455 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_bind_to_front&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1456 
1457 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_buffer_age</emphasis>
1458 <emphasis role="preprocessor">#define&#32;EGL_EXT_buffer_age&#32;1</emphasis>
1459 <emphasis role="preprocessor">#define&#32;EGL_BUFFER_AGE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x313D</emphasis>
1460 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_buffer_age&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1461 
1462 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_client_extensions</emphasis>
1463 <emphasis role="preprocessor">#define&#32;EGL_EXT_client_extensions&#32;1</emphasis>
1464 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_client_extensions&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1465 
1466 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_client_sync</emphasis>
1467 <emphasis role="preprocessor">#define&#32;EGL_EXT_client_sync&#32;1</emphasis>
1468 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CLIENT_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3364</emphasis>
1469 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CLIENT_SIGNAL_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3365</emphasis>
1470 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCLIENTSIGNALSYNCEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1471 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1472 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglClientSignalSyncEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1473 <emphasis role="preprocessor">#endif</emphasis>
1474 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_client_sync&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1475 
1476 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_compositor</emphasis>
1477 <emphasis role="preprocessor">#define&#32;EGL_EXT_compositor&#32;1</emphasis>
1478 <emphasis role="preprocessor">#define&#32;EGL_PRIMARY_COMPOSITOR_CONTEXT_EXT&#32;0x3460</emphasis>
1479 <emphasis role="preprocessor">#define&#32;EGL_EXTERNAL_REF_ID_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3461</emphasis>
1480 <emphasis role="preprocessor">#define&#32;EGL_COMPOSITOR_DROP_NEWEST_FRAME_EXT&#32;0x3462</emphasis>
1481 <emphasis role="preprocessor">#define&#32;EGL_COMPOSITOR_KEEP_NEWEST_FRAME_EXT&#32;0x3463</emphasis>
1482 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCOMPOSITORSETCONTEXTLISTEXTPROC)&#32;(<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*external_ref_ids,&#32;EGLint&#32;num_entries);
1483 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCOMPOSITORSETCONTEXTATTRIBUTESEXTPROC)&#32;(EGLint&#32;external_ref_id,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*context_attributes,&#32;EGLint&#32;num_entries);
1484 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCOMPOSITORSETWINDOWLISTEXTPROC)&#32;(EGLint&#32;external_ref_id,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*external_win_ids,&#32;EGLint&#32;num_entries);
1485 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCOMPOSITORSETWINDOWATTRIBUTESEXTPROC)&#32;(EGLint&#32;external_win_id,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*window_attributes,&#32;EGLint&#32;num_entries);
1486 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCOMPOSITORBINDTEXWINDOWEXTPROC)&#32;(EGLint&#32;external_win_id);
1487 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCOMPOSITORSETSIZEEXTPROC)&#32;(EGLint&#32;external_win_id,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1a9a82cf3caff84cabc4598e2619faac17">width</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1aa352f2804b9902ac30769c00dde75d5f">height</link>);
1488 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLCOMPOSITORSWAPPOLICYEXTPROC)&#32;(EGLint&#32;external_win_id,&#32;EGLint&#32;policy);
1489 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1490 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglCompositorSetContextListEXT&#32;(<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*external_ref_ids,&#32;EGLint&#32;num_entries);
1491 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglCompositorSetContextAttributesEXT&#32;(EGLint&#32;external_ref_id,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*context_attributes,&#32;EGLint&#32;num_entries);
1492 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglCompositorSetWindowListEXT&#32;(EGLint&#32;external_ref_id,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*external_win_ids,&#32;EGLint&#32;num_entries);
1493 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglCompositorSetWindowAttributesEXT&#32;(EGLint&#32;external_win_id,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*window_attributes,&#32;EGLint&#32;num_entries);
1494 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglCompositorBindTexWindowEXT&#32;(EGLint&#32;external_win_id);
1495 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglCompositorSetSizeEXT&#32;(EGLint&#32;external_win_id,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1a9a82cf3caff84cabc4598e2619faac17">width</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1aa352f2804b9902ac30769c00dde75d5f">height</link>);
1496 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglCompositorSwapPolicyEXT&#32;(EGLint&#32;external_win_id,&#32;EGLint&#32;policy);
1497 <emphasis role="preprocessor">#endif</emphasis>
1498 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_compositor&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1499 
1500 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_config_select_group</emphasis>
1501 <emphasis role="preprocessor">#define&#32;EGL_EXT_config_select_group&#32;1</emphasis>
1502 <emphasis role="preprocessor">#define&#32;EGL_CONFIG_SELECT_GROUP_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x34C0</emphasis>
1503 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_config_select_group&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1504 
1505 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_create_context_robustness</emphasis>
1506 <emphasis role="preprocessor">#define&#32;EGL_EXT_create_context_robustness&#32;1</emphasis>
1507 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT&#32;0x30BF</emphasis>
1508 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT&#32;0x3138</emphasis>
1509 <emphasis role="preprocessor">#define&#32;EGL_NO_RESET_NOTIFICATION_EXT&#32;&#32;&#32;&#32;&#32;0x31BE</emphasis>
1510 <emphasis role="preprocessor">#define&#32;EGL_LOSE_CONTEXT_ON_RESET_EXT&#32;&#32;&#32;&#32;&#32;0x31BF</emphasis>
1511 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_create_context_robustness&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1512 
1513 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_device_base</emphasis>
1514 <emphasis role="preprocessor">#define&#32;EGL_EXT_device_base&#32;1</emphasis>
1515 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLDeviceEXT;
1516 <emphasis role="preprocessor">#define&#32;EGL_NO_DEVICE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLDeviceEXT,0)</emphasis>
1517 <emphasis role="preprocessor">#define&#32;EGL_BAD_DEVICE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x322B</emphasis>
1518 <emphasis role="preprocessor">#define&#32;EGL_DEVICE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x322C</emphasis>
1519 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDEVICEATTRIBEXTPROC)&#32;(EGLDeviceEXT&#32;device,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1520 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*(EGLAPIENTRYP&#32;PFNEGLQUERYDEVICESTRINGEXTPROC)&#32;(EGLDeviceEXT&#32;device,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
1521 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDEVICESEXTPROC)&#32;(EGLint&#32;max_devices,&#32;EGLDeviceEXT&#32;*devices,&#32;EGLint&#32;*num_devices);
1522 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDISPLAYATTRIBEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1523 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1524 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDeviceAttribEXT&#32;(EGLDeviceEXT&#32;device,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1525 EGLAPI&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*EGLAPIENTRY&#32;eglQueryDeviceStringEXT&#32;(EGLDeviceEXT&#32;device,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
1526 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDevicesEXT&#32;(EGLint&#32;max_devices,&#32;EGLDeviceEXT&#32;*devices,&#32;EGLint&#32;*num_devices);
1527 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDisplayAttribEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1528 <emphasis role="preprocessor">#endif</emphasis>
1529 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_device_base&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1530 
1531 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_device_drm</emphasis>
1532 <emphasis role="preprocessor">#define&#32;EGL_EXT_device_drm&#32;1</emphasis>
1533 <emphasis role="preprocessor">#define&#32;EGL_DRM_DEVICE_FILE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3233</emphasis>
1534 <emphasis role="preprocessor">#define&#32;EGL_DRM_MASTER_FD_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x333C</emphasis>
1535 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_device_drm&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1536 
1537 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_device_drm_render_node</emphasis>
1538 <emphasis role="preprocessor">#define&#32;EGL_EXT_device_drm_render_node&#32;1</emphasis>
1539 <emphasis role="preprocessor">#define&#32;EGL_DRM_RENDER_NODE_FILE_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3377</emphasis>
1540 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_device_drm_render_node&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1541 
1542 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_device_enumeration</emphasis>
1543 <emphasis role="preprocessor">#define&#32;EGL_EXT_device_enumeration&#32;1</emphasis>
1544 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_device_enumeration&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1545 
1546 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_device_openwf</emphasis>
1547 <emphasis role="preprocessor">#define&#32;EGL_EXT_device_openwf&#32;1</emphasis>
1548 <emphasis role="preprocessor">#define&#32;EGL_OPENWF_DEVICE_ID_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3237</emphasis>
1549 <emphasis role="preprocessor">#define&#32;EGL_OPENWF_DEVICE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x333D</emphasis>
1550 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_device_openwf&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1551 
1552 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_device_persistent_id</emphasis>
1553 <emphasis role="preprocessor">#define&#32;EGL_EXT_device_persistent_id&#32;1</emphasis>
1554 <emphasis role="preprocessor">#define&#32;EGL_DEVICE_UUID_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x335C</emphasis>
1555 <emphasis role="preprocessor">#define&#32;EGL_DRIVER_UUID_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x335D</emphasis>
1556 <emphasis role="preprocessor">#define&#32;EGL_DRIVER_NAME_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x335E</emphasis>
1557 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDEVICEBINARYEXTPROC)&#32;(EGLDeviceEXT&#32;device,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>,&#32;EGLint&#32;max_size,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>);
1558 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1559 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDeviceBinaryEXT&#32;(EGLDeviceEXT&#32;device,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>,&#32;EGLint&#32;max_size,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>);
1560 <emphasis role="preprocessor">#endif</emphasis>
1561 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_device_persistent_id&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1562 
1563 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_device_query</emphasis>
1564 <emphasis role="preprocessor">#define&#32;EGL_EXT_device_query&#32;1</emphasis>
1565 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_device_query&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1566 
1567 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_device_query_name</emphasis>
1568 <emphasis role="preprocessor">#define&#32;EGL_EXT_device_query_name&#32;1</emphasis>
1569 <emphasis role="preprocessor">#define&#32;EGL_RENDERER_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x335F</emphasis>
1570 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_device_query_name&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1571 
1572 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_gl_colorspace_bt2020_linear</emphasis>
1573 <emphasis role="preprocessor">#define&#32;EGL_EXT_gl_colorspace_bt2020_linear&#32;1</emphasis>
1574 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_BT2020_LINEAR_EXT&#32;0x333F</emphasis>
1575 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_gl_colorspace_bt2020_linear&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1576 
1577 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_gl_colorspace_bt2020_pq</emphasis>
1578 <emphasis role="preprocessor">#define&#32;EGL_EXT_gl_colorspace_bt2020_pq&#32;1</emphasis>
1579 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_BT2020_PQ_EXT&#32;&#32;&#32;0x3340</emphasis>
1580 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_gl_colorspace_bt2020_pq&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1581 
1582 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_gl_colorspace_display_p3</emphasis>
1583 <emphasis role="preprocessor">#define&#32;EGL_EXT_gl_colorspace_display_p3&#32;1</emphasis>
1584 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_DISPLAY_P3_EXT&#32;&#32;0x3363</emphasis>
1585 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_gl_colorspace_display_p3&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1586 
1587 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_gl_colorspace_display_p3_linear</emphasis>
1588 <emphasis role="preprocessor">#define&#32;EGL_EXT_gl_colorspace_display_p3_linear&#32;1</emphasis>
1589 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_DISPLAY_P3_LINEAR_EXT&#32;0x3362</emphasis>
1590 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_gl_colorspace_display_p3_linear&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1591 
1592 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_gl_colorspace_display_p3_passthrough</emphasis>
1593 <emphasis role="preprocessor">#define&#32;EGL_EXT_gl_colorspace_display_p3_passthrough&#32;1</emphasis>
1594 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_DISPLAY_P3_PASSTHROUGH_EXT&#32;0x3490</emphasis>
1595 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_gl_colorspace_display_p3_passthrough&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1596 
1597 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_gl_colorspace_scrgb</emphasis>
1598 <emphasis role="preprocessor">#define&#32;EGL_EXT_gl_colorspace_scrgb&#32;1</emphasis>
1599 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_SCRGB_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3351</emphasis>
1600 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_gl_colorspace_scrgb&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1601 
1602 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_gl_colorspace_scrgb_linear</emphasis>
1603 <emphasis role="preprocessor">#define&#32;EGL_EXT_gl_colorspace_scrgb_linear&#32;1</emphasis>
1604 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_SCRGB_LINEAR_EXT&#32;0x3350</emphasis>
1605 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_gl_colorspace_scrgb_linear&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1606 
1607 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_image_dma_buf_import</emphasis>
1608 <emphasis role="preprocessor">#define&#32;EGL_EXT_image_dma_buf_import&#32;1</emphasis>
1609 <emphasis role="preprocessor">#define&#32;EGL_LINUX_DMA_BUF_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3270</emphasis>
1610 <emphasis role="preprocessor">#define&#32;EGL_LINUX_DRM_FOURCC_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3271</emphasis>
1611 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE0_FD_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3272</emphasis>
1612 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE0_OFFSET_EXT&#32;&#32;&#32;&#32;&#32;0x3273</emphasis>
1613 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE0_PITCH_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3274</emphasis>
1614 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE1_FD_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3275</emphasis>
1615 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE1_OFFSET_EXT&#32;&#32;&#32;&#32;&#32;0x3276</emphasis>
1616 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE1_PITCH_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3277</emphasis>
1617 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE2_FD_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3278</emphasis>
1618 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE2_OFFSET_EXT&#32;&#32;&#32;&#32;&#32;0x3279</emphasis>
1619 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE2_PITCH_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x327A</emphasis>
1620 <emphasis role="preprocessor">#define&#32;EGL_YUV_COLOR_SPACE_HINT_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x327B</emphasis>
1621 <emphasis role="preprocessor">#define&#32;EGL_SAMPLE_RANGE_HINT_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x327C</emphasis>
1622 <emphasis role="preprocessor">#define&#32;EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT&#32;0x327D</emphasis>
1623 <emphasis role="preprocessor">#define&#32;EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT&#32;0x327E</emphasis>
1624 <emphasis role="preprocessor">#define&#32;EGL_ITU_REC601_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x327F</emphasis>
1625 <emphasis role="preprocessor">#define&#32;EGL_ITU_REC709_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3280</emphasis>
1626 <emphasis role="preprocessor">#define&#32;EGL_ITU_REC2020_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3281</emphasis>
1627 <emphasis role="preprocessor">#define&#32;EGL_YUV_FULL_RANGE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3282</emphasis>
1628 <emphasis role="preprocessor">#define&#32;EGL_YUV_NARROW_RANGE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3283</emphasis>
1629 <emphasis role="preprocessor">#define&#32;EGL_YUV_CHROMA_SITING_0_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3284</emphasis>
1630 <emphasis role="preprocessor">#define&#32;EGL_YUV_CHROMA_SITING_0_5_EXT&#32;&#32;&#32;&#32;&#32;0x3285</emphasis>
1631 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_image_dma_buf_import&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1632 
1633 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_image_dma_buf_import_modifiers</emphasis>
1634 <emphasis role="preprocessor">#define&#32;EGL_EXT_image_dma_buf_import_modifiers&#32;1</emphasis>
1635 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE3_FD_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3440</emphasis>
1636 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE3_OFFSET_EXT&#32;&#32;&#32;&#32;&#32;0x3441</emphasis>
1637 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE3_PITCH_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3442</emphasis>
1638 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE0_MODIFIER_LO_EXT&#32;0x3443</emphasis>
1639 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE0_MODIFIER_HI_EXT&#32;0x3444</emphasis>
1640 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE1_MODIFIER_LO_EXT&#32;0x3445</emphasis>
1641 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE1_MODIFIER_HI_EXT&#32;0x3446</emphasis>
1642 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE2_MODIFIER_LO_EXT&#32;0x3447</emphasis>
1643 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE2_MODIFIER_HI_EXT&#32;0x3448</emphasis>
1644 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE3_MODIFIER_LO_EXT&#32;0x3449</emphasis>
1645 <emphasis role="preprocessor">#define&#32;EGL_DMA_BUF_PLANE3_MODIFIER_HI_EXT&#32;0x344A</emphasis>
1646 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDMABUFFORMATSEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;max_formats,&#32;EGLint&#32;*formats,&#32;EGLint&#32;*num_formats);
1647 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDMABUFMODIFIERSEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;<link linkend="__s_d_l__audio_8h_1a71a65ffd977afe9c3fef116a5bc9ee27">format</link>,&#32;EGLint&#32;max_modifiers,&#32;EGLuint64KHR&#32;*modifiers,&#32;EGLBoolean&#32;*external_only,&#32;EGLint&#32;*num_modifiers);
1648 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1649 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDmaBufFormatsEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;max_formats,&#32;EGLint&#32;*formats,&#32;EGLint&#32;*num_formats);
1650 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDmaBufModifiersEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;<link linkend="__s_d_l__audio_8h_1a71a65ffd977afe9c3fef116a5bc9ee27">format</link>,&#32;EGLint&#32;max_modifiers,&#32;EGLuint64KHR&#32;*modifiers,&#32;EGLBoolean&#32;*external_only,&#32;EGLint&#32;*num_modifiers);
1651 <emphasis role="preprocessor">#endif</emphasis>
1652 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_image_dma_buf_import_modifiers&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1653 
1654 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_image_gl_colorspace</emphasis>
1655 <emphasis role="preprocessor">#define&#32;EGL_EXT_image_gl_colorspace&#32;1</emphasis>
1656 <emphasis role="preprocessor">#define&#32;EGL_GL_COLORSPACE_DEFAULT_EXT&#32;&#32;&#32;&#32;&#32;0x314D</emphasis>
1657 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_image_gl_colorspace&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1658 
1659 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_image_implicit_sync_control</emphasis>
1660 <emphasis role="preprocessor">#define&#32;EGL_EXT_image_implicit_sync_control&#32;1</emphasis>
1661 <emphasis role="preprocessor">#define&#32;EGL_IMPORT_SYNC_TYPE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3470</emphasis>
1662 <emphasis role="preprocessor">#define&#32;EGL_IMPORT_IMPLICIT_SYNC_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3471</emphasis>
1663 <emphasis role="preprocessor">#define&#32;EGL_IMPORT_EXPLICIT_SYNC_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3472</emphasis>
1664 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_image_implicit_sync_control&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1665 
1666 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_multiview_window</emphasis>
1667 <emphasis role="preprocessor">#define&#32;EGL_EXT_multiview_window&#32;1</emphasis>
1668 <emphasis role="preprocessor">#define&#32;EGL_MULTIVIEW_VIEW_COUNT_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3134</emphasis>
1669 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_multiview_window&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1670 
1671 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_output_base</emphasis>
1672 <emphasis role="preprocessor">#define&#32;EGL_EXT_output_base&#32;1</emphasis>
1673 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLOutputLayerEXT;
1674 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLOutputPortEXT;
1675 <emphasis role="preprocessor">#define&#32;EGL_NO_OUTPUT_LAYER_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLOutputLayerEXT,0)</emphasis>
1676 <emphasis role="preprocessor">#define&#32;EGL_NO_OUTPUT_PORT_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLOutputPortEXT,0)</emphasis>
1677 <emphasis role="preprocessor">#define&#32;EGL_BAD_OUTPUT_LAYER_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x322D</emphasis>
1678 <emphasis role="preprocessor">#define&#32;EGL_BAD_OUTPUT_PORT_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x322E</emphasis>
1679 <emphasis role="preprocessor">#define&#32;EGL_SWAP_INTERVAL_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x322F</emphasis>
1680 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETOUTPUTLAYERSEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list,&#32;EGLOutputLayerEXT&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a9d6b7c6ae9c7f090b02fd8c147bbbfeb">layers</link>,&#32;EGLint&#32;max_layers,&#32;EGLint&#32;*num_layers);
1681 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETOUTPUTPORTSEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list,&#32;EGLOutputPortEXT&#32;*ports,&#32;EGLint&#32;max_ports,&#32;EGLint&#32;*num_ports);
1682 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLOUTPUTLAYERATTRIBEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputLayerEXT&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1683 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputLayerEXT&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1684 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*(EGLAPIENTRYP&#32;PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputLayerEXT&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
1685 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLOUTPUTPORTATTRIBEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputPortEXT&#32;port,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1686 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputPortEXT&#32;port,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1687 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*(EGLAPIENTRYP&#32;PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputPortEXT&#32;port,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
1688 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1689 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetOutputLayersEXT&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list,&#32;EGLOutputLayerEXT&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a9d6b7c6ae9c7f090b02fd8c147bbbfeb">layers</link>,&#32;EGLint&#32;max_layers,&#32;EGLint&#32;*num_layers);
1690 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetOutputPortsEXT&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list,&#32;EGLOutputPortEXT&#32;*ports,&#32;EGLint&#32;max_ports,&#32;EGLint&#32;*num_ports);
1691 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglOutputLayerAttribEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputLayerEXT&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1692 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryOutputLayerAttribEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputLayerEXT&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1693 EGLAPI&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*EGLAPIENTRY&#32;eglQueryOutputLayerStringEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputLayerEXT&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
1694 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglOutputPortAttribEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputPortEXT&#32;port,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1695 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryOutputPortAttribEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputPortEXT&#32;port,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
1696 EGLAPI&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*EGLAPIENTRY&#32;eglQueryOutputPortStringEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLOutputPortEXT&#32;port,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>);
1697 <emphasis role="preprocessor">#endif</emphasis>
1698 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_output_base&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1699 
1700 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_output_drm</emphasis>
1701 <emphasis role="preprocessor">#define&#32;EGL_EXT_output_drm&#32;1</emphasis>
1702 <emphasis role="preprocessor">#define&#32;EGL_DRM_CRTC_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3234</emphasis>
1703 <emphasis role="preprocessor">#define&#32;EGL_DRM_PLANE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3235</emphasis>
1704 <emphasis role="preprocessor">#define&#32;EGL_DRM_CONNECTOR_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3236</emphasis>
1705 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_output_drm&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1706 
1707 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_output_openwf</emphasis>
1708 <emphasis role="preprocessor">#define&#32;EGL_EXT_output_openwf&#32;1</emphasis>
1709 <emphasis role="preprocessor">#define&#32;EGL_OPENWF_PIPELINE_ID_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3238</emphasis>
1710 <emphasis role="preprocessor">#define&#32;EGL_OPENWF_PORT_ID_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3239</emphasis>
1711 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_output_openwf&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1712 
1713 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_pixel_format_float</emphasis>
1714 <emphasis role="preprocessor">#define&#32;EGL_EXT_pixel_format_float&#32;1</emphasis>
1715 <emphasis role="preprocessor">#define&#32;EGL_COLOR_COMPONENT_TYPE_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3339</emphasis>
1716 <emphasis role="preprocessor">#define&#32;EGL_COLOR_COMPONENT_TYPE_FIXED_EXT&#32;0x333A</emphasis>
1717 <emphasis role="preprocessor">#define&#32;EGL_COLOR_COMPONENT_TYPE_FLOAT_EXT&#32;0x333B</emphasis>
1718 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_pixel_format_float&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1719 
1720 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_platform_base</emphasis>
1721 <emphasis role="preprocessor">#define&#32;EGL_EXT_platform_base&#32;1</emphasis>
1722 <emphasis role="keyword">typedef</emphasis>&#32;EGLDisplay&#32;(EGLAPIENTRYP&#32;PFNEGLGETPLATFORMDISPLAYEXTPROC)&#32;(EGLenum&#32;platform,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_display,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1723 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_window,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1724 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_pixmap,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1725 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1726 EGLAPI&#32;EGLDisplay&#32;EGLAPIENTRY&#32;eglGetPlatformDisplayEXT&#32;(EGLenum&#32;platform,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_display,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1727 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreatePlatformWindowSurfaceEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_window,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1728 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreatePlatformPixmapSurfaceEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*native_pixmap,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1729 <emphasis role="preprocessor">#endif</emphasis>
1730 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_platform_base&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1731 
1732 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_platform_device</emphasis>
1733 <emphasis role="preprocessor">#define&#32;EGL_EXT_platform_device&#32;1</emphasis>
1734 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_DEVICE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x313F</emphasis>
1735 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_platform_device&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1736 
1737 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_platform_wayland</emphasis>
1738 <emphasis role="preprocessor">#define&#32;EGL_EXT_platform_wayland&#32;1</emphasis>
1739 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_WAYLAND_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D8</emphasis>
1740 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_platform_wayland&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1741 
1742 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_platform_x11</emphasis>
1743 <emphasis role="preprocessor">#define&#32;EGL_EXT_platform_x11&#32;1</emphasis>
1744 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_X11_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D5</emphasis>
1745 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_X11_SCREEN_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D6</emphasis>
1746 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_platform_x11&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1747 
1748 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_platform_xcb</emphasis>
1749 <emphasis role="preprocessor">#define&#32;EGL_EXT_platform_xcb&#32;1</emphasis>
1750 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_XCB_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31DC</emphasis>
1751 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_XCB_SCREEN_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31DE</emphasis>
1752 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_platform_xcb&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1753 
1754 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_present_opaque</emphasis>
1755 <emphasis role="preprocessor">#define&#32;EGL_EXT_present_opaque&#32;1</emphasis>
1756 <emphasis role="preprocessor">#define&#32;EGL_PRESENT_OPAQUE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31DF</emphasis>
1757 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_present_opaque&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1758 
1759 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_protected_content</emphasis>
1760 <emphasis role="preprocessor">#define&#32;EGL_EXT_protected_content&#32;1</emphasis>
1761 <emphasis role="preprocessor">#define&#32;EGL_PROTECTED_CONTENT_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x32C0</emphasis>
1762 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_protected_content&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1763 
1764 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_protected_surface</emphasis>
1765 <emphasis role="preprocessor">#define&#32;EGL_EXT_protected_surface&#32;1</emphasis>
1766 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_protected_surface&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1767 
1768 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_stream_consumer_egloutput</emphasis>
1769 <emphasis role="preprocessor">#define&#32;EGL_EXT_stream_consumer_egloutput&#32;1</emphasis>
1770 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMCONSUMEROUTPUTEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLOutputLayerEXT&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>);
1771 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1772 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamConsumerOutputEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLOutputLayerEXT&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae7bc0cdc2d90da1b600d6cc916c2772e">layer</link>);
1773 <emphasis role="preprocessor">#endif</emphasis>
1774 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_stream_consumer_egloutput&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1775 
1776 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_surface_CTA861_3_metadata</emphasis>
1777 <emphasis role="preprocessor">#define&#32;EGL_EXT_surface_CTA861_3_metadata&#32;1</emphasis>
1778 <emphasis role="preprocessor">#define&#32;EGL_CTA861_3_MAX_CONTENT_LIGHT_LEVEL_EXT&#32;0x3360</emphasis>
1779 <emphasis role="preprocessor">#define&#32;EGL_CTA861_3_MAX_FRAME_AVERAGE_LEVEL_EXT&#32;0x3361</emphasis>
1780 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_surface_CTA861_3_metadata&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1781 
1782 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_surface_SMPTE2086_metadata</emphasis>
1783 <emphasis role="preprocessor">#define&#32;EGL_EXT_surface_SMPTE2086_metadata&#32;1</emphasis>
1784 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_DISPLAY_PRIMARY_RX_EXT&#32;0x3341</emphasis>
1785 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_DISPLAY_PRIMARY_RY_EXT&#32;0x3342</emphasis>
1786 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_DISPLAY_PRIMARY_GX_EXT&#32;0x3343</emphasis>
1787 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_DISPLAY_PRIMARY_GY_EXT&#32;0x3344</emphasis>
1788 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_DISPLAY_PRIMARY_BX_EXT&#32;0x3345</emphasis>
1789 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_DISPLAY_PRIMARY_BY_EXT&#32;0x3346</emphasis>
1790 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_WHITE_POINT_X_EXT&#32;&#32;&#32;0x3347</emphasis>
1791 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_WHITE_POINT_Y_EXT&#32;&#32;&#32;0x3348</emphasis>
1792 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_MAX_LUMINANCE_EXT&#32;&#32;&#32;0x3349</emphasis>
1793 <emphasis role="preprocessor">#define&#32;EGL_SMPTE2086_MIN_LUMINANCE_EXT&#32;&#32;&#32;0x334A</emphasis>
1794 <emphasis role="preprocessor">#define&#32;EGL_METADATA_SCALING_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;50000</emphasis>
1795 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_surface_SMPTE2086_metadata&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1796 
1797 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_swap_buffers_with_damage</emphasis>
1798 <emphasis role="preprocessor">#define&#32;EGL_EXT_swap_buffers_with_damage&#32;1</emphasis>
1799 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*rects,&#32;EGLint&#32;n_rects);
1800 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1801 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSwapBuffersWithDamageEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*rects,&#32;EGLint&#32;n_rects);
1802 <emphasis role="preprocessor">#endif</emphasis>
1803 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_swap_buffers_with_damage&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1804 
1805 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_sync_reuse</emphasis>
1806 <emphasis role="preprocessor">#define&#32;EGL_EXT_sync_reuse&#32;1</emphasis>
1807 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLUNSIGNALSYNCEXTPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1808 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1809 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglUnsignalSyncEXT&#32;(EGLDisplay&#32;dpy,&#32;EGLSync&#32;sync,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
1810 <emphasis role="preprocessor">#endif</emphasis>
1811 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_sync_reuse&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1812 
1813 <emphasis role="preprocessor">#ifndef&#32;EGL_EXT_yuv_surface</emphasis>
1814 <emphasis role="preprocessor">#define&#32;EGL_EXT_yuv_surface&#32;1</emphasis>
1815 <emphasis role="preprocessor">#define&#32;EGL_YUV_ORDER_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3301</emphasis>
1816 <emphasis role="preprocessor">#define&#32;EGL_YUV_NUMBER_OF_PLANES_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3311</emphasis>
1817 <emphasis role="preprocessor">#define&#32;EGL_YUV_SUBSAMPLE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3312</emphasis>
1818 <emphasis role="preprocessor">#define&#32;EGL_YUV_DEPTH_RANGE_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3317</emphasis>
1819 <emphasis role="preprocessor">#define&#32;EGL_YUV_CSC_STANDARD_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x330A</emphasis>
1820 <emphasis role="preprocessor">#define&#32;EGL_YUV_PLANE_BPP_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x331A</emphasis>
1821 <emphasis role="preprocessor">#define&#32;EGL_YUV_BUFFER_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3300</emphasis>
1822 <emphasis role="preprocessor">#define&#32;EGL_YUV_ORDER_YUV_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3302</emphasis>
1823 <emphasis role="preprocessor">#define&#32;EGL_YUV_ORDER_YVU_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3303</emphasis>
1824 <emphasis role="preprocessor">#define&#32;EGL_YUV_ORDER_YUYV_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3304</emphasis>
1825 <emphasis role="preprocessor">#define&#32;EGL_YUV_ORDER_UYVY_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3305</emphasis>
1826 <emphasis role="preprocessor">#define&#32;EGL_YUV_ORDER_YVYU_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3306</emphasis>
1827 <emphasis role="preprocessor">#define&#32;EGL_YUV_ORDER_VYUY_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3307</emphasis>
1828 <emphasis role="preprocessor">#define&#32;EGL_YUV_ORDER_AYUV_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3308</emphasis>
1829 <emphasis role="preprocessor">#define&#32;EGL_YUV_SUBSAMPLE_4_2_0_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3313</emphasis>
1830 <emphasis role="preprocessor">#define&#32;EGL_YUV_SUBSAMPLE_4_2_2_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3314</emphasis>
1831 <emphasis role="preprocessor">#define&#32;EGL_YUV_SUBSAMPLE_4_4_4_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3315</emphasis>
1832 <emphasis role="preprocessor">#define&#32;EGL_YUV_DEPTH_RANGE_LIMITED_EXT&#32;&#32;&#32;0x3318</emphasis>
1833 <emphasis role="preprocessor">#define&#32;EGL_YUV_DEPTH_RANGE_FULL_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x3319</emphasis>
1834 <emphasis role="preprocessor">#define&#32;EGL_YUV_CSC_STANDARD_601_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x330B</emphasis>
1835 <emphasis role="preprocessor">#define&#32;EGL_YUV_CSC_STANDARD_709_EXT&#32;&#32;&#32;&#32;&#32;&#32;0x330C</emphasis>
1836 <emphasis role="preprocessor">#define&#32;EGL_YUV_CSC_STANDARD_2020_EXT&#32;&#32;&#32;&#32;&#32;0x330D</emphasis>
1837 <emphasis role="preprocessor">#define&#32;EGL_YUV_PLANE_BPP_0_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x331B</emphasis>
1838 <emphasis role="preprocessor">#define&#32;EGL_YUV_PLANE_BPP_8_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x331C</emphasis>
1839 <emphasis role="preprocessor">#define&#32;EGL_YUV_PLANE_BPP_10_EXT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x331D</emphasis>
1840 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_EXT_yuv_surface&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1841 
1842 <emphasis role="preprocessor">#ifndef&#32;EGL_HI_clientpixmap</emphasis>
1843 <emphasis role="preprocessor">#define&#32;EGL_HI_clientpixmap&#32;1</emphasis>
1844 <emphasis role="keyword">struct&#32;</emphasis>EGLClientPixmapHI&#32;{
1845 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;*pData;
1846 &#32;&#32;&#32;&#32;EGLint&#32;iWidth;
1847 &#32;&#32;&#32;&#32;EGLint&#32;iHeight;
1848 &#32;&#32;&#32;&#32;EGLint&#32;iStride;
1849 };
1850 <emphasis role="preprocessor">#define&#32;EGL_CLIENT_PIXMAP_POINTER_HI&#32;&#32;&#32;&#32;&#32;&#32;0x8F74</emphasis>
1851 <emphasis role="keyword">typedef</emphasis>&#32;EGLSurface&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEPIXMAPSURFACEHIPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keyword">struct&#32;</emphasis>EGLClientPixmapHI&#32;*pixmap);
1852 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1853 EGLAPI&#32;EGLSurface&#32;EGLAPIENTRY&#32;eglCreatePixmapSurfaceHI&#32;(EGLDisplay&#32;dpy,&#32;EGLConfig&#32;config,&#32;<emphasis role="keyword">struct</emphasis>&#32;EGLClientPixmapHI&#32;*pixmap);
1854 <emphasis role="preprocessor">#endif</emphasis>
1855 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_HI_clientpixmap&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1856 
1857 <emphasis role="preprocessor">#ifndef&#32;EGL_HI_colorformats</emphasis>
1858 <emphasis role="preprocessor">#define&#32;EGL_HI_colorformats&#32;1</emphasis>
1859 <emphasis role="preprocessor">#define&#32;EGL_COLOR_FORMAT_HI&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8F70</emphasis>
1860 <emphasis role="preprocessor">#define&#32;EGL_COLOR_RGB_HI&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8F71</emphasis>
1861 <emphasis role="preprocessor">#define&#32;EGL_COLOR_RGBA_HI&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8F72</emphasis>
1862 <emphasis role="preprocessor">#define&#32;EGL_COLOR_ARGB_HI&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x8F73</emphasis>
1863 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_HI_colorformats&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1864 
1865 <emphasis role="preprocessor">#ifndef&#32;EGL_IMG_context_priority</emphasis>
1866 <emphasis role="preprocessor">#define&#32;EGL_IMG_context_priority&#32;1</emphasis>
1867 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_PRIORITY_LEVEL_IMG&#32;&#32;&#32;&#32;0x3100</emphasis>
1868 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_PRIORITY_HIGH_IMG&#32;&#32;&#32;&#32;&#32;0x3101</emphasis>
1869 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_PRIORITY_MEDIUM_IMG&#32;&#32;&#32;0x3102</emphasis>
1870 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_PRIORITY_LOW_IMG&#32;&#32;&#32;&#32;&#32;&#32;0x3103</emphasis>
1871 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_IMG_context_priority&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1872 
1873 <emphasis role="preprocessor">#ifndef&#32;EGL_IMG_image_plane_attribs</emphasis>
1874 <emphasis role="preprocessor">#define&#32;EGL_IMG_image_plane_attribs&#32;1</emphasis>
1875 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_BUFFER_MULTIPLANE_SEPARATE_IMG&#32;0x3105</emphasis>
1876 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_BUFFER_PLANE_OFFSET_IMG&#32;0x3106</emphasis>
1877 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_IMG_image_plane_attribs&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1878 
1879 <emphasis role="preprocessor">#ifndef&#32;EGL_MESA_drm_image</emphasis>
1880 <emphasis role="preprocessor">#define&#32;EGL_MESA_drm_image&#32;1</emphasis>
1881 <emphasis role="preprocessor">#define&#32;EGL_DRM_BUFFER_FORMAT_MESA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D0</emphasis>
1882 <emphasis role="preprocessor">#define&#32;EGL_DRM_BUFFER_USE_MESA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D1</emphasis>
1883 <emphasis role="preprocessor">#define&#32;EGL_DRM_BUFFER_FORMAT_ARGB32_MESA&#32;0x31D2</emphasis>
1884 <emphasis role="preprocessor">#define&#32;EGL_DRM_BUFFER_MESA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D3</emphasis>
1885 <emphasis role="preprocessor">#define&#32;EGL_DRM_BUFFER_STRIDE_MESA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D4</emphasis>
1886 <emphasis role="preprocessor">#define&#32;EGL_DRM_BUFFER_USE_SCANOUT_MESA&#32;&#32;&#32;0x00000001</emphasis>
1887 <emphasis role="preprocessor">#define&#32;EGL_DRM_BUFFER_USE_SHARE_MESA&#32;&#32;&#32;&#32;&#32;0x00000002</emphasis>
1888 <emphasis role="preprocessor">#define&#32;EGL_DRM_BUFFER_USE_CURSOR_MESA&#32;&#32;&#32;&#32;0x00000004</emphasis>
1889 <emphasis role="keyword">typedef</emphasis>&#32;EGLImageKHR&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEDRMIMAGEMESAPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1890 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLEXPORTDRMIMAGEMESAPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>,&#32;EGLint&#32;*handle,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a743715bb319dd426e85b9774559cc0ea">stride</link>);
1891 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1892 EGLAPI&#32;EGLImageKHR&#32;EGLAPIENTRY&#32;eglCreateDRMImageMESA&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
1893 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglExportDRMImageMESA&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>,&#32;EGLint&#32;*handle,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a743715bb319dd426e85b9774559cc0ea">stride</link>);
1894 <emphasis role="preprocessor">#endif</emphasis>
1895 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_MESA_drm_image&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1896 
1897 <emphasis role="preprocessor">#ifndef&#32;EGL_MESA_image_dma_buf_export</emphasis>
1898 <emphasis role="preprocessor">#define&#32;EGL_MESA_image_dma_buf_export&#32;1</emphasis>
1899 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*fourcc,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*num_planes,&#32;EGLuint64KHR&#32;*modifiers);
1900 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLEXPORTDMABUFIMAGEMESAPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*fds,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a0ee97b40d6208eba611c597d83b029a5">strides</link>,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a1b4d6c0d4a1eb8b693aa458f455ed705">offsets</link>);
1901 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1902 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglExportDMABUFImageQueryMESA&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*fourcc,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*num_planes,&#32;EGLuint64KHR&#32;*modifiers);
1903 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglExportDMABUFImageMESA&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;*fds,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a0ee97b40d6208eba611c597d83b029a5">strides</link>,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a1b4d6c0d4a1eb8b693aa458f455ed705">offsets</link>);
1904 <emphasis role="preprocessor">#endif</emphasis>
1905 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_MESA_image_dma_buf_export&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1906 
1907 <emphasis role="preprocessor">#ifndef&#32;EGL_MESA_platform_gbm</emphasis>
1908 <emphasis role="preprocessor">#define&#32;EGL_MESA_platform_gbm&#32;1</emphasis>
1909 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_GBM_MESA&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D7</emphasis>
1910 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_MESA_platform_gbm&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1911 
1912 <emphasis role="preprocessor">#ifndef&#32;EGL_MESA_platform_surfaceless</emphasis>
1913 <emphasis role="preprocessor">#define&#32;EGL_MESA_platform_surfaceless&#32;1</emphasis>
1914 <emphasis role="preprocessor">#define&#32;EGL_PLATFORM_SURFACELESS_MESA&#32;&#32;&#32;&#32;&#32;0x31DD</emphasis>
1915 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_MESA_platform_surfaceless&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1916 
1917 <emphasis role="preprocessor">#ifndef&#32;EGL_MESA_query_driver</emphasis>
1918 <emphasis role="preprocessor">#define&#32;EGL_MESA_query_driver&#32;1</emphasis>
1919 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*(EGLAPIENTRYP&#32;PFNEGLGETDISPLAYDRIVERCONFIGPROC)&#32;(EGLDisplay&#32;dpy);
1920 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*(EGLAPIENTRYP&#32;PFNEGLGETDISPLAYDRIVERNAMEPROC)&#32;(EGLDisplay&#32;dpy);
1921 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1922 EGLAPI&#32;<emphasis role="keywordtype">char</emphasis>&#32;*EGLAPIENTRY&#32;eglGetDisplayDriverConfig&#32;(EGLDisplay&#32;dpy);
1923 EGLAPI&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*EGLAPIENTRY&#32;eglGetDisplayDriverName&#32;(EGLDisplay&#32;dpy);
1924 <emphasis role="preprocessor">#endif</emphasis>
1925 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_MESA_query_driver&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1926 
1927 <emphasis role="preprocessor">#ifndef&#32;EGL_NOK_swap_region</emphasis>
1928 <emphasis role="preprocessor">#define&#32;EGL_NOK_swap_region&#32;1</emphasis>
1929 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSWAPBUFFERSREGIONNOKPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;numRects,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*rects);
1930 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1931 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSwapBuffersRegionNOK&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;numRects,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*rects);
1932 <emphasis role="preprocessor">#endif</emphasis>
1933 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NOK_swap_region&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1934 
1935 <emphasis role="preprocessor">#ifndef&#32;EGL_NOK_swap_region2</emphasis>
1936 <emphasis role="preprocessor">#define&#32;EGL_NOK_swap_region2&#32;1</emphasis>
1937 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSWAPBUFFERSREGION2NOKPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;numRects,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*rects);
1938 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1939 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSwapBuffersRegion2NOK&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;numRects,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*rects);
1940 <emphasis role="preprocessor">#endif</emphasis>
1941 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NOK_swap_region2&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1942 
1943 <emphasis role="preprocessor">#ifndef&#32;EGL_NOK_texture_from_pixmap</emphasis>
1944 <emphasis role="preprocessor">#define&#32;EGL_NOK_texture_from_pixmap&#32;1</emphasis>
1945 <emphasis role="preprocessor">#define&#32;EGL_Y_INVERTED_NOK&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x307F</emphasis>
1946 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NOK_texture_from_pixmap&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1947 
1948 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_3dvision_surface</emphasis>
1949 <emphasis role="preprocessor">#define&#32;EGL_NV_3dvision_surface&#32;1</emphasis>
1950 <emphasis role="preprocessor">#define&#32;EGL_AUTO_STEREO_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3136</emphasis>
1951 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_3dvision_surface&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1952 
1953 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_context_priority_realtime</emphasis>
1954 <emphasis role="preprocessor">#define&#32;EGL_NV_context_priority_realtime&#32;1</emphasis>
1955 <emphasis role="preprocessor">#define&#32;EGL_CONTEXT_PRIORITY_REALTIME_NV&#32;&#32;0x3357</emphasis>
1956 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_context_priority_realtime&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1957 
1958 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_coverage_sample</emphasis>
1959 <emphasis role="preprocessor">#define&#32;EGL_NV_coverage_sample&#32;1</emphasis>
1960 <emphasis role="preprocessor">#define&#32;EGL_COVERAGE_BUFFERS_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30E0</emphasis>
1961 <emphasis role="preprocessor">#define&#32;EGL_COVERAGE_SAMPLES_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30E1</emphasis>
1962 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_coverage_sample&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1963 
1964 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_coverage_sample_resolve</emphasis>
1965 <emphasis role="preprocessor">#define&#32;EGL_NV_coverage_sample_resolve&#32;1</emphasis>
1966 <emphasis role="preprocessor">#define&#32;EGL_COVERAGE_SAMPLE_RESOLVE_NV&#32;&#32;&#32;&#32;0x3131</emphasis>
1967 <emphasis role="preprocessor">#define&#32;EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV&#32;0x3132</emphasis>
1968 <emphasis role="preprocessor">#define&#32;EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV&#32;0x3133</emphasis>
1969 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_coverage_sample_resolve&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1970 
1971 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_cuda_event</emphasis>
1972 <emphasis role="preprocessor">#define&#32;EGL_NV_cuda_event&#32;1</emphasis>
1973 <emphasis role="preprocessor">#define&#32;EGL_CUDA_EVENT_HANDLE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x323B</emphasis>
1974 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CUDA_EVENT_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x323C</emphasis>
1975 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CUDA_EVENT_COMPLETE_NV&#32;&#32;&#32;0x323D</emphasis>
1976 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_cuda_event&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1977 
1978 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_depth_nonlinear</emphasis>
1979 <emphasis role="preprocessor">#define&#32;EGL_NV_depth_nonlinear&#32;1</emphasis>
1980 <emphasis role="preprocessor">#define&#32;EGL_DEPTH_ENCODING_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30E2</emphasis>
1981 <emphasis role="preprocessor">#define&#32;EGL_DEPTH_ENCODING_NONE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0</emphasis>
1982 <emphasis role="preprocessor">#define&#32;EGL_DEPTH_ENCODING_NONLINEAR_NV&#32;&#32;&#32;0x30E3</emphasis>
1983 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_depth_nonlinear&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1984 
1985 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_device_cuda</emphasis>
1986 <emphasis role="preprocessor">#define&#32;EGL_NV_device_cuda&#32;1</emphasis>
1987 <emphasis role="preprocessor">#define&#32;EGL_CUDA_DEVICE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x323A</emphasis>
1988 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_device_cuda&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
1989 
1990 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_native_query</emphasis>
1991 <emphasis role="preprocessor">#define&#32;EGL_NV_native_query&#32;1</emphasis>
1992 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYNATIVEDISPLAYNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLNativeDisplayType&#32;*display_id);
1993 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYNATIVEWINDOWNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surf,&#32;EGLNativeWindowType&#32;*window);
1994 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYNATIVEPIXMAPNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surf,&#32;EGLNativePixmapType&#32;*pixmap);
1995 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
1996 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryNativeDisplayNV&#32;(EGLDisplay&#32;dpy,&#32;EGLNativeDisplayType&#32;*display_id);
1997 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryNativeWindowNV&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surf,&#32;EGLNativeWindowType&#32;*window);
1998 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryNativePixmapNV&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surf,&#32;EGLNativePixmapType&#32;*pixmap);
1999 <emphasis role="preprocessor">#endif</emphasis>
2000 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_native_query&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2001 
2002 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_post_convert_rounding</emphasis>
2003 <emphasis role="preprocessor">#define&#32;EGL_NV_post_convert_rounding&#32;1</emphasis>
2004 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_post_convert_rounding&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2005 
2006 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_post_sub_buffer</emphasis>
2007 <emphasis role="preprocessor">#define&#32;EGL_NV_post_sub_buffer&#32;1</emphasis>
2008 <emphasis role="preprocessor">#define&#32;EGL_POST_SUB_BUFFER_SUPPORTED_NV&#32;&#32;0x30BE</emphasis>
2009 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLPOSTSUBBUFFERNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47">x</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3">y</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1a9a82cf3caff84cabc4598e2619faac17">width</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1aa352f2804b9902ac30769c00dde75d5f">height</link>);
2010 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2011 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglPostSubBufferNV&#32;(EGLDisplay&#32;dpy,&#32;EGLSurface&#32;surface,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47">x</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3">y</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1a9a82cf3caff84cabc4598e2619faac17">width</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl_8h_1aa352f2804b9902ac30769c00dde75d5f">height</link>);
2012 <emphasis role="preprocessor">#endif</emphasis>
2013 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_post_sub_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2014 
2015 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_quadruple_buffer</emphasis>
2016 <emphasis role="preprocessor">#define&#32;EGL_NV_quadruple_buffer&#32;1</emphasis>
2017 <emphasis role="preprocessor">#define&#32;EGL_QUADRUPLE_BUFFER_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3231</emphasis>
2018 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_quadruple_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2019 
2020 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_robustness_video_memory_purge</emphasis>
2021 <emphasis role="preprocessor">#define&#32;EGL_NV_robustness_video_memory_purge&#32;1</emphasis>
2022 <emphasis role="preprocessor">#define&#32;EGL_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV&#32;0x334C</emphasis>
2023 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_robustness_video_memory_purge&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2024 
2025 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_consumer_eglimage</emphasis>
2026 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_consumer_eglimage&#32;1</emphasis>
2027 <emphasis role="preprocessor">#define&#32;EGL_STREAM_CONSUMER_IMAGE_NV&#32;&#32;&#32;&#32;&#32;&#32;0x3373</emphasis>
2028 <emphasis role="preprocessor">#define&#32;EGL_STREAM_IMAGE_ADD_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3374</emphasis>
2029 <emphasis role="preprocessor">#define&#32;EGL_STREAM_IMAGE_REMOVE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3375</emphasis>
2030 <emphasis role="preprocessor">#define&#32;EGL_STREAM_IMAGE_AVAILABLE_NV&#32;&#32;&#32;&#32;&#32;0x3376</emphasis>
2031 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMIMAGECONSUMERCONNECTNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLint&#32;num_modifiers,&#32;EGLuint64KHR&#32;*modifiers,&#32;EGLAttrib&#32;*attrib_list);
2032 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSTREAMCONSUMEREVENTNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLTime&#32;<link linkend="__s_d_l__opengl__glext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>,&#32;EGLenum&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>,&#32;EGLAttrib&#32;*aux);
2033 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMACQUIREIMAGENVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLImage&#32;*pImage,&#32;EGLSync&#32;sync);
2034 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMRELEASEIMAGENVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLImage&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;EGLSync&#32;sync);
2035 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2036 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamImageConsumerConnectNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLint&#32;num_modifiers,&#32;EGLuint64KHR&#32;*modifiers,&#32;EGLAttrib&#32;*attrib_list);
2037 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglQueryStreamConsumerEventNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLTime&#32;<link linkend="__s_d_l__opengl__glext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>,&#32;EGLenum&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a03b04a5a978bad576866339075de01f6">event</link>,&#32;EGLAttrib&#32;*aux);
2038 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamAcquireImageNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLImage&#32;*pImage,&#32;EGLSync&#32;sync);
2039 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamReleaseImageNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLImage&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>,&#32;EGLSync&#32;sync);
2040 <emphasis role="preprocessor">#endif</emphasis>
2041 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_consumer_eglimage&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2042 
2043 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_consumer_gltexture_yuv</emphasis>
2044 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_consumer_gltexture_yuv&#32;1</emphasis>
2045 <emphasis role="preprocessor">#define&#32;EGL_YUV_PLANE0_TEXTURE_UNIT_NV&#32;&#32;&#32;&#32;0x332C</emphasis>
2046 <emphasis role="preprocessor">#define&#32;EGL_YUV_PLANE1_TEXTURE_UNIT_NV&#32;&#32;&#32;&#32;0x332D</emphasis>
2047 <emphasis role="preprocessor">#define&#32;EGL_YUV_PLANE2_TEXTURE_UNIT_NV&#32;&#32;&#32;&#32;0x332E</emphasis>
2048 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
2049 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2050 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamConsumerGLTextureExternalAttribsNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLAttrib&#32;*attrib_list);
2051 <emphasis role="preprocessor">#endif</emphasis>
2052 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_consumer_gltexture_yuv&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2053 
2054 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_cross_display</emphasis>
2055 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_cross_display&#32;1</emphasis>
2056 <emphasis role="preprocessor">#define&#32;EGL_STREAM_CROSS_DISPLAY_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x334E</emphasis>
2057 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_cross_display&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2058 
2059 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_cross_object</emphasis>
2060 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_cross_object&#32;1</emphasis>
2061 <emphasis role="preprocessor">#define&#32;EGL_STREAM_CROSS_OBJECT_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x334D</emphasis>
2062 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_cross_object&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2063 
2064 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_cross_partition</emphasis>
2065 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_cross_partition&#32;1</emphasis>
2066 <emphasis role="preprocessor">#define&#32;EGL_STREAM_CROSS_PARTITION_NV&#32;&#32;&#32;&#32;&#32;0x323F</emphasis>
2067 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_cross_partition&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2068 
2069 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_cross_process</emphasis>
2070 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_cross_process&#32;1</emphasis>
2071 <emphasis role="preprocessor">#define&#32;EGL_STREAM_CROSS_PROCESS_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3245</emphasis>
2072 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_cross_process&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2073 
2074 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_cross_system</emphasis>
2075 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_cross_system&#32;1</emphasis>
2076 <emphasis role="preprocessor">#define&#32;EGL_STREAM_CROSS_SYSTEM_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x334F</emphasis>
2077 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_cross_system&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2078 
2079 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_dma</emphasis>
2080 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_dma&#32;1</emphasis>
2081 <emphasis role="preprocessor">#define&#32;EGL_STREAM_DMA_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3371</emphasis>
2082 <emphasis role="preprocessor">#define&#32;EGL_STREAM_DMA_SERVER_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3372</emphasis>
2083 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_dma&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2084 
2085 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_fifo_next</emphasis>
2086 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_fifo_next&#32;1</emphasis>
2087 <emphasis role="preprocessor">#define&#32;EGL_PENDING_FRAME_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3329</emphasis>
2088 <emphasis role="preprocessor">#define&#32;EGL_STREAM_TIME_PENDING_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x332A</emphasis>
2089 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_fifo_next&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2090 
2091 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_fifo_synchronous</emphasis>
2092 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_fifo_synchronous&#32;1</emphasis>
2093 <emphasis role="preprocessor">#define&#32;EGL_STREAM_FIFO_SYNCHRONOUS_NV&#32;&#32;&#32;&#32;0x3336</emphasis>
2094 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_fifo_synchronous&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2095 
2096 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_flush</emphasis>
2097 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_flush&#32;1</emphasis>
2098 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSTREAMFLUSHNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
2099 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2100 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglStreamFlushNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
2101 <emphasis role="preprocessor">#endif</emphasis>
2102 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_flush&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2103 
2104 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_frame_limits</emphasis>
2105 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_frame_limits&#32;1</emphasis>
2106 <emphasis role="preprocessor">#define&#32;EGL_PRODUCER_MAX_FRAME_HINT_NV&#32;&#32;&#32;&#32;0x3337</emphasis>
2107 <emphasis role="preprocessor">#define&#32;EGL_CONSUMER_MAX_FRAME_HINT_NV&#32;&#32;&#32;&#32;0x3338</emphasis>
2108 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_frame_limits&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2109 
2110 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_metadata</emphasis>
2111 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_metadata&#32;1</emphasis>
2112 <emphasis role="preprocessor">#define&#32;EGL_MAX_STREAM_METADATA_BLOCKS_NV&#32;0x3250</emphasis>
2113 <emphasis role="preprocessor">#define&#32;EGL_MAX_STREAM_METADATA_BLOCK_SIZE_NV&#32;0x3251</emphasis>
2114 <emphasis role="preprocessor">#define&#32;EGL_MAX_STREAM_METADATA_TOTAL_SIZE_NV&#32;0x3252</emphasis>
2115 <emphasis role="preprocessor">#define&#32;EGL_PRODUCER_METADATA_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3253</emphasis>
2116 <emphasis role="preprocessor">#define&#32;EGL_CONSUMER_METADATA_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3254</emphasis>
2117 <emphasis role="preprocessor">#define&#32;EGL_PENDING_METADATA_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3328</emphasis>
2118 <emphasis role="preprocessor">#define&#32;EGL_METADATA0_SIZE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3255</emphasis>
2119 <emphasis role="preprocessor">#define&#32;EGL_METADATA1_SIZE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3256</emphasis>
2120 <emphasis role="preprocessor">#define&#32;EGL_METADATA2_SIZE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3257</emphasis>
2121 <emphasis role="preprocessor">#define&#32;EGL_METADATA3_SIZE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3258</emphasis>
2122 <emphasis role="preprocessor">#define&#32;EGL_METADATA0_TYPE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3259</emphasis>
2123 <emphasis role="preprocessor">#define&#32;EGL_METADATA1_TYPE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x325A</emphasis>
2124 <emphasis role="preprocessor">#define&#32;EGL_METADATA2_TYPE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x325B</emphasis>
2125 <emphasis role="preprocessor">#define&#32;EGL_METADATA3_TYPE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x325C</emphasis>
2126 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYDISPLAYATTRIBNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
2127 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSETSTREAMMETADATANVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae2b4646468bc89d0ba646f5cf838e051">n</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac915cd848f42b26af51745f204a3b9af">offset</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a">data</link>);
2128 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYSTREAMMETADATANVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae2b4646468bc89d0ba646f5cf838e051">n</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac915cd848f42b26af51745f204a3b9af">offset</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a">data</link>);
2129 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2130 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryDisplayAttribNV&#32;(EGLDisplay&#32;dpy,&#32;EGLint&#32;attribute,&#32;EGLAttrib&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
2131 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSetStreamMetadataNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae2b4646468bc89d0ba646f5cf838e051">n</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac915cd848f42b26af51745f204a3b9af">offset</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a">data</link>);
2132 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryStreamMetadataNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239">name</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ae2b4646468bc89d0ba646f5cf838e051">n</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac915cd848f42b26af51745f204a3b9af">offset</link>,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e">size</link>,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="__s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a">data</link>);
2133 <emphasis role="preprocessor">#endif</emphasis>
2134 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_metadata&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2135 
2136 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_origin</emphasis>
2137 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_origin&#32;1</emphasis>
2138 <emphasis role="preprocessor">#define&#32;EGL_STREAM_FRAME_ORIGIN_X_NV&#32;&#32;&#32;&#32;&#32;&#32;0x3366</emphasis>
2139 <emphasis role="preprocessor">#define&#32;EGL_STREAM_FRAME_ORIGIN_Y_NV&#32;&#32;&#32;&#32;&#32;&#32;0x3367</emphasis>
2140 <emphasis role="preprocessor">#define&#32;EGL_STREAM_FRAME_MAJOR_AXIS_NV&#32;&#32;&#32;&#32;0x3368</emphasis>
2141 <emphasis role="preprocessor">#define&#32;EGL_CONSUMER_AUTO_ORIENTATION_NV&#32;&#32;0x3369</emphasis>
2142 <emphasis role="preprocessor">#define&#32;EGL_PRODUCER_AUTO_ORIENTATION_NV&#32;&#32;0x336A</emphasis>
2143 <emphasis role="preprocessor">#define&#32;EGL_LEFT_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x336B</emphasis>
2144 <emphasis role="preprocessor">#define&#32;EGL_RIGHT_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x336C</emphasis>
2145 <emphasis role="preprocessor">#define&#32;EGL_TOP_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x336D</emphasis>
2146 <emphasis role="preprocessor">#define&#32;EGL_BOTTOM_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x336E</emphasis>
2147 <emphasis role="preprocessor">#define&#32;EGL_X_AXIS_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x336F</emphasis>
2148 <emphasis role="preprocessor">#define&#32;EGL_Y_AXIS_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3370</emphasis>
2149 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_origin&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2150 
2151 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_remote</emphasis>
2152 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_remote&#32;1</emphasis>
2153 <emphasis role="preprocessor">#define&#32;EGL_STREAM_STATE_INITIALIZING_NV&#32;&#32;0x3240</emphasis>
2154 <emphasis role="preprocessor">#define&#32;EGL_STREAM_TYPE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3241</emphasis>
2155 <emphasis role="preprocessor">#define&#32;EGL_STREAM_PROTOCOL_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3242</emphasis>
2156 <emphasis role="preprocessor">#define&#32;EGL_STREAM_ENDPOINT_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3243</emphasis>
2157 <emphasis role="preprocessor">#define&#32;EGL_STREAM_LOCAL_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3244</emphasis>
2158 <emphasis role="preprocessor">#define&#32;EGL_STREAM_PRODUCER_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3247</emphasis>
2159 <emphasis role="preprocessor">#define&#32;EGL_STREAM_CONSUMER_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3248</emphasis>
2160 <emphasis role="preprocessor">#define&#32;EGL_STREAM_PROTOCOL_FD_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3246</emphasis>
2161 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_remote&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2162 
2163 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_reset</emphasis>
2164 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_reset&#32;1</emphasis>
2165 <emphasis role="preprocessor">#define&#32;EGL_SUPPORT_RESET_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3334</emphasis>
2166 <emphasis role="preprocessor">#define&#32;EGL_SUPPORT_REUSE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3335</emphasis>
2167 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLRESETSTREAMNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
2168 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2169 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglResetStreamNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>);
2170 <emphasis role="preprocessor">#endif</emphasis>
2171 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_reset&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2172 
2173 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_socket</emphasis>
2174 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_socket&#32;1</emphasis>
2175 <emphasis role="preprocessor">#define&#32;EGL_STREAM_PROTOCOL_SOCKET_NV&#32;&#32;&#32;&#32;&#32;0x324B</emphasis>
2176 <emphasis role="preprocessor">#define&#32;EGL_SOCKET_HANDLE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x324C</emphasis>
2177 <emphasis role="preprocessor">#define&#32;EGL_SOCKET_TYPE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x324D</emphasis>
2178 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_socket&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2179 
2180 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_socket_inet</emphasis>
2181 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_socket_inet&#32;1</emphasis>
2182 <emphasis role="preprocessor">#define&#32;EGL_SOCKET_TYPE_INET_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x324F</emphasis>
2183 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_socket_inet&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2184 
2185 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_socket_unix</emphasis>
2186 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_socket_unix&#32;1</emphasis>
2187 <emphasis role="preprocessor">#define&#32;EGL_SOCKET_TYPE_UNIX_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x324E</emphasis>
2188 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_socket_unix&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2189 
2190 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_stream_sync</emphasis>
2191 <emphasis role="preprocessor">#define&#32;EGL_NV_stream_sync&#32;1</emphasis>
2192 <emphasis role="preprocessor">#define&#32;EGL_SYNC_NEW_FRAME_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x321F</emphasis>
2193 <emphasis role="keyword">typedef</emphasis>&#32;EGLSyncKHR&#32;(EGLAPIENTRYP&#32;PFNEGLCREATESTREAMSYNCNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188">type</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
2194 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2195 EGLAPI&#32;EGLSyncKHR&#32;EGLAPIENTRY&#32;eglCreateStreamSyncNV&#32;(EGLDisplay&#32;dpy,&#32;EGLStreamKHR&#32;<link linkend="__s_d_l__opengl__glext_8h_1a10d3bc96cdfc1d478f52c13d5ffd9316">stream</link>,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188">type</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
2196 <emphasis role="preprocessor">#endif</emphasis>
2197 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_stream_sync&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2198 
2199 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_sync</emphasis>
2200 <emphasis role="preprocessor">#define&#32;EGL_NV_sync&#32;1</emphasis>
2201 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*EGLSyncNV;
2202 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a7643cf38bfc46e0d120a42d586639856">khronos_utime_nanoseconds_t</link>&#32;EGLTimeNV;
2203 <emphasis role="preprocessor">#ifdef&#32;KHRONOS_SUPPORT_INT64</emphasis>
2204 <emphasis role="preprocessor">#define&#32;EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV&#32;0x30E6</emphasis>
2205 <emphasis role="preprocessor">#define&#32;EGL_SYNC_STATUS_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30E7</emphasis>
2206 <emphasis role="preprocessor">#define&#32;EGL_SIGNALED_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30E8</emphasis>
2207 <emphasis role="preprocessor">#define&#32;EGL_UNSIGNALED_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30E9</emphasis>
2208 <emphasis role="preprocessor">#define&#32;EGL_SYNC_FLUSH_COMMANDS_BIT_NV&#32;&#32;&#32;&#32;0x0001</emphasis>
2209 <emphasis role="preprocessor">#define&#32;EGL_FOREVER_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0xFFFFFFFFFFFFFFFFull</emphasis>
2210 <emphasis role="preprocessor">#define&#32;EGL_ALREADY_SIGNALED_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30EA</emphasis>
2211 <emphasis role="preprocessor">#define&#32;EGL_TIMEOUT_EXPIRED_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30EB</emphasis>
2212 <emphasis role="preprocessor">#define&#32;EGL_CONDITION_SATISFIED_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30EC</emphasis>
2213 <emphasis role="preprocessor">#define&#32;EGL_SYNC_TYPE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30ED</emphasis>
2214 <emphasis role="preprocessor">#define&#32;EGL_SYNC_CONDITION_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30EE</emphasis>
2215 <emphasis role="preprocessor">#define&#32;EGL_SYNC_FENCE_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30EF</emphasis>
2216 <emphasis role="preprocessor">#define&#32;EGL_NO_SYNC_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EGL_CAST(EGLSyncNV,0)</emphasis>
2217 <emphasis role="keyword">typedef</emphasis>&#32;EGLSyncNV&#32;(EGLAPIENTRYP&#32;PFNEGLCREATEFENCESYNCNVPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
2218 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLDESTROYSYNCNVPROC)&#32;(EGLSyncNV&#32;sync);
2219 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLFENCENVPROC)&#32;(EGLSyncNV&#32;sync);
2220 <emphasis role="keyword">typedef</emphasis>&#32;EGLint&#32;(EGLAPIENTRYP&#32;PFNEGLCLIENTWAITSYNCNVPROC)&#32;(EGLSyncNV&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>,&#32;EGLTimeNV&#32;<link linkend="__s_d_l__opengl__glext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>);
2221 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLSIGNALSYNCNVPROC)&#32;(EGLSyncNV&#32;sync,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>);
2222 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLGETSYNCATTRIBNVPROC)&#32;(EGLSyncNV&#32;sync,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
2223 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2224 EGLAPI&#32;EGLSyncNV&#32;EGLAPIENTRY&#32;eglCreateFenceSyncNV&#32;(EGLDisplay&#32;dpy,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1a3fd7759b3d6e5284475eee14a613b9f9">condition</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;EGLint&#32;*attrib_list);
2225 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglDestroySyncNV&#32;(EGLSyncNV&#32;sync);
2226 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglFenceNV&#32;(EGLSyncNV&#32;sync);
2227 EGLAPI&#32;EGLint&#32;EGLAPIENTRY&#32;eglClientWaitSyncNV&#32;(EGLSyncNV&#32;sync,&#32;EGLint&#32;<link linkend="__s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289">flags</link>,&#32;EGLTimeNV&#32;<link linkend="__s_d_l__opengl__glext_8h_1ad29bb0d8468b264a4e3d9204366cfaab">timeout</link>);
2228 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglSignalSyncNV&#32;(EGLSyncNV&#32;sync,&#32;EGLenum&#32;<link linkend="__s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5">mode</link>);
2229 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglGetSyncAttribNV&#32;(EGLSyncNV&#32;sync,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
2230 <emphasis role="preprocessor">#endif</emphasis>
2231 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KHRONOS_SUPPORT_INT64&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2232 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_sync&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2233 
2234 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_system_time</emphasis>
2235 <emphasis role="preprocessor">#define&#32;EGL_NV_system_time&#32;1</emphasis>
2236 <emphasis role="keyword">typedef</emphasis>&#32;<link linkend="__s_d_l__opengles2__khrplatform_8h_1a7643cf38bfc46e0d120a42d586639856">khronos_utime_nanoseconds_t</link>&#32;EGLuint64NV;
2237 <emphasis role="preprocessor">#ifdef&#32;KHRONOS_SUPPORT_INT64</emphasis>
2238 <emphasis role="keyword">typedef</emphasis>&#32;EGLuint64NV&#32;(EGLAPIENTRYP&#32;PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
2239 <emphasis role="keyword">typedef</emphasis>&#32;EGLuint64NV&#32;(EGLAPIENTRYP&#32;PFNEGLGETSYSTEMTIMENVPROC)&#32;(<link linkend="__s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01">void</link>);
2240 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2241 EGLAPI&#32;EGLuint64NV&#32;EGLAPIENTRY&#32;eglGetSystemTimeFrequencyNV&#32;(<emphasis role="keywordtype">void</emphasis>);
2242 EGLAPI&#32;EGLuint64NV&#32;EGLAPIENTRY&#32;eglGetSystemTimeNV&#32;(<emphasis role="keywordtype">void</emphasis>);
2243 <emphasis role="preprocessor">#endif</emphasis>
2244 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KHRONOS_SUPPORT_INT64&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2245 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_system_time&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2246 
2247 <emphasis role="preprocessor">#ifndef&#32;EGL_NV_triple_buffer</emphasis>
2248 <emphasis role="preprocessor">#define&#32;EGL_NV_triple_buffer&#32;1</emphasis>
2249 <emphasis role="preprocessor">#define&#32;EGL_TRIPLE_BUFFER_NV&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3230</emphasis>
2250 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_NV_triple_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2251 
2252 <emphasis role="preprocessor">#ifndef&#32;EGL_TIZEN_image_native_buffer</emphasis>
2253 <emphasis role="preprocessor">#define&#32;EGL_TIZEN_image_native_buffer&#32;1</emphasis>
2254 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_BUFFER_TIZEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x32A0</emphasis>
2255 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_TIZEN_image_native_buffer&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2256 
2257 <emphasis role="preprocessor">#ifndef&#32;EGL_TIZEN_image_native_surface</emphasis>
2258 <emphasis role="preprocessor">#define&#32;EGL_TIZEN_image_native_surface&#32;1</emphasis>
2259 <emphasis role="preprocessor">#define&#32;EGL_NATIVE_SURFACE_TIZEN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x32A1</emphasis>
2260 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_TIZEN_image_native_surface&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2261 
2262 <emphasis role="preprocessor">#ifndef&#32;EGL_WL_bind_wayland_display</emphasis>
2263 <emphasis role="preprocessor">#define&#32;EGL_WL_bind_wayland_display&#32;1</emphasis>
2264 <emphasis role="preprocessor">#define&#32;PFNEGLBINDWAYLANDDISPLAYWL&#32;PFNEGLBINDWAYLANDDISPLAYWLPROC</emphasis>
2265 <emphasis role="preprocessor">#define&#32;PFNEGLUNBINDWAYLANDDISPLAYWL&#32;PFNEGLUNBINDWAYLANDDISPLAYWLPROC</emphasis>
2266 <emphasis role="preprocessor">#define&#32;PFNEGLQUERYWAYLANDBUFFERWL&#32;PFNEGLQUERYWAYLANDBUFFERWLPROC</emphasis>
2267 <emphasis role="keyword">struct&#32;</emphasis>wl_display;
2268 <emphasis role="keyword">struct&#32;</emphasis>wl_resource;
2269 <emphasis role="preprocessor">#define&#32;EGL_WAYLAND_BUFFER_WL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D5</emphasis>
2270 <emphasis role="preprocessor">#define&#32;EGL_WAYLAND_PLANE_WL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D6</emphasis>
2271 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_Y_U_V_WL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D7</emphasis>
2272 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_Y_UV_WL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D8</emphasis>
2273 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_Y_XUXV_WL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31D9</emphasis>
2274 <emphasis role="preprocessor">#define&#32;EGL_TEXTURE_EXTERNAL_WL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31DA</emphasis>
2275 <emphasis role="preprocessor">#define&#32;EGL_WAYLAND_Y_INVERTED_WL&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x31DB</emphasis>
2276 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLBINDWAYLANDDISPLAYWLPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_display&#32;*display);
2277 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLUNBINDWAYLANDDISPLAYWLPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_display&#32;*display);
2278 <emphasis role="keyword">typedef</emphasis>&#32;EGLBoolean&#32;(EGLAPIENTRYP&#32;PFNEGLQUERYWAYLANDBUFFERWLPROC)&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_resource&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
2279 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2280 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglBindWaylandDisplayWL&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">struct</emphasis>&#32;wl_display&#32;*display);
2281 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglUnbindWaylandDisplayWL&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">struct</emphasis>&#32;wl_display&#32;*display);
2282 EGLAPI&#32;EGLBoolean&#32;EGLAPIENTRY&#32;eglQueryWaylandBufferWL&#32;(EGLDisplay&#32;dpy,&#32;<emphasis role="keyword">struct</emphasis>&#32;wl_resource&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a76461e97a098d2c9ae20ac193d3825ae">buffer</link>,&#32;EGLint&#32;attribute,&#32;EGLint&#32;*<link linkend="__s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f">value</link>);
2283 <emphasis role="preprocessor">#endif</emphasis>
2284 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_WL_bind_wayland_display&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2285 
2286 <emphasis role="preprocessor">#ifndef&#32;EGL_WL_create_wayland_buffer_from_image</emphasis>
2287 <emphasis role="preprocessor">#define&#32;EGL_WL_create_wayland_buffer_from_image&#32;1</emphasis>
2288 <emphasis role="preprocessor">#define&#32;PFNEGLCREATEWAYLANDBUFFERFROMIMAGEWL&#32;PFNEGLCREATEWAYLANDBUFFERFROMIMAGEWLPROC</emphasis>
2289 <emphasis role="keyword">struct&#32;</emphasis>wl_buffer;
2290 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_buffer&#32;*(EGLAPIENTRYP&#32;PFNEGLCREATEWAYLANDBUFFERFROMIMAGEWLPROC)&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>);
2291 <emphasis role="preprocessor">#ifdef&#32;EGL_EGLEXT_PROTOTYPES</emphasis>
2292 EGLAPI&#32;<emphasis role="keyword">struct&#32;</emphasis>wl_buffer&#32;*EGLAPIENTRY&#32;eglCreateWaylandBufferFromImageWL&#32;(EGLDisplay&#32;dpy,&#32;EGLImageKHR&#32;<link linkend="__s_d_l__opengl_8h_1a0a221b005894579fea3b9eb7bfc2ee71">image</link>);
2293 <emphasis role="preprocessor">#endif</emphasis>
2294 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;EGL_WL_create_wayland_buffer_from_image&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2295 
2296 <emphasis role="preprocessor">#ifdef&#32;__cplusplus</emphasis>
2297 }
2298 <emphasis role="preprocessor">#endif</emphasis>
2299 
2300 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__eglext_h_&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
2301 
2302 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;_MSC_VER&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
