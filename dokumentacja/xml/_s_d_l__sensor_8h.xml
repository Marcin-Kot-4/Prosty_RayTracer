<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__sensor_8h" kind="file" language="C++">
    <compoundname>SDL_sensor.h</compoundname>
    <includes refid="_s_d_l__stdinc_8h" local="yes">SDL_stdinc.h</includes>
    <includes refid="_s_d_l__error_8h" local="yes">SDL_error.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l_8h" local="yes">D:/RayTracing/include/SDL.h</includedby>
    <includedby refid="_s_d_l__gamecontroller_8h" local="yes">D:/RayTracing/include/SDL_gamecontroller.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SDL_error.h</label>
        <link refid="_s_d_l__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_sensor.h</label>
        <link refid="_s_d_l__sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="6">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="3">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="6">
        <label>D:/RayTracing/RayTrace/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/include/SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>D:/RayTracing/include/SDL_events.h</label>
        <link refid="_s_d_l__events_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>D:/RayTracing/include/SDL_gamecontroller.h</label>
        <link refid="_s_d_l__gamecontroller_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_sensor.h</label>
        <link refid="_s_d_l__sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="13">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/RayTracing/include/SDL_test_compare.h</label>
        <link refid="_s_d_l__test__compare_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>D:/RayTracing/include/SDL_test_images.h</label>
        <link refid="_s_d_l__test__images_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_l__sensor_8h_1a577adbb3be3bab2814caf71e9995f177" prot="public" static="no">
        <name>SDL_STANDARD_GRAVITY</name>
        <initializer>9.80665<ref refid="_s_d_l__opengl__glext_8h_1a691492ec0bd6383f91200e49f6ae40ed" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accelerometer sensor</para>
<para>The accelerometer returns the current acceleration in SI meters per second squared. This measurement includes the force of gravity, so a device at rest will have an value of SDL_STANDARD_GRAVITY away from the center of the earth.</para>
<para>values[0]: Acceleration on the x axis values[1]: Acceleration on the y axis values[2]: Acceleration on the z axis</para>
<para>For phones held in portrait mode and game controllers held in front of you, the axes are defined as follows: -X ... +X : left ... right -Y ... +Y : bottom ... top -Z ... +Z : farther ... closer</para>
<para>The axis data is not changed when the phone is rotated.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6540db01a424ced1847376e583361ecb" kindref="member">SDL_GetDisplayOrientation()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="99" column="9" bodyfile="D:/RayTracing/include/SDL_sensor.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33a" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_SensorType</name>
        <enumvalue id="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aa473fc0b4fcd77e59c39260888a0fb6ed" prot="public">
          <name>SDL_SENSOR_INVALID</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Returned for an invalid sensor </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aaa657e6c2ff14bfd73ec9cacc940d433f" prot="public">
          <name>SDL_SENSOR_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Unknown sensor type </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aabb4f72e33919c7d6689ac33605fb3bc7" prot="public">
          <name>SDL_SENSOR_ACCEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Accelerometer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aa6f5ff988acabc5ac39635976f1c1ac56" prot="public">
          <name>SDL_SENSOR_GYRO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Gyroscope </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="69" column="1" bodyfile="D:/RayTracing/include/SDL_sensor.h" bodystart="70" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" prot="public" static="no">
        <type>struct _SDL_Sensor</type>
        <definition>typedef struct _SDL_Sensor SDL_Sensor</definition>
        <argsstring></argsstring>
        <name>SDL_Sensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="52" column="26" bodyfile="D:/RayTracing/include/SDL_sensor.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" prot="public" static="no">
        <type><ref refid="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" kindref="member">Sint32</ref></type>
        <definition>typedef Sint32 SDL_SensorID</definition>
        <argsstring></argsstring>
        <name>SDL_SensorID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is a unique ID for a sensor for the time it is connected to the system, and is never reused for the lifetime of the application.</para>
<para>The ID value starts at 0 and increments from there. The value -1 is an invalid ID. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="60" column="16" bodyfile="D:/RayTracing/include/SDL_sensor.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a047fa18746e6ac5be4d20f6b7c481578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_LockSensors</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_LockSensors</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gyroscope sensor</para>
<para>The gyroscope returns the current rate of rotation in radians per second. The rotation is positive in the counter-clockwise direction. That is, an observer looking from a positive location on one of the axes would see positive rotation on that axis when it appeared to be rotating counter-clockwise.</para>
<para>values[0]: Angular speed around the x axis (pitch) values[1]: Angular speed around the y axis (yaw) values[2]: Angular speed around the z axis (roll)</para>
<para>For phones held in portrait mode and game controllers held in front of you, the axes are defined as follows: -X ... +X : left ... right -Y ... +Y : bottom ... top -Z ... +Z : farther ... closer</para>
<para>The axis data is not changed when the phone or controller is rotated.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6540db01a424ced1847376e583361ecb" kindref="member">SDL_GetDisplayOrientation()</ref> Locking for multi-threaded <ref refid="_s_d_l__opengl__glext_8h_1a9fb81ef401f3cb865f7b2f1bb059f7d7" kindref="member">access</ref> to the sensor API</para>
</simplesect>
If you are using the sensor API or handling events from multiple threads you should use these locking functions to protect access to the sensors.</para>
<para>In particular, you are guaranteed that the sensor list won&apos;t change, so the API functions that take a sensor index will be valid, and sensor events will not be delivered.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.14. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="139" column="30" declfile="D:/RayTracing/include/SDL_sensor.h" declline="139" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a1cabc17ed80337c304b2f7719928e7db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_UnlockSensors</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_UnlockSensors</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="140" column="30" declfile="D:/RayTracing/include/SDL_sensor.h" declline="140" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a398fee521f652c9c51b8865ea0c2aa02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_NumSensors</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_NumSensors</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count the number of sensors attached to the system right now.</para>
<para><simplesect kind="return"><para>the number of sensors detected.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="149" column="29" declfile="D:/RayTracing/include/SDL_sensor.h" declline="149" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1af44595dc1382022ac23bf208ee759976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_SensorGetDeviceName</definition>
        <argsstring>(int device_index)</argsstring>
        <name>SDL_SensorGetDeviceName</name>
        <param>
          <type>int</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the implementation dependent name of a sensor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor to obtain name from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sensor name, or NULL if <computeroutput>device_index</computeroutput> is out of range.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="159" column="36" declfile="D:/RayTracing/include/SDL_sensor.h" declline="159" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a2183f938cafa6fdd9363025c76502e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33a" kindref="member">SDL_SensorType</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_SensorType SDLCALL SDL_SensorGetDeviceType</definition>
        <argsstring>(int device_index)</argsstring>
        <name>SDL_SensorGetDeviceType</name>
        <param>
          <type>int</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of a sensor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor to get the type from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the SDL_SensorType, or <computeroutput>SDL_SENSOR_INVALID</computeroutput> if <computeroutput>device_index</computeroutput> is out of range.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="170" column="40" declfile="D:/RayTracing/include/SDL_sensor.h" declline="170" declcolumn="40"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a735c61476c9cff3db9499dc258096096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SensorGetDeviceNonPortableType</definition>
        <argsstring>(int device_index)</argsstring>
        <name>SDL_SensorGetDeviceNonPortableType</name>
        <param>
          <type>int</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the platform dependent type of a sensor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sensor platform dependent type, or -1 if <computeroutput>device_index</computeroutput> is out of range.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="181" column="29" declfile="D:/RayTracing/include/SDL_sensor.h" declline="181" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a52d83f263e764e3fe77932bd748d34e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" kindref="member">SDL_SensorID</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_SensorID SDLCALL SDL_SensorGetDeviceInstanceID</definition>
        <argsstring>(int device_index)</argsstring>
        <name>SDL_SensorGetDeviceInstanceID</name>
        <param>
          <type>int</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the instance ID of a sensor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor to get instance id from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sensor instance ID, or -1 if <computeroutput>device_index</computeroutput> is out of range.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="191" column="38" declfile="D:/RayTracing/include/SDL_sensor.h" declline="191" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a44812626ba1cf80f9c027cf86959065b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Sensor *SDLCALL SDL_SensorOpen</definition>
        <argsstring>(int device_index)</argsstring>
        <name>SDL_SensorOpen</name>
        <param>
          <type>int</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open a sensor for use.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor to open </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an SDL_Sensor sensor object, or NULL if an error occurred.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="201" column="36" declfile="D:/RayTracing/include/SDL_sensor.h" declline="201" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1ad02b1e47c2e2e78817f93b3ce7e49609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Sensor *SDLCALL SDL_SensorFromInstanceID</definition>
        <argsstring>(SDL_SensorID instance_id)</argsstring>
        <name>SDL_SensorFromInstanceID</name>
        <param>
          <type><ref refid="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" kindref="member">SDL_SensorID</ref></type>
          <declname>instance_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the SDL_Sensor associated with an instance id.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>instance_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor from instance id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an SDL_Sensor object.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="211" column="36" declfile="D:/RayTracing/include/SDL_sensor.h" declline="211" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a870ea62d8a824fb70b0b6540978ad8f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_SensorGetName</definition>
        <argsstring>(SDL_Sensor *sensor)</argsstring>
        <name>SDL_SensorGetName</name>
        <param>
          <type><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the implementation dependent name of a sensor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The SDL_Sensor object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sensor name, or NULL if <computeroutput>sensor</computeroutput> is NULL.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="221" column="36" declfile="D:/RayTracing/include/SDL_sensor.h" declline="221" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a3d8e4d70062a1af56dea369a2a017907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33a" kindref="member">SDL_SensorType</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_SensorType SDLCALL SDL_SensorGetType</definition>
        <argsstring>(SDL_Sensor *sensor)</argsstring>
        <name>SDL_SensorGetType</name>
        <param>
          <type><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of a sensor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The SDL_Sensor object to inspect </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the SDL_SensorType type, or <computeroutput>SDL_SENSOR_INVALID</computeroutput> if <computeroutput>sensor</computeroutput> is NULL.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="232" column="40" declfile="D:/RayTracing/include/SDL_sensor.h" declline="232" declcolumn="40"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a98fe8a0c2dbefb69f59f0a07edefc129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SensorGetNonPortableType</definition>
        <argsstring>(SDL_Sensor *sensor)</argsstring>
        <name>SDL_SensorGetNonPortableType</name>
        <param>
          <type><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the platform dependent type of a sensor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The SDL_Sensor object to inspect </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sensor platform dependent type, or -1 if <computeroutput>sensor</computeroutput> is NULL.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="242" column="29" declfile="D:/RayTracing/include/SDL_sensor.h" declline="242" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a94c4aaff92e0421a52bfbb0a2ac0129f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" kindref="member">SDL_SensorID</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_SensorID SDLCALL SDL_SensorGetInstanceID</definition>
        <argsstring>(SDL_Sensor *sensor)</argsstring>
        <name>SDL_SensorGetInstanceID</name>
        <param>
          <type><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the instance ID of a sensor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The SDL_Sensor object to inspect </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the sensor instance ID, or -1 if <computeroutput>sensor</computeroutput> is NULL.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="252" column="38" declfile="D:/RayTracing/include/SDL_sensor.h" declline="252" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a22466ee6b7af791937ebf1f7b76ed56b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SensorGetData</definition>
        <argsstring>(SDL_Sensor *sensor, float *data, int num_values)</argsstring>
        <name>SDL_SensorGetData</name>
        <param>
          <type><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref> *</type>
          <declname>sensor</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current state of an opened sensor.</para>
<para>The number of values and interpretation of the data is sensor dependent.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The SDL_Sensor object to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer filled with the current sensor state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_values</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of values to write to data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or -1 if an error occurred.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="266" column="29" declfile="D:/RayTracing/include/SDL_sensor.h" declline="266" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a4ff6e8813bb524a17f1d9b07d2a26005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SensorClose</definition>
        <argsstring>(SDL_Sensor *sensor)</argsstring>
        <name>SDL_SensorClose</name>
        <param>
          <type><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref> *</type>
          <declname>sensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close a sensor previously opened with <ref refid="_s_d_l__sensor_8h_1a44812626ba1cf80f9c027cf86959065b" kindref="member">SDL_SensorOpen()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The SDL_Sensor object to close</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="275" column="30" declfile="D:/RayTracing/include/SDL_sensor.h" declline="275" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__sensor_8h_1a23afdba77827b8ad6c212eedce5c2069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SensorUpdate</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_SensorUpdate</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the current state of the open sensors.</para>
<para>This is called automatically by the event loop if sensor events are enabled.</para>
<para>This needs to be called from the thread that initialized the sensor subsystem.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.9. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_sensor.h" line="288" column="30" declfile="D:/RayTracing/include/SDL_sensor.h" declline="288" declcolumn="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include file for SDL sensor event handling </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_sensor_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_sensor_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__stdinc_8h" kindref="compound">SDL_stdinc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__error_8h" kindref="compound">SDL_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*INDENT-OFF*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*INDENT-ON*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_SDL_Sensor;</highlight></codeline>
<codeline lineno="52" refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_SDL_Sensor<sp/><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" kindref="member">Sint32</ref><sp/><ref refid="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" kindref="member">SDL_SensorID</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>different<sp/>sensors<sp/>defined<sp/>by<sp/>SDL</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>Additional<sp/>sensors<sp/>may<sp/>be<sp/>available,<sp/>using<sp/>platform<sp/>dependent<sp/>semantics.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>Hare<sp/>are<sp/>the<sp/>additional<sp/>Android<sp/>sensors:</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>https://developer.android.com/reference/android/hardware/SensorEvent.html#values</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71" refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aa473fc0b4fcd77e59c39260888a0fb6ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aa473fc0b4fcd77e59c39260888a0fb6ed" kindref="member">SDL_SENSOR_INVALID</ref><sp/>=<sp/>-1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aaa657e6c2ff14bfd73ec9cacc940d433f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aaa657e6c2ff14bfd73ec9cacc940d433f" kindref="member">SDL_SENSOR_UNKNOWN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aabb4f72e33919c7d6689ac33605fb3bc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aabb4f72e33919c7d6689ac33605fb3bc7" kindref="member">SDL_SENSOR_ACCEL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aa6f5ff988acabc5ac39635976f1c1ac56" kindref="member">SDL_SENSOR_GYRO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33aa6f5ff988acabc5ac39635976f1c1ac56" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33a" kindref="member">SDL_SensorType</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="_s_d_l__sensor_8h_1a577adbb3be3bab2814caf71e9995f177" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_STANDARD_GRAVITY<sp/><sp/><sp/><sp/>9.80665f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="_s_d_l__sensor_8h_1a047fa18746e6ac5be4d20f6b7c481578" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a047fa18746e6ac5be4d20f6b7c481578" kindref="member">SDL_LockSensors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140" refid="_s_d_l__sensor_8h_1a1cabc17ed80337c304b2f7719928e7db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a1cabc17ed80337c304b2f7719928e7db" kindref="member">SDL_UnlockSensors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="_s_d_l__sensor_8h_1a398fee521f652c9c51b8865ea0c2aa02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a398fee521f652c9c51b8865ea0c2aa02" kindref="member">SDL_NumSensors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="_s_d_l__sensor_8h_1af44595dc1382022ac23bf208ee759976" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1af44595dc1382022ac23bf208ee759976" kindref="member">SDL_SensorGetDeviceName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="_s_d_l__sensor_8h_1a2183f938cafa6fdd9363025c76502e61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33a" kindref="member">SDL_SensorType</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a2183f938cafa6fdd9363025c76502e61" kindref="member">SDL_SensorGetDeviceType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="_s_d_l__sensor_8h_1a735c61476c9cff3db9499dc258096096" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a735c61476c9cff3db9499dc258096096" kindref="member">SDL_SensorGetDeviceNonPortableType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="_s_d_l__sensor_8h_1a52d83f263e764e3fe77932bd748d34e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" kindref="member">SDL_SensorID</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a52d83f263e764e3fe77932bd748d34e8" kindref="member">SDL_SensorGetDeviceInstanceID</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="_s_d_l__sensor_8h_1a44812626ba1cf80f9c027cf86959065b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a44812626ba1cf80f9c027cf86959065b" kindref="member">SDL_SensorOpen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="_s_d_l__sensor_8h_1ad02b1e47c2e2e78817f93b3ce7e49609" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1ad02b1e47c2e2e78817f93b3ce7e49609" kindref="member">SDL_SensorFromInstanceID</ref>(<ref refid="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" kindref="member">SDL_SensorID</ref><sp/>instance_id);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="_s_d_l__sensor_8h_1a870ea62d8a824fb70b0b6540978ad8f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a870ea62d8a824fb70b0b6540978ad8f1" kindref="member">SDL_SensorGetName</ref>(<ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref><sp/>*sensor);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="_s_d_l__sensor_8h_1a3d8e4d70062a1af56dea369a2a017907" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__sensor_8h_1a94a441696f7d053dd541ec0b7e00e33a" kindref="member">SDL_SensorType</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a3d8e4d70062a1af56dea369a2a017907" kindref="member">SDL_SensorGetType</ref>(<ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref><sp/>*sensor);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="_s_d_l__sensor_8h_1a98fe8a0c2dbefb69f59f0a07edefc129" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a98fe8a0c2dbefb69f59f0a07edefc129" kindref="member">SDL_SensorGetNonPortableType</ref>(<ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref><sp/>*sensor);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="_s_d_l__sensor_8h_1a94c4aaff92e0421a52bfbb0a2ac0129f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__sensor_8h_1a0cca37d0b39c2db41841f54308aee65b" kindref="member">SDL_SensorID</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a94c4aaff92e0421a52bfbb0a2ac0129f" kindref="member">SDL_SensorGetInstanceID</ref>(<ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref><sp/>*sensor);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="_s_d_l__sensor_8h_1a22466ee6b7af791937ebf1f7b76ed56b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a22466ee6b7af791937ebf1f7b76ed56b" kindref="member">SDL_SensorGetData</ref>(<ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref><sp/>*<sp/>sensor,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_values);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="_s_d_l__sensor_8h_1a4ff6e8813bb524a17f1d9b07d2a26005" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a4ff6e8813bb524a17f1d9b07d2a26005" kindref="member">SDL_SensorClose</ref>(<ref refid="_s_d_l__sensor_8h_1a33718f4ef5c3f4ea306ddecf3ae3e3ad" kindref="member">SDL_Sensor</ref><sp/>*<sp/>sensor);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="_s_d_l__sensor_8h_1a23afdba77827b8ad6c212eedce5c2069" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__sensor_8h_1a23afdba77827b8ad6c212eedce5c2069" kindref="member">SDL_SensorUpdate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*INDENT-OFF*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*INDENT-ON*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_sensor_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_sensor.h"/>
  </compounddef>
</doxygen>
