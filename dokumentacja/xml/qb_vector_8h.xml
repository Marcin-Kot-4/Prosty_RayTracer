<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="qb_vector_8h" kind="file" language="C++">
    <compoundname>qbVector.h</compoundname>
    <includes local="no">stdexcept</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">math.h</includes>
    <includes local="no">vector</includes>
    <includedby refid="_c_app_8cpp" local="yes">D:/RayTracing/CApp.cpp</includedby>
    <includedby refid="lightbase_8h" local="yes">D:/RayTracing/RayTrace/Lights/lightbase.h</includedby>
    <includedby refid="materialbase_8h" local="yes">D:/RayTracing/RayTrace/Materials/materialbase.h</includedby>
    <includedby refid="objectbase_8h" local="yes">D:/RayTracing/RayTrace/Primitives/objectbase.h</includedby>
    <includedby refid="texturebase_8h" local="yes">D:/RayTracing/RayTrace/Textures/texturebase.h</includedby>
    <includedby refid="camera_8h" local="yes">D:/RayTracing/RayTrace/camera.h</includedby>
    <includedby refid="gtfm_8h" local="yes">D:/RayTracing/RayTrace/gtfm.h</includedby>
    <includedby refid="qb_e_i_g_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h</includedby>
    <includedby refid="qb_l_s_q_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbLSQ.h</includedby>
    <includedby refid="qb_lin_solve_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbLinSolve.h</includedby>
    <includedby refid="qb_matrix_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h</includedby>
    <includedby refid="qb_p_c_a_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbPCA.h</includedby>
    <includedby refid="qb_q_r_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbQR.h</includedby>
    <includedby refid="ray_8h" local="yes">D:/RayTracing/RayTrace/ray.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbVector.h</label>
        <link refid="qb_vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="8">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>D:/RayTracing/RayTrace/Lights/lightbase.cpp</label>
        <link refid="lightbase_8cpp"/>
      </node>
      <node id="3">
        <label>D:/RayTracing/RayTrace/Lights/lightbase.h</label>
        <link refid="lightbase_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>D:/RayTracing/RayTrace/Lights/pointlight.cpp</label>
        <link refid="pointlight_8cpp"/>
      </node>
      <node id="5">
        <label>D:/RayTracing/RayTrace/Lights/pointlight.h</label>
        <link refid="pointlight_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>D:/RayTracing/RayTrace/Materials/materialbase.cpp</label>
        <link refid="materialbase_8cpp"/>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Materials/materialbase.h</label>
        <link refid="materialbase_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/RayTracing/RayTrace/Materials/simplematerial.cpp</label>
        <link refid="simplematerial_8cpp"/>
      </node>
      <node id="13">
        <label>D:/RayTracing/RayTrace/Materials/simplematerial.h</label>
        <link refid="simplematerial_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>D:/RayTracing/RayTrace/Materials/simplerefractive.cpp</label>
        <link refid="simplerefractive_8cpp"/>
      </node>
      <node id="15">
        <label>D:/RayTracing/RayTrace/Materials/simplerefractive.h</label>
        <link refid="simplerefractive_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>D:/RayTracing/RayTrace/Primitives/cone.cpp</label>
        <link refid="cone_8cpp"/>
      </node>
      <node id="18">
        <label>D:/RayTracing/RayTrace/Primitives/cone.h</label>
        <link refid="cone_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>D:/RayTracing/RayTrace/Primitives/cylinder.cpp</label>
        <link refid="cylinder_8cpp"/>
      </node>
      <node id="20">
        <label>D:/RayTracing/RayTrace/Primitives/cylinder.h</label>
        <link refid="cylinder_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>D:/RayTracing/RayTrace/Primitives/objectbase.cpp</label>
        <link refid="objectbase_8cpp"/>
      </node>
      <node id="17">
        <label>D:/RayTracing/RayTrace/Primitives/objectbase.h</label>
        <link refid="objectbase_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>D:/RayTracing/RayTrace/Primitives/objplane.cpp</label>
        <link refid="objplane_8cpp"/>
      </node>
      <node id="23">
        <label>D:/RayTracing/RayTrace/Primitives/objplane.h</label>
        <link refid="objplane_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>D:/RayTracing/RayTrace/Primitives/objsphere.cpp</label>
        <link refid="objsphere_8cpp"/>
      </node>
      <node id="25">
        <label>D:/RayTracing/RayTrace/Primitives/objsphere.h</label>
        <link refid="objsphere_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>D:/RayTracing/RayTrace/Textures/checker.cpp</label>
        <link refid="checker_8cpp"/>
      </node>
      <node id="28">
        <label>D:/RayTracing/RayTrace/Textures/checker.h</label>
        <link refid="checker_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>D:/RayTracing/RayTrace/Textures/flat.cpp</label>
        <link refid="flat_8cpp"/>
      </node>
      <node id="30">
        <label>D:/RayTracing/RayTrace/Textures/flat.h</label>
        <link refid="flat_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>D:/RayTracing/RayTrace/Textures/texturebase.cpp</label>
        <link refid="texturebase_8cpp"/>
      </node>
      <node id="27">
        <label>D:/RayTracing/RayTrace/Textures/texturebase.h</label>
        <link refid="texturebase_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="33">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>D:/RayTracing/RayTrace/camera.cpp</label>
        <link refid="camera_8cpp"/>
      </node>
      <node id="35">
        <label>D:/RayTracing/RayTrace/camera.h</label>
        <link refid="camera_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>D:/RayTracing/RayTrace/gtfm.cpp</label>
        <link refid="gtfm_8cpp"/>
      </node>
      <node id="37">
        <label>D:/RayTracing/RayTrace/gtfm.h</label>
        <link refid="gtfm_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h</label>
        <link refid="qb_e_i_g_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbLSQ.h</label>
        <link refid="qb_l_s_q_8h"/>
      </node>
      <node id="42">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbLinSolve.h</label>
        <link refid="qb_lin_solve_8h"/>
      </node>
      <node id="43">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h</label>
        <link refid="qb_matrix_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbPCA.h</label>
        <link refid="qb_p_c_a_8h"/>
      </node>
      <node id="44">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbQR.h</label>
        <link refid="qb_q_r_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbVector.h</label>
        <link refid="qb_vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>D:/RayTracing/RayTrace/ray.cpp</label>
        <link refid="ray_8cpp"/>
      </node>
      <node id="45">
        <label>D:/RayTracing/RayTrace/ray.h</label>
        <link refid="ray_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classqb_vector" prot="public">qbVector</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="qb_vector_8h_1a07b5fd7eea993be47bce40bb0db51b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt;</type>
        <definition>qbVector&lt; T &gt; operator*</definition>
        <argsstring>(const T &amp;lhs, const qbVector&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="219" column="10" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="219" bodyend="228"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>qbLinAlg<sp/>linear<sp/>algebra<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Michael<sp/>Bennett</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIT<sp/>license</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QBVECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QBVECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************************************</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>qbVector</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>Class<sp/>to<sp/>provide<sp/>capability<sp/>to<sp/>handle<sp/>vectors.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*************************************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="23" refid="classqb_vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classqb_vector" kindref="compound">qbVector</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>various<sp/>constructors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classqb_vector_1a4d3ca712f03d608fd8fa2b765d5af0a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_vector_1a4d3ca712f03d608fd8fa2b765d5af0a3" kindref="member">qbVector</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>a<sp/>single<sp/>integer<sp/>specifying<sp/>the<sp/>number<sp/>of<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classqb_vector_1abc223bb64e38c0922931c093b2ff99ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_vector_1abc223bb64e38c0922931c093b2ff99ff" kindref="member">qbVector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDims);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>input<sp/>data<sp/>(std::vector).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classqb_vector_1aa99293e1abd9fce0f6e376afd3d15dc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_vector_1aa99293e1abd9fce0f6e376afd3d15dc0" kindref="member">qbVector</ref>(std::vector&lt;T&gt;<sp/>inputData);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>the<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classqb_vector_1ab167f00d61598de0e5741254f6f6b9ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_vector_1ab167f00d61598de0e5741254f6f6b9ff" kindref="member">~qbVector</ref>();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>to<sp/>return<sp/>parameters<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classqb_vector_1a4b1f24a8ae47ef9019109c23c56fc9c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_vector_1a4b1f24a8ae47ef9019109c23c56fc9c4" kindref="member">GetNumDims</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>to<sp/>handle<sp/>elements<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classqb_vector_1adadd6ca87273a15f57a5e1d6ae15583b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="classqb_vector_1adadd6ca87273a15f57a5e1d6ae15583b" kindref="member">GetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44" refid="classqb_vector_1af828430da5d728b15c70f82f73ff1efd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_vector_1af828430da5d728b15c70f82f73ff1efd" kindref="member">SetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>,<sp/>T<sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>to<sp/>perform<sp/>computations<sp/>on<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>length<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classqb_vector_1aa2024c900efb9bbbae752f91b59a786c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="classqb_vector_1aa2024c900efb9bbbae752f91b59a786c" kindref="member">norm</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>normalized<sp/>copy<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classqb_vector_1a30cacb02a659ae4885e16243fd849fb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1a30cacb02a659ae4885e16243fd849fb6" kindref="member">Normalized</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>the<sp/>vector<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classqb_vector_1a06cc00476d406a772461fc4acd7e9ea8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_vector_1a06cc00476d406a772461fc4acd7e9ea8" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overloaded<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classqb_vector_1a9f2b081b6d16e78aa749e1a7ac6e77a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1a9f2b081b6d16e78aa749e1a7ac6e77a7" kindref="member">operator+ </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="classqb_vector_1a3544378181df99c93e4efaafc247ebfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1a3544378181df99c93e4efaafc247ebfe" kindref="member">operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59" refid="classqb_vector_1af4cf14f133608188f609dec15f137da1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1af4cf14f133608188f609dec15f137da1" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Friend<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classqb_vector_1adc9878cd0ab3afc3169672716dab906d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;U&gt;</ref><sp/><ref refid="classqb_vector_1af4cf14f133608188f609dec15f137da1" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;U&gt;</ref><sp/>&amp;rhs);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Static<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classqb_vector_1a8a3c9123ca342c3499c99112a577db8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classqb_vector_1a8a3c9123ca342c3499c99112a577db8b" kindref="member">dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="66" refid="classqb_vector_1af77140337a3e04ff051d346599fe4283" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1af77140337a3e04ff051d346599fe4283" kindref="member">cross</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>m_vectorData;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nDims;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="75"><highlight class="comment">CONSTRUCTOR<sp/>/<sp/>DESTRUCTOR<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="76"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="79" refid="classqb_vector_1a4d3ca712f03d608fd8fa2b765d5af0a3" refkind="member"><highlight class="normal"><ref refid="classqb_vector_1a4d3ca712f03d608fd8fa2b765d5af0a3" kindref="member">qbVector&lt;T&gt;::qbVector</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nDims<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vectorData<sp/>=<sp/>std::vector&lt;T&gt;();</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="86" refid="classqb_vector_1abc223bb64e38c0922931c093b2ff99ff" refkind="member"><highlight class="normal"><ref refid="classqb_vector_1a4d3ca712f03d608fd8fa2b765d5af0a3" kindref="member">qbVector&lt;T&gt;::qbVector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDims)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nDims<sp/>=<sp/>numDims;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vectorData<sp/>=<sp/>std::vector&lt;T&gt;(numDims,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0));</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="93" refid="classqb_vector_1aa99293e1abd9fce0f6e376afd3d15dc0" refkind="member"><highlight class="normal"><ref refid="classqb_vector_1a4d3ca712f03d608fd8fa2b765d5af0a3" kindref="member">qbVector&lt;T&gt;::qbVector</ref>(std::vector&lt;T&gt;<sp/>inputData)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nDims<sp/>=<sp/>inputData.size();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vectorData<sp/>=<sp/>inputData;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="100" refid="classqb_vector_1ab167f00d61598de0e5741254f6f6b9ff" refkind="member"><highlight class="normal"><ref refid="classqb_vector_1ab167f00d61598de0e5741254f6f6b9ff" kindref="member">qbVector&lt;T&gt;::~qbVector</ref>()</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>do<sp/>anything<sp/>in<sp/>the<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="106"><highlight class="comment">FUNCTIONS<sp/>TO<sp/>RETURN<sp/>PARAMETERS</highlight></codeline>
<codeline lineno="107"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="109" refid="classqb_vector_1a4b1f24a8ae47ef9019109c23c56fc9c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_vector_1a4b1f24a8ae47ef9019109c23c56fc9c4" kindref="member">qbVector&lt;T&gt;::GetNumDims</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="110"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nDims;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="115"><highlight class="comment">FUNCTIONS<sp/>TO<sp/>HANDLE<sp/>ELEMENTS<sp/>OF<sp/>THE<sp/>VECTOR</highlight></codeline>
<codeline lineno="116"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="118" refid="classqb_vector_1adadd6ca87273a15f57a5e1d6ae15583b" refkind="member"><highlight class="normal">T<sp/><ref refid="classqb_vector_1adadd6ca87273a15f57a5e1d6ae15583b" kindref="member">qbVector&lt;T&gt;::GetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="119"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_vectorData[<ref refid="_s_d_l__opengl__glext_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>];</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="124" refid="classqb_vector_1af828430da5d728b15c70f82f73ff1efd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_vector_1af828430da5d728b15c70f82f73ff1efd" kindref="member">qbVector&lt;T&gt;::SetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>,<sp/>T<sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vectorData[<ref refid="_s_d_l__opengl__glext_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>]<sp/>=<sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="130"><highlight class="comment">FUNCTIONS<sp/>TO<sp/>PERFORM<sp/>COMPUTATIONS<sp/>ON<sp/>THE<sp/>VECTOR</highlight></codeline>
<codeline lineno="131"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>length<sp/>of<sp/>the<sp/>vector,known<sp/>as<sp/>the<sp/>&apos;norm&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="134" refid="classqb_vector_1aa2024c900efb9bbbae752f91b59a786c" refkind="member"><highlight class="normal">T<sp/><ref refid="classqb_vector_1aa2024c900efb9bbbae752f91b59a786c" kindref="member">qbVector&lt;T&gt;::norm</ref>()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>cumulativeSum<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nDims;<sp/>++i)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulativeSum<sp/>+=<sp/>(m_vectorData.at(i)<sp/>*<sp/>m_vectorData.at(i));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(cumulativeSum);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>normalized<sp/>copy<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="145" refid="classqb_vector_1a30cacb02a659ae4885e16243fd849fb6" refkind="member"><highlight class="normal"><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1a30cacb02a659ae4885e16243fd849fb6" kindref="member">qbVector&lt;T&gt;::Normalized</ref>()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>vector<sp/>norm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>vecNorm<sp/>=<sp/>this-&gt;norm();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>normalized<sp/>version<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(m_vectorData);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref><sp/>*<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1.0)<sp/>/<sp/>vecNorm);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>the<sp/>vector<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="157" refid="classqb_vector_1a06cc00476d406a772461fc4acd7e9ea8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_vector_1a06cc00476d406a772461fc4acd7e9ea8" kindref="member">qbVector&lt;T&gt;::Normalize</ref>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>vector<sp/>norm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>vecNorm<sp/>=<sp/>this-&gt;norm();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>elements<sp/>of<sp/>the<sp/>normalized<sp/>version<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nDims;<sp/>++i)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>temp<sp/>=<sp/>m_vectorData.at(i)<sp/>*<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1.0)<sp/>/<sp/>vecNorm);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_vectorData.at(i)<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="171"><highlight class="comment">OVERLOADED<sp/>OPERATORS</highlight></codeline>
<codeline lineno="172"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="174" refid="classqb_vector_1a9f2b081b6d16e78aa749e1a7ac6e77a7" refkind="member"><highlight class="normal"><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1a9f2b081b6d16e78aa749e1a7ac6e77a7" kindref="member">qbVector&lt;T&gt;::operator+ </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="175"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>number<sp/>of<sp/>dimensions<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nDims<sp/>!=<sp/>rhs.m_nDims)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Vector<sp/>dimensions<sp/>do<sp/>not<sp/>match.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>resultData;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nDims;<sp/>++i)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultData.push_back(m_vectorData.at(i)<sp/>+<sp/>rhs.m_vectorData.at(i));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(resultData);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="189" refid="classqb_vector_1a3544378181df99c93e4efaafc247ebfe" refkind="member"><highlight class="normal"><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1a3544378181df99c93e4efaafc247ebfe" kindref="member">qbVector&lt;T&gt;::operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="190"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>number<sp/>of<sp/>dimensions<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nDims<sp/>!=<sp/>rhs.m_nDims)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Vector<sp/>dimensions<sp/>do<sp/>not<sp/>match.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>resultData;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nDims;<sp/>++i)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultData.push_back(m_vectorData.at(i)<sp/>-<sp/>rhs.m_vectorData.at(i));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(resultData);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="204" refid="classqb_vector_1af4cf14f133608188f609dec15f137da1" refkind="member"><highlight class="normal"><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1af4cf14f133608188f609dec15f137da1" kindref="member">qbVector&lt;T&gt;::operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>scalar<sp/>multiplication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>resultData;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nDims;<sp/>++i)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultData.push_back(m_vectorData.at(i)<sp/>*<sp/>rhs);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(resultData);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="216"><highlight class="comment">FRIEND<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="217"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="219" refid="qb_vector_8h_1a07b5fd7eea993be47bce40bb0db51b9f" refkind="member"><highlight class="normal"><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="qb_vector_8h_1a07b5fd7eea993be47bce40bb0db51b9f" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>scalar<sp/>multiplication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>resultData;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;rhs.m_nDims;<sp/>++i)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultData.push_back(lhs<sp/>*<sp/>rhs.m_vectorData.at(i));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(resultData);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="231"><highlight class="comment">STATIC<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="232"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="234" refid="classqb_vector_1a8a3c9123ca342c3499c99112a577db8b" refkind="member"><highlight class="normal">T<sp/><ref refid="classqb_vector_1a8a3c9123ca342c3499c99112a577db8b" kindref="member">qbVector&lt;T&gt;::dot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>number<sp/>of<sp/>dimensions<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_nDims<sp/>!=<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_nDims)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Vector<sp/>dimensions<sp/>must<sp/>match<sp/>for<sp/>the<sp/>dot-product<sp/>to<sp/>be<sp/>computed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>dot<sp/>product.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>cumulativeSum<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_nDims;<sp/>++i)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulativeSum<sp/>+=<sp/><ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_vectorData.at(i)<sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_vectorData.at(i);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cumulativeSum;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="249" refid="classqb_vector_1af77140337a3e04ff051d346599fe4283" refkind="member"><highlight class="normal"><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="classqb_vector_1af77140337a3e04ff051d346599fe4283" kindref="member">qbVector&lt;T&gt;::cross</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>number<sp/>of<sp/>dimensions<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_nDims<sp/>!=<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_nDims)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Vector<sp/>dimensions<sp/>must<sp/>match<sp/>for<sp/>the<sp/>cross-product<sp/>to<sp/>be<sp/>computed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>number<sp/>of<sp/>dimensions<sp/>is<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Although<sp/>the<sp/>cross-product<sp/>is<sp/>also<sp/>defined<sp/>for<sp/>7<sp/>dimensions,<sp/>we<sp/>are</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>going<sp/>to<sp/>consider<sp/>that<sp/>case<sp/>at<sp/>this<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_nDims<sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;The<sp/>cross-product<sp/>can<sp/>only<sp/>be<sp/>computed<sp/>for<sp/>three-dimensional<sp/>vectors.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>cross<sp/>product.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>resultData;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>resultData.push_back((<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_vectorData.at(1)<sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_vectorData.at(2))<sp/>-<sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_vectorData.at(2)<sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_vectorData.at(1)));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>resultData.push_back(-((<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_vectorData.at(0)<sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_vectorData.at(2))<sp/>-<sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_vectorData.at(2)<sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_vectorData.at(0))));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>resultData.push_back((<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_vectorData.at(0)<sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_vectorData.at(1))<sp/>-<sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>.m_vectorData.at(1)<sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>.m_vectorData.at(0)));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(resultData);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h"/>
  </compounddef>
</doxygen>
