<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__keyboard_8h" kind="file" language="C++">
    <compoundname>SDL_keyboard.h</compoundname>
    <includes refid="_s_d_l__stdinc_8h" local="yes">SDL_stdinc.h</includes>
    <includes refid="_s_d_l__error_8h" local="yes">SDL_error.h</includes>
    <includes refid="_s_d_l__keycode_8h" local="yes">SDL_keycode.h</includes>
    <includes refid="_s_d_l__video_8h" local="yes">SDL_video.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l__events_8h" local="yes">D:/RayTracing/include/SDL_events.h</includedby>
    <includedby refid="_s_d_l__system_8h" local="yes">D:/RayTracing/include/SDL_system.h</includedby>
    <incdepgraph>
      <node id="18">
        <label>SDL_blendmode.h</label>
        <link refid="_s_d_l__blendmode_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SDL_endian.h</label>
        <link refid="_s_d_l__endian_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SDL_error.h</label>
        <link refid="_s_d_l__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_keyboard.h</label>
        <link refid="_s_d_l__keyboard_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SDL_keycode.h</label>
        <link refid="_s_d_l__keycode_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SDL_pixels.h</label>
        <link refid="_s_d_l__pixels_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>SDL_rect.h</label>
        <link refid="_s_d_l__rect_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>SDL_rwops.h</label>
        <link refid="_s_d_l__rwops_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SDL_scancode.h</label>
        <link refid="_s_d_l__scancode_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>SDL_surface.h</label>
        <link refid="_s_d_l__surface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SDL_video.h</label>
        <link refid="_s_d_l__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="6">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="4">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>D:/RayTracing/include/SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/include/SDL_events.h</label>
        <link refid="_s_d_l__events_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_keyboard.h</label>
        <link refid="_s_d_l__keyboard_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>D:/RayTracing/include/SDL_system.h</label>
        <link refid="_s_d_l__system_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="14">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>D:/RayTracing/include/SDL_test_compare.h</label>
        <link refid="_s_d_l__test__compare_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>D:/RayTracing/include/SDL_test_images.h</label>
        <link refid="_s_d_l__test__images_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_s_d_l___keysym" prot="public">SDL_Keysym</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_d_l__keyboard_8h_1a074ae08acbe79dba712775b95267f4d2" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___keysym" kindref="compound">SDL_Keysym</ref></type>
        <definition>typedef struct SDL_Keysym SDL_Keysym</definition>
        <argsstring></argsstring>
        <name>SDL_Keysym</name>
        <briefdescription>
<para>The SDL keysym structure, used in key events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If you are looking for translated character input, see the <ref refid="_s_d_l__events_8h_1a3b589e89be6b35c02e0dd34a55f3fccaa4fa2570088f6b9cbd109ae91b511368f" kindref="member">SDL_TEXTINPUT</ref> event. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="53" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a3b552fc22887b0f67b2463301698078e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Window *SDLCALL SDL_GetKeyboardFocus</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetKeyboardFocus</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query the window which currently has keyboard focus.</para>
<para><simplesect kind="return"><para>the window with keyboard focus.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="64" column="37" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="64" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a6df72a92c606bfcf9ef00dc1b049270f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const <ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const Uint8 *SDLCALL SDL_GetKeyboardState</definition>
        <argsstring>(int *numkeys)</argsstring>
        <name>SDL_GetKeyboardState</name>
        <param>
          <type>int *</type>
          <declname>numkeys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a snapshot of the current state of the keyboard.</para>
<para>The pointer returned is a pointer to an internal SDL array. It will be valid for the whole lifetime of the application and should not be freed by the caller.</para>
<para>A array element with a value of 1 means that the key is pressed and a value of 0 means that it is not. Indexes into this array are obtained by using SDL_Scancode values.</para>
<para>Use <ref refid="_s_d_l__events_8h_1aa15403d1c8fc341cd9cf750e27a66d19" kindref="member">SDL_PumpEvents()</ref> to update the state array.</para>
<para>This function gives you the current state after all events have been processed, so if a key or button has been pressed and released before you process events, then the pressed state will never show up in the <ref refid="_s_d_l__keyboard_8h_1a6df72a92c606bfcf9ef00dc1b049270f" kindref="member">SDL_GetKeyboardState()</ref> calls.</para>
<para>Note: This function doesn&apos;t take into account whether shift has been pressed or not.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numkeys</parametername>
</parameternamelist>
<parameterdescription>
<para>if non-NULL, receives the length of the returned array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to an array of key states.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__events_8h_1aa15403d1c8fc341cd9cf750e27a66d19" kindref="member">SDL_PumpEvents</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="94" column="37" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="94" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a7b2ee63de74c442ac456cac9db5f8ed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__keycode_8h_1afa050ad71f0a5b86aa05cb13f542d747" kindref="member">SDL_Keymod</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Keymod SDLCALL SDL_GetModState</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetModState</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current key modifier state for the keyboard.</para>
<para><simplesect kind="return"><para>an OR&apos;d combination of the modifier keys for the keyboard. See SDL_Keymod for details.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a6df72a92c606bfcf9ef00dc1b049270f" kindref="member">SDL_GetKeyboardState</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a705c85881304eab01f00abeca2ef5846" kindref="member">SDL_SetModState</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="107" column="36" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="107" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a705c85881304eab01f00abeca2ef5846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetModState</definition>
        <argsstring>(SDL_Keymod modstate)</argsstring>
        <name>SDL_SetModState</name>
        <param>
          <type><ref refid="_s_d_l__keycode_8h_1afa050ad71f0a5b86aa05cb13f542d747" kindref="member">SDL_Keymod</ref></type>
          <declname>modstate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current key modifier state for the keyboard.</para>
<para>The inverse of <ref refid="_s_d_l__keyboard_8h_1a7b2ee63de74c442ac456cac9db5f8ed0" kindref="member">SDL_GetModState()</ref>, <ref refid="_s_d_l__keyboard_8h_1a705c85881304eab01f00abeca2ef5846" kindref="member">SDL_SetModState()</ref> allows you to impose modifier key states on your application. Simply pass your desired modifier states into <computeroutput>modstate</computeroutput>. This value may be a bitwise, OR&apos;d combination of SDL_Keymod values.</para>
<para>This does not change the keyboard state, only the key modifier flags that SDL reports.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modstate</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired SDL_Keymod for the keyboard</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a7b2ee63de74c442ac456cac9db5f8ed0" kindref="member">SDL_GetModState</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="126" column="30" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="126" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1aa74e6944ede98feeb09408fd97aaad57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Keycode SDLCALL SDL_GetKeyFromScancode</definition>
        <argsstring>(SDL_Scancode scancode)</argsstring>
        <name>SDL_GetKeyFromScancode</name>
        <param>
          <type><ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref></type>
          <declname>scancode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the key code corresponding to the given scancode according to the current keyboard layout.</para>
<para>See SDL_Keycode for details.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scancode</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired SDL_Scancode to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the SDL_Keycode that corresponds to the given SDL_Scancode.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a25e699451e621cd1ce29ae20f352f318" kindref="member">SDL_GetKeyName</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a36216054a385bea6898a35ded18d9c0f" kindref="member">SDL_GetScancodeFromKey</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="142" column="37" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="142" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a36216054a385bea6898a35ded18d9c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Scancode SDLCALL SDL_GetScancodeFromKey</definition>
        <argsstring>(SDL_Keycode key)</argsstring>
        <name>SDL_GetScancodeFromKey</name>
        <param>
          <type><ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scancode corresponding to the given key code according to the current keyboard layout.</para>
<para>See SDL_Scancode for details.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired SDL_Keycode to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the SDL_Scancode that corresponds to the given SDL_Keycode.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1aa74e6944ede98feeb09408fd97aaad57" kindref="member">SDL_GetKeyFromScancode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a092c44261fe9c44f77a46a705f59eb57" kindref="member">SDL_GetScancodeName</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="158" column="38" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="158" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a092c44261fe9c44f77a46a705f59eb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_GetScancodeName</definition>
        <argsstring>(SDL_Scancode scancode)</argsstring>
        <name>SDL_GetScancodeName</name>
        <param>
          <type><ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref></type>
          <declname>scancode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable name for a scancode.</para>
<para>See SDL_Scancode for details.</para>
<para><bold>Warning</bold>: The returned name is by design not stable across platforms, e.g. the name for <computeroutput>SDL_SCANCODE_LGUI</computeroutput> is &quot;Left GUI&quot; under Linux but &quot;Left
Windows&quot; under Microsoft Windows, and some scancodes like <computeroutput>SDL_SCANCODE_NONUSBACKSLASH</computeroutput> don&apos;t have any name at all. There are even scancodes that share names, e.g. <computeroutput>SDL_SCANCODE_RETURN</computeroutput> and <computeroutput>SDL_SCANCODE_RETURN2</computeroutput> (both called &quot;Return&quot;). This function is therefore unsuitable for creating a stable cross-platform two-way mapping between strings and scancodes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scancode</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired SDL_Scancode to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the name for the scancode. If the scancode doesn&apos;t have a name this function returns an empty string (&quot;&quot;).</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a36216054a385bea6898a35ded18d9c0f" kindref="member">SDL_GetScancodeFromKey</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a0cb32dd58d3dc5b77c9daf0b6000f93c" kindref="member">SDL_GetScancodeFromName</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="183" column="36" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="183" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a0cb32dd58d3dc5b77c9daf0b6000f93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Scancode SDLCALL SDL_GetScancodeFromName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SDL_GetScancodeFromName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a scancode from a human-readable name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the human-readable scancode name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the SDL_Scancode, or <computeroutput>SDL_SCANCODE_UNKNOWN</computeroutput> if the name wasn&apos;t recognized; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1ad4d4e79f117a9092ec269601c5423337" kindref="member">SDL_GetKeyFromName</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a36216054a385bea6898a35ded18d9c0f" kindref="member">SDL_GetScancodeFromKey</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a092c44261fe9c44f77a46a705f59eb57" kindref="member">SDL_GetScancodeName</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="198" column="38" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="198" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a25e699451e621cd1ce29ae20f352f318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_GetKeyName</definition>
        <argsstring>(SDL_Keycode key)</argsstring>
        <name>SDL_GetKeyName</name>
        <param>
          <type><ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a human-readable name for a key.</para>
<para>See SDL_Scancode and SDL_Keycode for details.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired SDL_Keycode to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to a UTF-8 string that stays valid at least until the next call to this function. If you need it around any longer, you must copy it. If the key doesn&apos;t have a name, this function returns an empty string (&quot;&quot;).</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1ad4d4e79f117a9092ec269601c5423337" kindref="member">SDL_GetKeyFromName</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1aa74e6944ede98feeb09408fd97aaad57" kindref="member">SDL_GetKeyFromScancode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a36216054a385bea6898a35ded18d9c0f" kindref="member">SDL_GetScancodeFromKey</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="217" column="36" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="217" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1ad4d4e79f117a9092ec269601c5423337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Keycode SDLCALL SDL_GetKeyFromName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SDL_GetKeyFromName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a key code from a human-readable name.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the human-readable key name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>key code, or <computeroutput>SDLK_UNKNOWN</computeroutput> if the name wasn&apos;t recognized; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1aa74e6944ede98feeb09408fd97aaad57" kindref="member">SDL_GetKeyFromScancode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a25e699451e621cd1ce29ae20f352f318" kindref="member">SDL_GetKeyName</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a0cb32dd58d3dc5b77c9daf0b6000f93c" kindref="member">SDL_GetScancodeFromName</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="232" column="37" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="232" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1ab2c8474b9a8b6d07cae4f8eceab38870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_StartTextInput</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_StartTextInput</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start accepting Unicode text input events.</para>
<para>This function will start accepting Unicode text input events in the focused SDL window, and start emitting <ref refid="struct_s_d_l___text_input_event" kindref="compound">SDL_TextInputEvent</ref> (SDL_TEXTINPUT) and <ref refid="struct_s_d_l___text_editing_event" kindref="compound">SDL_TextEditingEvent</ref> (SDL_TEXTEDITING) events. Please use this function in pair with <ref refid="_s_d_l__keyboard_8h_1ab08b914cdfb2eaed26165cb2f6b110ec" kindref="member">SDL_StopTextInput()</ref>.</para>
<para>On some platforms using this function activates the screen keyboard.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a949fd9d16d5156a9d5aa0dc74580dbae" kindref="member">SDL_SetTextInputRect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1ab08b914cdfb2eaed26165cb2f6b110ec" kindref="member">SDL_StopTextInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="249" column="30" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="249" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a6c84ed1daac21f8224d43bcb9d5bc597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_IsTextInputActive</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_IsTextInputActive</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether or not Unicode text input events are enabled.</para>
<para><simplesect kind="return"><para>SDL_TRUE if text input events are enabled else SDL_FALSE.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1ab2c8474b9a8b6d07cae4f8eceab38870" kindref="member">SDL_StartTextInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="260" column="34" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="260" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1ab08b914cdfb2eaed26165cb2f6b110ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_StopTextInput</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_StopTextInput</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop receiving any text input events.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1ab2c8474b9a8b6d07cae4f8eceab38870" kindref="member">SDL_StartTextInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="269" column="30" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="269" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a949fd9d16d5156a9d5aa0dc74580dbae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetTextInputRect</definition>
        <argsstring>(SDL_Rect *rect)</argsstring>
        <name>SDL_SetTextInputRect</name>
        <param>
          <type><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> *</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the rectangle used to type Unicode text inputs.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> structure representing the rectangle to receive text (ignored if NULL)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1ab2c8474b9a8b6d07cae4f8eceab38870" kindref="member">SDL_StartTextInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="281" column="30" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="281" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a106356274c192b53844c8f1a821b00d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_HasScreenKeyboardSupport</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_HasScreenKeyboardSupport</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether the platform has screen keyboard support.</para>
<para><simplesect kind="return"><para>SDL_TRUE if the platform has some screen keyboard support or SDL_FALSE if not.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1ab2c8474b9a8b6d07cae4f8eceab38870" kindref="member">SDL_StartTextInput</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a92f5b73c7b71efeb68f5e9616cb918b7" kindref="member">SDL_IsScreenKeyboardShown</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="294" column="34" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="294" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__keyboard_8h_1a92f5b73c7b71efeb68f5e9616cb918b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_IsScreenKeyboardShown</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_IsScreenKeyboardShown</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether the screen keyboard is shown for given window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window for which screen keyboard should be queried </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if screen keyboard is shown or SDL_FALSE if not.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__keyboard_8h_1a106356274c192b53844c8f1a821b00d7" kindref="member">SDL_HasScreenKeyboardSupport</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_keyboard.h" line="306" column="34" declfile="D:/RayTracing/include/SDL_keyboard.h" declline="306" declcolumn="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include file for SDL keyboard event handling </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_keyboard_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_keyboard_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__stdinc_8h" kindref="compound">SDL_stdinc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__error_8h" kindref="compound">SDL_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__keycode_8h" kindref="compound">SDL_keycode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__video_8h" kindref="compound">SDL_video.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="struct_s_d_l___keysym" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___keysym" kindref="compound">SDL_Keysym</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49" refid="struct_s_d_l___keysym_1ad47e9120a511e2efc7ec0c6d8a5ec51e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref><sp/><ref refid="struct_s_d_l___keysym_1ad47e9120a511e2efc7ec0c6d8a5ec51e" kindref="member">scancode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="struct_s_d_l___keysym_1a082ff1fd787b79fa6c3a445deb225f08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref><sp/><ref refid="struct_s_d_l___keysym_1a082ff1fd787b79fa6c3a445deb225f08" kindref="member">sym</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="struct_s_d_l___keysym_1ab519d1b8a9939d3d035f7103f3208291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___keysym_1ab519d1b8a9939d3d035f7103f3208291" kindref="member">mod</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="struct_s_d_l___keysym_1ab1d0a50cc619966fb06b92e15cc46dd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l___keysym_1ab1d0a50cc619966fb06b92e15cc46dd9" kindref="member">unused</ref>;</highlight></codeline>
<codeline lineno="53" refid="_s_d_l__keyboard_8h_1a074ae08acbe79dba712775b95267f4d2" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__keyboard_8h_1a074ae08acbe79dba712775b95267f4d2" kindref="member">SDL_Keysym</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="_s_d_l__keyboard_8h_1a3b552fc22887b0f67b2463301698078e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a3b552fc22887b0f67b2463301698078e" kindref="member">SDL_GetKeyboardFocus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="_s_d_l__keyboard_8h_1a6df72a92c606bfcf9ef00dc1b049270f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a6df72a92c606bfcf9ef00dc1b049270f" kindref="member">SDL_GetKeyboardState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*numkeys);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="_s_d_l__keyboard_8h_1a7b2ee63de74c442ac456cac9db5f8ed0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__keycode_8h_1afa050ad71f0a5b86aa05cb13f542d747" kindref="member">SDL_Keymod</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a7b2ee63de74c442ac456cac9db5f8ed0" kindref="member">SDL_GetModState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="_s_d_l__keyboard_8h_1a705c85881304eab01f00abeca2ef5846" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a705c85881304eab01f00abeca2ef5846" kindref="member">SDL_SetModState</ref>(<ref refid="_s_d_l__keycode_8h_1afa050ad71f0a5b86aa05cb13f542d747" kindref="member">SDL_Keymod</ref><sp/>modstate);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="_s_d_l__keyboard_8h_1aa74e6944ede98feeb09408fd97aaad57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1aa74e6944ede98feeb09408fd97aaad57" kindref="member">SDL_GetKeyFromScancode</ref>(<ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref><sp/>scancode);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="_s_d_l__keyboard_8h_1a36216054a385bea6898a35ded18d9c0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a36216054a385bea6898a35ded18d9c0f" kindref="member">SDL_GetScancodeFromKey</ref>(<ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref><sp/>key);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="_s_d_l__keyboard_8h_1a092c44261fe9c44f77a46a705f59eb57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a092c44261fe9c44f77a46a705f59eb57" kindref="member">SDL_GetScancodeName</ref>(<ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref><sp/>scancode);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="_s_d_l__keyboard_8h_1a0cb32dd58d3dc5b77c9daf0b6000f93c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__scancode_8h_1a82ab7cff701034fb40a47b5b3a02777b" kindref="member">SDL_Scancode</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a0cb32dd58d3dc5b77c9daf0b6000f93c" kindref="member">SDL_GetScancodeFromName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="_s_d_l__keyboard_8h_1a25e699451e621cd1ce29ae20f352f318" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a25e699451e621cd1ce29ae20f352f318" kindref="member">SDL_GetKeyName</ref>(<ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref><sp/>key);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="_s_d_l__keyboard_8h_1ad4d4e79f117a9092ec269601c5423337" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__keycode_8h_1ae9265f064f13f0f74dfca26a67875171" kindref="member">SDL_Keycode</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1ad4d4e79f117a9092ec269601c5423337" kindref="member">SDL_GetKeyFromName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="_s_d_l__keyboard_8h_1ab2c8474b9a8b6d07cae4f8eceab38870" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1ab2c8474b9a8b6d07cae4f8eceab38870" kindref="member">SDL_StartTextInput</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="_s_d_l__keyboard_8h_1a6c84ed1daac21f8224d43bcb9d5bc597" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a6c84ed1daac21f8224d43bcb9d5bc597" kindref="member">SDL_IsTextInputActive</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="_s_d_l__keyboard_8h_1ab08b914cdfb2eaed26165cb2f6b110ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1ab08b914cdfb2eaed26165cb2f6b110ec" kindref="member">SDL_StopTextInput</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="_s_d_l__keyboard_8h_1a949fd9d16d5156a9d5aa0dc74580dbae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a949fd9d16d5156a9d5aa0dc74580dbae" kindref="member">SDL_SetTextInputRect</ref>(<ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref><sp/>*rect);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="_s_d_l__keyboard_8h_1a106356274c192b53844c8f1a821b00d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a106356274c192b53844c8f1a821b00d7" kindref="member">SDL_HasScreenKeyboardSupport</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="_s_d_l__keyboard_8h_1a92f5b73c7b71efeb68f5e9616cb918b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__keyboard_8h_1a92f5b73c7b71efeb68f5e9616cb918b7" kindref="member">SDL_IsScreenKeyboardShown</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*window);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_keyboard_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_keyboard.h"/>
  </compounddef>
</doxygen>
