<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="struct_s_d_l___audio_c_v_t" kind="struct" language="C++" prot="public">
    <compoundname>SDL_AudioCVT</compoundname>
    <includes refid="_s_d_l__audio_8h" local="no">SDL_audio.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1ac600a035a48df05e14d3712fd6953ad4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int SDL_AudioCVT::needed</definition>
        <argsstring></argsstring>
        <name>needed</name>
        <qualifiedname>SDL_AudioCVT::needed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set to 1 if conversion possible </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="233" column="9" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1a6ae81231e017105e6d5e745a51732e16" prot="public" static="no" mutable="no">
        <type><ref refid="_s_d_l__audio_8h_1a491ed103fd25d920c4e6b7495217ce66" kindref="member">SDL_AudioFormat</ref></type>
        <definition>SDL_AudioFormat SDL_AudioCVT::src_format</definition>
        <argsstring></argsstring>
        <name>src_format</name>
        <qualifiedname>SDL_AudioCVT::src_format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Source audio format </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="234" column="21" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1a8f890d017be857a3b048bf00525736c6" prot="public" static="no" mutable="no">
        <type><ref refid="_s_d_l__audio_8h_1a491ed103fd25d920c4e6b7495217ce66" kindref="member">SDL_AudioFormat</ref></type>
        <definition>SDL_AudioFormat SDL_AudioCVT::dst_format</definition>
        <argsstring></argsstring>
        <name>dst_format</name>
        <qualifiedname>SDL_AudioCVT::dst_format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Target audio format </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="235" column="21" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1ad886122c23a6673073baace31bff3b6c" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double SDL_AudioCVT::rate_incr</definition>
        <argsstring></argsstring>
        <name>rate_incr</name>
        <qualifiedname>SDL_AudioCVT::rate_incr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rate conversion increment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="236" column="12" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1a080db27b929efa983c5161360ffce310" prot="public" static="no" mutable="no">
        <type><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref> *</type>
        <definition>Uint8* SDL_AudioCVT::buf</definition>
        <argsstring></argsstring>
        <name>buf</name>
        <qualifiedname>SDL_AudioCVT::buf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer to hold entire audio data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="237" column="11" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1aeaeb8c5a63c3ab96471fbfdf412c78ff" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int SDL_AudioCVT::len</definition>
        <argsstring></argsstring>
        <name>len</name>
        <qualifiedname>SDL_AudioCVT::len</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of original audio buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="238" column="9" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1a5c60163f34d1947e5b166c23aba9879d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int SDL_AudioCVT::len_cvt</definition>
        <argsstring></argsstring>
        <name>len_cvt</name>
        <qualifiedname>SDL_AudioCVT::len_cvt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Length of converted audio buffer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="239" column="9" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1ac9662d47cf2348b82b27b151150116b0" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int SDL_AudioCVT::len_mult</definition>
        <argsstring></argsstring>
        <name>len_mult</name>
        <qualifiedname>SDL_AudioCVT::len_mult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>buffer must be len*len_mult big </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="240" column="9" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1a5628ff5ccf711de9d77c0a4a9f57d2f0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double SDL_AudioCVT::len_ratio</definition>
        <argsstring></argsstring>
        <name>len_ratio</name>
        <qualifiedname>SDL_AudioCVT::len_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given len, final size is len*len_ratio </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="241" column="12" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1afeb8dc60716644de3b681653442de1db" prot="public" static="no" mutable="no">
        <type>SDL_AudioFilter</type>
        <definition>SDL_AudioFilter SDL_AudioCVT::filters[SDL_AUDIOCVT_MAX_FILTERS+1]</definition>
        <argsstring>[SDL_AUDIOCVT_MAX_FILTERS+1]</argsstring>
        <name>filters</name>
        <qualifiedname>SDL_AudioCVT::filters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NULL-terminated list of filter functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="242" column="21" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___audio_c_v_t_1a35093b3ad3331c17416c593a76012b63" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int SDL_AudioCVT::filter_index</definition>
        <argsstring></argsstring>
        <name>filter_index</name>
        <qualifiedname>SDL_AudioCVT::filter_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current audio conversion function </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_audio.h" line="243" column="9" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A structure to hold a set of audio conversion filters and buffers. </para>
    </briefdescription>
    <detaileddescription>
<para>Note that various parts of the conversion pipeline can take advantage of SIMD operations (like SSE2, for example). <ref refid="struct_s_d_l___audio_c_v_t" kindref="compound">SDL_AudioCVT</ref> doesn&apos;t require you to pass it aligned data, but can possibly run much faster if you set both its (buf) field to a pointer that is aligned to 16 bytes, and its (len) field to something that&apos;s a multiple of 16, if possible. </para>
    </detaileddescription>
    <location file="D:/RayTracing/include/SDL_audio.h" line="231" column="1" bodyfile="D:/RayTracing/include/SDL_audio.h" bodystart="232" bodyend="244"/>
    <listofallmembers>
      <member refid="struct_s_d_l___audio_c_v_t_1a080db27b929efa983c5161360ffce310" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>buf</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1a8f890d017be857a3b048bf00525736c6" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>dst_format</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1a35093b3ad3331c17416c593a76012b63" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>filter_index</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1afeb8dc60716644de3b681653442de1db" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>filters</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1aeaeb8c5a63c3ab96471fbfdf412c78ff" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>len</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1a5c60163f34d1947e5b166c23aba9879d" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>len_cvt</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1ac9662d47cf2348b82b27b151150116b0" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>len_mult</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1a5628ff5ccf711de9d77c0a4a9f57d2f0" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>len_ratio</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1ac600a035a48df05e14d3712fd6953ad4" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>needed</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1ad886122c23a6673073baace31bff3b6c" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>rate_incr</name></member>
      <member refid="struct_s_d_l___audio_c_v_t_1a6ae81231e017105e6d5e745a51732e16" prot="public" virt="non-virtual"><scope>SDL_AudioCVT</scope><name>src_format</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
