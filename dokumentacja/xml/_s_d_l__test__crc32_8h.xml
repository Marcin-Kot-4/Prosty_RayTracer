<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__test__crc32_8h" kind="file" language="C++">
    <compoundname>SDL_test_crc32.h</compoundname>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l__test_8h" local="yes">D:/RayTracing/include/SDL_test.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>D:/RayTracing/include/SDL_test_crc32.h</label>
        <link refid="_s_d_l__test__crc32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="3">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_test_crc32.h</label>
        <link refid="_s_d_l__test__crc32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_s_d_l_test___crc32_context" prot="public">SDLTest_Crc32Context</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" prot="public" static="no">
        <name>CrcUint32</name>
        <initializer>unsigned int</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="51" column="10" bodyfile="D:/RayTracing/include/SDL_test_crc32.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__test__crc32_8h_1a8f6936196be4a985dadbb0c0549aacf2" prot="public" static="no">
        <name>CrcUint8</name>
        <initializer>unsigned char</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="54" column="10" bodyfile="D:/RayTracing/include/SDL_test_crc32.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__test__crc32_8h_1a39e1b7cfc3c0d80ea907e6486d288796" prot="public" static="no">
        <name>CRC32_POLY</name>
        <initializer>0xEDB88320   /* Perl String::CRC32 compatible */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="60" column="11" bodyfile="D:/RayTracing/include/SDL_test_crc32.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_l__test__crc32_8h_1a06655d4056d1992fa85a1849b4f3eeeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDLTest_Crc32Init</definition>
        <argsstring>(SDLTest_Crc32Context *crcContext)</argsstring>
        <name>SDLTest_Crc32Init</name>
        <param>
          <type><ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref> *</type>
          <declname>crcContext</declname>
        </param>
        <briefdescription>
<para>Initialize the CRC context. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: The function initializes the crc table required for all crc calculations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crcContext</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to context variable</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for OK, -1 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="82" column="6" declfile="D:/RayTracing/include/SDL_test_crc32.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__crc32_8h_1a0397333489338ed3fca5dc0f892070cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDLTest_Crc32Calc</definition>
        <argsstring>(SDLTest_Crc32Context *crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32)</argsstring>
        <name>SDLTest_Crc32Calc</name>
        <param>
          <type><ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref> *</type>
          <declname>crcContext</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__test__crc32_8h_1a8f6936196be4a985dadbb0c0549aacf2" kindref="member">CrcUint8</ref> *</type>
          <declname>inBuf</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref></type>
          <declname>inLen</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref> *</type>
          <declname>crc32</declname>
        </param>
        <briefdescription>
<para>calculate a crc32 from a data block </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crcContext</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to context variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBuf</parametername>
</parameternamelist>
<parameterdescription>
<para>input buffer to checksum </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of input buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crc32</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to Uint32 to store the final CRC into</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for OK, -1 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="96" column="5" declfile="D:/RayTracing/include/SDL_test_crc32.h" declline="96" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__crc32_8h_1a4f78079f5b6871a22dc955b3593731d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDLTest_Crc32CalcStart</definition>
        <argsstring>(SDLTest_Crc32Context *crcContext, CrcUint32 *crc32)</argsstring>
        <name>SDLTest_Crc32CalcStart</name>
        <param>
          <type><ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref> *</type>
          <declname>crcContext</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref> *</type>
          <declname>crc32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="99" column="5" declfile="D:/RayTracing/include/SDL_test_crc32.h" declline="99" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__crc32_8h_1a8e41b3f8fe2e0d8ff591f6a492c6d5b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDLTest_Crc32CalcEnd</definition>
        <argsstring>(SDLTest_Crc32Context *crcContext, CrcUint32 *crc32)</argsstring>
        <name>SDLTest_Crc32CalcEnd</name>
        <param>
          <type><ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref> *</type>
          <declname>crcContext</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref> *</type>
          <declname>crc32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="100" column="5" declfile="D:/RayTracing/include/SDL_test_crc32.h" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__crc32_8h_1a19e6816b8d3c2d11214308a301c7164f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDLTest_Crc32CalcBuffer</definition>
        <argsstring>(SDLTest_Crc32Context *crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32)</argsstring>
        <name>SDLTest_Crc32CalcBuffer</name>
        <param>
          <type><ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref> *</type>
          <declname>crcContext</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__test__crc32_8h_1a8f6936196be4a985dadbb0c0549aacf2" kindref="member">CrcUint8</ref> *</type>
          <declname>inBuf</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref></type>
          <declname>inLen</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref> *</type>
          <declname>crc32</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="101" column="5" declfile="D:/RayTracing/include/SDL_test_crc32.h" declline="101" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__crc32_8h_1a020b58aa3d188466b41b7c9e526c18ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDLTest_Crc32Done</definition>
        <argsstring>(SDLTest_Crc32Context *crcContext)</argsstring>
        <name>SDLTest_Crc32Done</name>
        <param>
          <type><ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref> *</type>
          <declname>crcContext</declname>
        </param>
        <briefdescription>
<para>clean up CRC context </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crcContext</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to context variable</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 for OK, -1 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_crc32.h" line="113" column="5" declfile="D:/RayTracing/include/SDL_test_crc32.h" declline="113" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include file for SDL test framework.</para>
<para>This code is a part of the SDL2_test library, not the main SDL library. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>Implements<sp/>CRC32<sp/>calculations<sp/>(default<sp/>output<sp/>is<sp/>Perl<sp/>String::CRC32<sp/>compatible).</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_test_crc32_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_test_crc32_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>------------<sp/>Definitions<sp/>---------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Definition<sp/>shared<sp/>by<sp/>all<sp/>CRC<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CrcUint32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CrcUint32<sp/><sp/>unsigned<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CrcUint8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="_s_d_l__test__crc32_8h_1a8f6936196be4a985dadbb0c0549aacf2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CrcUint8<sp/><sp/><sp/>unsigned<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ORIGINAL_METHOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CRC32_POLY<sp/>0x04c11db7<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AUTODIN<sp/>II,<sp/>Ethernet,<sp/>&amp;<sp/>FDDI<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_s_d_l__test__crc32_8h_1a39e1b7cfc3c0d80ea907e6486d288796" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>CRC32_POLY<sp/>0xEDB88320<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Perl<sp/>String::CRC32<sp/>compatible<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct_s_d_l_test___crc32_context" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67" refid="struct_s_d_l_test___crc32_context_1ae95d0d0b48bafc4e2f6f032f754ffa4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref><sp/><sp/><sp/><sp/>crc32_table[256];<sp/></highlight><highlight class="comment">/*<sp/>CRC<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------<sp/>Function<sp/>Prototypes<sp/>-------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="_s_d_l__test__crc32_8h_1a06655d4056d1992fa85a1849b4f3eeeb" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__crc32_8h_1a06655d4056d1992fa85a1849b4f3eeeb" kindref="member">SDLTest_Crc32Init</ref>(<ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref><sp/>*<sp/>crcContext);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="_s_d_l__test__crc32_8h_1a0397333489338ed3fca5dc0f892070cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__crc32_8h_1a0397333489338ed3fca5dc0f892070cd" kindref="member">SDLTest_Crc32Calc</ref>(<ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref><sp/>*<sp/>crcContext,<sp/><ref refid="_s_d_l__test__crc32_8h_1a8f6936196be4a985dadbb0c0549aacf2" kindref="member">CrcUint8</ref><sp/>*inBuf,<sp/><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref><sp/>inLen,<sp/><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref><sp/>*crc32);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Same<sp/>routine<sp/>broken<sp/>down<sp/>into<sp/>three<sp/>steps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="_s_d_l__test__crc32_8h_1a4f78079f5b6871a22dc955b3593731d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__crc32_8h_1a4f78079f5b6871a22dc955b3593731d0" kindref="member">SDLTest_Crc32CalcStart</ref>(<ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref><sp/>*<sp/>crcContext,<sp/><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref><sp/>*crc32);</highlight></codeline>
<codeline lineno="100" refid="_s_d_l__test__crc32_8h_1a8e41b3f8fe2e0d8ff591f6a492c6d5b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__crc32_8h_1a8e41b3f8fe2e0d8ff591f6a492c6d5b8" kindref="member">SDLTest_Crc32CalcEnd</ref>(<ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref><sp/>*<sp/>crcContext,<sp/><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref><sp/>*crc32);</highlight></codeline>
<codeline lineno="101" refid="_s_d_l__test__crc32_8h_1a19e6816b8d3c2d11214308a301c7164f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__crc32_8h_1a19e6816b8d3c2d11214308a301c7164f" kindref="member">SDLTest_Crc32CalcBuffer</ref>(<ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref><sp/>*<sp/>crcContext,<sp/><ref refid="_s_d_l__test__crc32_8h_1a8f6936196be4a985dadbb0c0549aacf2" kindref="member">CrcUint8</ref><sp/>*inBuf,<sp/><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref><sp/>inLen,<sp/><ref refid="_s_d_l__test__crc32_8h_1ac0e8fe38fa91e9aa4b32957420795387" kindref="member">CrcUint32</ref><sp/>*crc32);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="_s_d_l__test__crc32_8h_1a020b58aa3d188466b41b7c9e526c18ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__crc32_8h_1a020b58aa3d188466b41b7c9e526c18ec" kindref="member">SDLTest_Crc32Done</ref>(<ref refid="struct_s_d_l_test___crc32_context" kindref="compound">SDLTest_Crc32Context</ref><sp/>*<sp/>crcContext);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_test_crc32_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_test_crc32.h"/>
  </compounddef>
</doxygen>
