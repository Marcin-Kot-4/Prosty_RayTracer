<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classqb_vector" kind="class" language="C++" prot="public">
    <compoundname>qbVector</compoundname>
    <includes refid="qb_vector_8h" local="no">qbVector.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classqb_vector_1ab3ffce7be9491811e952d112d206e0bb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; qbVector&lt; T &gt;::m_vectorData</definition>
        <argsstring></argsstring>
        <name>m_vectorData</name>
        <qualifiedname>qbVector::m_vectorData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="69" column="13" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classqb_vector_1a81f38d58af0aa91be07f9128bd005c9e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int qbVector&lt; T &gt;::m_nDims</definition>
        <argsstring></argsstring>
        <name>m_nDims</name>
        <qualifiedname>qbVector::m_nDims</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="70" column="5" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classqb_vector_1a4d3ca712f03d608fd8fa2b765d5af0a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>qbVector&lt; T &gt;::qbVector</definition>
        <argsstring>()</argsstring>
        <name>qbVector</name>
        <qualifiedname>qbVector::qbVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="28" column="1" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1abc223bb64e38c0922931c093b2ff99ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>qbVector&lt; T &gt;::qbVector</definition>
        <argsstring>(int numDims)</argsstring>
        <name>qbVector</name>
        <qualifiedname>qbVector::qbVector</qualifiedname>
        <param>
          <type>int</type>
          <declname>numDims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="31" column="1" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1aa99293e1abd9fce0f6e376afd3d15dc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>qbVector&lt; T &gt;::qbVector</definition>
        <argsstring>(std::vector&lt; T &gt; inputData)</argsstring>
        <name>qbVector</name>
        <qualifiedname>qbVector::qbVector</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>inputData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="34" column="1" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1ab167f00d61598de0e5741254f6f6b9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>qbVector&lt; T &gt;::~qbVector</definition>
        <argsstring>()</argsstring>
        <name>~qbVector</name>
        <qualifiedname>qbVector::~qbVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="37" column="1" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1a4b1f24a8ae47ef9019109c23c56fc9c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int qbVector&lt; T &gt;::GetNumDims</definition>
        <argsstring>() const</argsstring>
        <name>GetNumDims</name>
        <qualifiedname>qbVector::GetNumDims</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="40" column="5" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1adadd6ca87273a15f57a5e1d6ae15583b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T qbVector&lt; T &gt;::GetElement</definition>
        <argsstring>(int index) const</argsstring>
        <name>GetElement</name>
        <qualifiedname>qbVector::GetElement</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="43" column="3" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1af828430da5d728b15c70f82f73ff1efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        <definition>void qbVector&lt; T &gt;::SetElement</definition>
        <argsstring>(int index, T value)</argsstring>
        <name>SetElement</name>
        <qualifiedname>qbVector::SetElement</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="44" column="6" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1aa2024c900efb9bbbae752f91b59a786c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T qbVector&lt; T &gt;::norm</definition>
        <argsstring>()</argsstring>
        <name>norm</name>
        <qualifiedname>qbVector::norm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="48" column="3" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="134" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1a30cacb02a659ae4885e16243fd849fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt;</type>
        <definition>qbVector&lt; T &gt; qbVector&lt; T &gt;::Normalized</definition>
        <argsstring>()</argsstring>
        <name>Normalized</name>
        <qualifiedname>qbVector::Normalized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="51" column="10" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="145" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1a06cc00476d406a772461fc4acd7e9ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        <definition>void qbVector&lt; T &gt;::Normalize</definition>
        <argsstring>()</argsstring>
        <name>Normalize</name>
        <qualifiedname>qbVector::Normalize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="54" column="6" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="157" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1a9f2b081b6d16e78aa749e1a7ac6e77a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt;</type>
        <definition>qbVector&lt; T &gt; qbVector&lt; T &gt;::operator+</definition>
        <argsstring>(const qbVector&lt; T &gt; &amp;rhs) const</argsstring>
        <name>operator+</name>
        <qualifiedname>qbVector::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="57" column="10" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="174" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1a3544378181df99c93e4efaafc247ebfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt;</type>
        <definition>qbVector&lt; T &gt; qbVector&lt; T &gt;::operator-</definition>
        <argsstring>(const qbVector&lt; T &gt; &amp;rhs) const</argsstring>
        <name>operator-</name>
        <qualifiedname>qbVector::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="58" column="10" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="189" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1af4cf14f133608188f609dec15f137da1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt;</type>
        <definition>qbVector&lt; T &gt; qbVector&lt; T &gt;::operator*</definition>
        <argsstring>(const T &amp;rhs) const</argsstring>
        <name>operator*</name>
        <qualifiedname>qbVector::operator*</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="59" column="10" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="204" bodyend="213"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classqb_vector_1adc9878cd0ab3afc3169672716dab906d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; U &gt;</type>
        <definition>qbVector&lt; U &gt; operator*</definition>
        <argsstring>(const U &amp;lhs, const qbVector&lt; U &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>qbVector::operator*</qualifiedname>
        <param>
          <type>const U &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; U &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="62" column="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classqb_vector_1a8a3c9123ca342c3499c99112a577db8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T qbVector&lt; T &gt;::dot</definition>
        <argsstring>(const qbVector&lt; T &gt; &amp;a, const qbVector&lt; T &gt; &amp;b)</argsstring>
        <name>dot</name>
        <qualifiedname>qbVector::dot</qualifiedname>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="65" column="10" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="234" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classqb_vector_1af77140337a3e04ff051d346599fe4283" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt;</type>
        <definition>qbVector&lt; T &gt; qbVector&lt; T &gt;::cross</definition>
        <argsstring>(const qbVector&lt; T &gt; &amp;a, const qbVector&lt; T &gt; &amp;b)</argsstring>
        <name>cross</name>
        <qualifiedname>qbVector::cross</qualifiedname>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="66" column="17" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="249" bodyend="269"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" line="23" column="1" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbVector.h" bodystart="24" bodyend="72"/>
    <listofallmembers>
      <member refid="classqb_vector_1af77140337a3e04ff051d346599fe4283" prot="public" virt="non-virtual"><scope>qbVector</scope><name>cross</name></member>
      <member refid="classqb_vector_1a8a3c9123ca342c3499c99112a577db8b" prot="public" virt="non-virtual"><scope>qbVector</scope><name>dot</name></member>
      <member refid="classqb_vector_1adadd6ca87273a15f57a5e1d6ae15583b" prot="public" virt="non-virtual"><scope>qbVector</scope><name>GetElement</name></member>
      <member refid="classqb_vector_1a4b1f24a8ae47ef9019109c23c56fc9c4" prot="public" virt="non-virtual"><scope>qbVector</scope><name>GetNumDims</name></member>
      <member refid="classqb_vector_1a81f38d58af0aa91be07f9128bd005c9e" prot="private" virt="non-virtual"><scope>qbVector</scope><name>m_nDims</name></member>
      <member refid="classqb_vector_1ab3ffce7be9491811e952d112d206e0bb" prot="private" virt="non-virtual"><scope>qbVector</scope><name>m_vectorData</name></member>
      <member refid="classqb_vector_1aa2024c900efb9bbbae752f91b59a786c" prot="public" virt="non-virtual"><scope>qbVector</scope><name>norm</name></member>
      <member refid="classqb_vector_1a06cc00476d406a772461fc4acd7e9ea8" prot="public" virt="non-virtual"><scope>qbVector</scope><name>Normalize</name></member>
      <member refid="classqb_vector_1a30cacb02a659ae4885e16243fd849fb6" prot="public" virt="non-virtual"><scope>qbVector</scope><name>Normalized</name></member>
      <member refid="classqb_vector_1af4cf14f133608188f609dec15f137da1" prot="public" virt="non-virtual"><scope>qbVector</scope><name>operator*</name></member>
      <member refid="classqb_vector_1adc9878cd0ab3afc3169672716dab906d" prot="public" virt="non-virtual"><scope>qbVector</scope><name>operator*</name></member>
      <member refid="classqb_vector_1a9f2b081b6d16e78aa749e1a7ac6e77a7" prot="public" virt="non-virtual"><scope>qbVector</scope><name>operator+</name></member>
      <member refid="classqb_vector_1a3544378181df99c93e4efaafc247ebfe" prot="public" virt="non-virtual"><scope>qbVector</scope><name>operator-</name></member>
      <member refid="classqb_vector_1a4d3ca712f03d608fd8fa2b765d5af0a3" prot="public" virt="non-virtual"><scope>qbVector</scope><name>qbVector</name></member>
      <member refid="classqb_vector_1abc223bb64e38c0922931c093b2ff99ff" prot="public" virt="non-virtual"><scope>qbVector</scope><name>qbVector</name></member>
      <member refid="classqb_vector_1aa99293e1abd9fce0f6e376afd3d15dc0" prot="public" virt="non-virtual"><scope>qbVector</scope><name>qbVector</name></member>
      <member refid="classqb_vector_1af828430da5d728b15c70f82f73ff1efd" prot="public" virt="non-virtual"><scope>qbVector</scope><name>SetElement</name></member>
      <member refid="classqb_vector_1ab167f00d61598de0e5741254f6f6b9ff" prot="public" virt="non-virtual"><scope>qbVector</scope><name>~qbVector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
