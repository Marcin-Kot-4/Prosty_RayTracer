<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__mouse_8h" kind="file" language="C++">
    <compoundname>SDL_mouse.h</compoundname>
    <includes refid="_s_d_l__stdinc_8h" local="yes">SDL_stdinc.h</includes>
    <includes refid="_s_d_l__error_8h" local="yes">SDL_error.h</includes>
    <includes refid="_s_d_l__video_8h" local="yes">SDL_video.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l__events_8h" local="yes">D:/RayTracing/include/SDL_events.h</includedby>
    <incdepgraph>
      <node id="16">
        <label>SDL_blendmode.h</label>
        <link refid="_s_d_l__blendmode_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SDL_endian.h</label>
        <link refid="_s_d_l__endian_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SDL_error.h</label>
        <link refid="_s_d_l__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_mouse.h</label>
        <link refid="_s_d_l__mouse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SDL_pixels.h</label>
        <link refid="_s_d_l__pixels_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SDL_rect.h</label>
        <link refid="_s_d_l__rect_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SDL_rwops.h</label>
        <link refid="_s_d_l__rwops_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>SDL_surface.h</label>
        <link refid="_s_d_l__surface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SDL_video.h</label>
        <link refid="_s_d_l__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="6">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="4">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>D:/RayTracing/include/SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/include/SDL_events.h</label>
        <link refid="_s_d_l__events_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_mouse.h</label>
        <link refid="_s_d_l__mouse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="14">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>D:/RayTracing/include/SDL_test_compare.h</label>
        <link refid="_s_d_l__test__compare_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>D:/RayTracing/include/SDL_test_images.h</label>
        <link refid="_s_d_l__test__images_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" prot="public" static="no">
        <name>SDL_BUTTON</name>
        <param><defname>X</defname></param>
        <initializer>(1 &lt;&lt; ((X)-1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used as a mask when testing buttons in buttonstate.</para>
<para><itemizedlist>
<listitem><para>Button 1: Left mouse button</para>
</listitem><listitem><para>Button 2: Middle mouse button</para>
</listitem><listitem><para>Button 3: Right mouse button </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="434" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1a9500bda83bcc0e9afee1438a79019c5f" prot="public" static="no">
        <name>SDL_BUTTON_LEFT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="435" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1a4d7543e668502bbb75d045d8097fb8f3" prot="public" static="no">
        <name>SDL_BUTTON_MIDDLE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="436" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1a63fcfb473ee5e5da3752e1cf75f12286" prot="public" static="no">
        <name>SDL_BUTTON_RIGHT</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="437" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1a1422ab75c7388bb5047028103a6df550" prot="public" static="no">
        <name>SDL_BUTTON_X1</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="438" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1a2ae4ae2fe944879dc9ef6b16155d52e2" prot="public" static="no">
        <name>SDL_BUTTON_X2</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="439" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1ad9ccef8108b6a1704a49ab93a91d2c47" prot="public" static="no">
        <name>SDL_BUTTON_LMASK</name>
        <initializer><ref refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" kindref="member">SDL_BUTTON</ref>(<ref refid="_s_d_l__mouse_8h_1a9500bda83bcc0e9afee1438a79019c5f" kindref="member">SDL_BUTTON_LEFT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="440" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1ad90dffab11146e0eb9f2e28267e6fbbd" prot="public" static="no">
        <name>SDL_BUTTON_MMASK</name>
        <initializer><ref refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" kindref="member">SDL_BUTTON</ref>(<ref refid="_s_d_l__mouse_8h_1a4d7543e668502bbb75d045d8097fb8f3" kindref="member">SDL_BUTTON_MIDDLE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="441" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1aefa6805c2113f16e659edcde5172b5df" prot="public" static="no">
        <name>SDL_BUTTON_RMASK</name>
        <initializer><ref refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" kindref="member">SDL_BUTTON</ref>(<ref refid="_s_d_l__mouse_8h_1a63fcfb473ee5e5da3752e1cf75f12286" kindref="member">SDL_BUTTON_RIGHT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="442" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1aee13129df2cc50d4a16c4fe7652737a0" prot="public" static="no">
        <name>SDL_BUTTON_X1MASK</name>
        <initializer><ref refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" kindref="member">SDL_BUTTON</ref>(<ref refid="_s_d_l__mouse_8h_1a1422ab75c7388bb5047028103a6df550" kindref="member">SDL_BUTTON_X1</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="443" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__mouse_8h_1afb0dfebdfec877410feb8800cfd7e443" prot="public" static="no">
        <name>SDL_BUTTON_X2MASK</name>
        <initializer><ref refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" kindref="member">SDL_BUTTON</ref>(<ref refid="_s_d_l__mouse_8h_1a2ae4ae2fe944879dc9ef6b16155d52e2" kindref="member">SDL_BUTTON_X2</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="444" column="9" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_SystemCursor</name>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a0ea5055b7ef96598a39570abf365b9f9" prot="public">
          <name>SDL_SYSTEM_CURSOR_ARROW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Arrow </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a5f3b85170a85ffb62aa477f9c31987fb" prot="public">
          <name>SDL_SYSTEM_CURSOR_IBEAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>I-beam </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a8ce5ae38a754042575234c8da72417e6" prot="public">
          <name>SDL_SYSTEM_CURSOR_WAIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Wait </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732ae18ee52eb9724301950db552c953e48e" prot="public">
          <name>SDL_SYSTEM_CURSOR_CROSSHAIR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Crosshair </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a71fe25cd68c411ca52370bacc40b2764" prot="public">
          <name>SDL_SYSTEM_CURSOR_WAITARROW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Small wait cursor (or Wait if not available) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a0eb8a498162417265c0ec79c1eacb30e" prot="public">
          <name>SDL_SYSTEM_CURSOR_SIZENWSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Double arrow pointing northwest and southeast </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a5b70e5fee565ccf9a6a99f92c571b4ed" prot="public">
          <name>SDL_SYSTEM_CURSOR_SIZENESW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Double arrow pointing northeast and southwest </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732aa2f663333ca851ce0f40f8f8d2c2a731" prot="public">
          <name>SDL_SYSTEM_CURSOR_SIZEWE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Double arrow pointing west and east </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a04d6abe3f01b1c4b8d77af1b2ef5e4e9" prot="public">
          <name>SDL_SYSTEM_CURSOR_SIZENS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Double arrow pointing north and south </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a88849f7320ea2bf629e05a06c6ff8e20" prot="public">
          <name>SDL_SYSTEM_CURSOR_SIZEALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Four pointed arrow pointing north, south, east, and west </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a70a8b0dec44a0f63d7af72e649de3b62" prot="public">
          <name>SDL_SYSTEM_CURSOR_NO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Slashed circle or crossbones </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a09cd11742bffaafbd1073afeea03f7bc" prot="public">
          <name>SDL_SYSTEM_CURSOR_HAND</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hand </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732aa19cf5bcb79a35e1c34beb243f9a7a7b" prot="public">
          <name>SDL_NUM_SYSTEM_CURSORS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Cursor types for <ref refid="_s_d_l__mouse_8h_1aa3c78c8d7501b33db7839a49d3d6eb38" kindref="member">SDL_CreateSystemCursor()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="46" column="1" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="47" bodyend="61"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_MouseWheelDirection</name>
        <enumvalue id="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3a8778fa74ec64be00b8b6c48d10f6e984" prot="public">
          <name>SDL_MOUSEWHEEL_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The scroll direction is normal </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3a8e744c7abe1563a5fb219d32f413af1a" prot="public">
          <name>SDL_MOUSEWHEEL_FLIPPED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The scroll direction is flipped / natural </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Scroll direction types for the Scroll event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="66" column="1" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="67" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" prot="public" static="no">
        <type>struct <ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref></type>
        <definition>typedef struct SDL_Cursor SDL_Cursor</definition>
        <argsstring></argsstring>
        <name>SDL_Cursor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implementation dependent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="41" column="25" bodyfile="D:/RayTracing/include/SDL_mouse.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a1ca19fb9815f7b80ab15ab597e2eef06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Window *SDLCALL SDL_GetMouseFocus</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetMouseFocus</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the window which currently has mouse focus.</para>
<para><simplesect kind="return"><para>the window with mouse focus.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="81" column="37" declfile="D:/RayTracing/include/SDL_mouse.h" declline="81" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a1561f413546c0e4f5f44a8f094926575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Uint32 SDLCALL SDL_GetMouseState</definition>
        <argsstring>(int *x, int *y)</argsstring>
        <name>SDL_GetMouseState</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the current state of the mouse.</para>
<para>The current button state is returned as a button bitmask, which can be tested using the <computeroutput><ref refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" kindref="member">SDL_BUTTON(X)</ref></computeroutput> macros (where <computeroutput>X</computeroutput> is generally 1 for the left, 2 for middle, 3 for the right button), and <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> are set to the mouse cursor position relative to the focus window. You can pass NULL for either <computeroutput>x</computeroutput> or <computeroutput>y</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate of the mouse cursor position relative to the focus window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate of the mouse cursor position relative to the focus window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a 32-bit button bitmask of the current button state.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1ab0f5adcf42e5074315b8a01f325d8f53" kindref="member">SDL_GetGlobalMouseState</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a8cf9b519050e3e871f5e59f03b38b6e1" kindref="member">SDL_GetRelativeMouseState</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__events_8h_1aa15403d1c8fc341cd9cf750e27a66d19" kindref="member">SDL_PumpEvents</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="104" column="32" declfile="D:/RayTracing/include/SDL_mouse.h" declline="104" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1ab0f5adcf42e5074315b8a01f325d8f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Uint32 SDLCALL SDL_GetGlobalMouseState</definition>
        <argsstring>(int *x, int *y)</argsstring>
        <name>SDL_GetGlobalMouseState</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current state of the mouse in relation to the desktop.</para>
<para>This works similarly to <ref refid="_s_d_l__mouse_8h_1a1561f413546c0e4f5f44a8f094926575" kindref="member">SDL_GetMouseState()</ref>, but the coordinates will be reported relative to the top-left of the desktop. This can be useful if you need to track the mouse outside of a specific window and <ref refid="_s_d_l__mouse_8h_1a8829359c04d0d7835b4330dd21fdd051" kindref="member">SDL_CaptureMouse()</ref> doesn&apos;t fit your needs. For example, it could be useful if you need to track the mouse while dragging a window, where coordinates relative to a window might not be in sync at all times.</para>
<para>Note: <ref refid="_s_d_l__mouse_8h_1a1561f413546c0e4f5f44a8f094926575" kindref="member">SDL_GetMouseState()</ref> returns the mouse position as SDL understands it from the last pump of the event queue. This function, however, queries the OS for the current mouse position, and as such, might be a slightly less efficient function. Unless you know what you&apos;re doing and have a good reason to use this function, you probably want <ref refid="_s_d_l__mouse_8h_1a1561f413546c0e4f5f44a8f094926575" kindref="member">SDL_GetMouseState()</ref> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>filled in with the current X coord relative to the desktop; can be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>filled in with the current Y coord relative to the desktop; can be NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current button state as a bitmask which can be tested using the <ref refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" kindref="member">SDL_BUTTON(X)</ref> macros.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.4.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a8829359c04d0d7835b4330dd21fdd051" kindref="member">SDL_CaptureMouse</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="133" column="32" declfile="D:/RayTracing/include/SDL_mouse.h" declline="133" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a8cf9b519050e3e871f5e59f03b38b6e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Uint32 SDLCALL SDL_GetRelativeMouseState</definition>
        <argsstring>(int *x, int *y)</argsstring>
        <name>SDL_GetRelativeMouseState</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the relative state of the mouse.</para>
<para>The current button state is returned as a button bitmask, which can be tested using the <computeroutput><ref refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" kindref="member">SDL_BUTTON(X)</ref></computeroutput> macros (where <computeroutput>X</computeroutput> is generally 1 for the left, 2 for middle, 3 for the right button), and <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> are set to the mouse deltas since the last call to <ref refid="_s_d_l__mouse_8h_1a8cf9b519050e3e871f5e59f03b38b6e1" kindref="member">SDL_GetRelativeMouseState()</ref> or since event initialization. You can pass NULL for either <computeroutput>x</computeroutput> or <computeroutput>y</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled with the last recorded x coordinate of the mouse </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled with the last recorded y coordinate of the mouse </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a 32-bit button bitmask of the relative button state.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a1561f413546c0e4f5f44a8f094926575" kindref="member">SDL_GetMouseState</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="152" column="32" declfile="D:/RayTracing/include/SDL_mouse.h" declline="152" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a2f2259cdf30272b3c4cc1e3236cb8071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_WarpMouseInWindow</definition>
        <argsstring>(SDL_Window *window, int x, int y)</argsstring>
        <name>SDL_WarpMouseInWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move the mouse cursor to the given position within the window.</para>
<para>This function generates a mouse motion event.</para>
<para>Note that this function will appear to succeed, but not actually move the mouse when used over Microsoft Remote Desktop.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to move the mouse into, or NULL for the current mouse focus </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate within the window </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate within the window</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a200c3d105a0a30fb465760ab870b3ce3" kindref="member">SDL_WarpMouseGlobal</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="171" column="30" declfile="D:/RayTracing/include/SDL_mouse.h" declline="171" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a200c3d105a0a30fb465760ab870b3ce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_WarpMouseGlobal</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>SDL_WarpMouseGlobal</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move the mouse to the given position in global screen space.</para>
<para>This function generates a mouse motion event.</para>
<para>A failure of this function usually means that it is unsupported by a platform.</para>
<para>Note that this function will appear to succeed, but not actually move the mouse when used over Microsoft Remote Desktop.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.4.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a2f2259cdf30272b3c4cc1e3236cb8071" kindref="member">SDL_WarpMouseInWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="194" column="29" declfile="D:/RayTracing/include/SDL_mouse.h" declline="194" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1ad7b3533784e0aa34cdf1c5f232817206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetRelativeMouseMode</definition>
        <argsstring>(SDL_bool enabled)</argsstring>
        <name>SDL_SetRelativeMouseMode</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set relative mouse mode.</para>
<para>While the mouse is in relative mode, the cursor is hidden, and the driver will try to report continuous motion in the current window. Only relative motion events will be delivered, the mouse position will not change.</para>
<para>Note that this function will not be able to provide continuous relative motion when used over Microsoft Remote Desktop, instead motion is limited to the bounds of the screen.</para>
<para>This function will flush any pending mouse motion.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>SDL_TRUE to enable relative mode, SDL_FALSE to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
If relative mode is not supported, this returns -1.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1ae97aaf1682b3a6b62214dda1dda9b212" kindref="member">SDL_GetRelativeMouseMode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="219" column="29" declfile="D:/RayTracing/include/SDL_mouse.h" declline="219" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a8829359c04d0d7835b4330dd21fdd051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_CaptureMouse</definition>
        <argsstring>(SDL_bool enabled)</argsstring>
        <name>SDL_CaptureMouse</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Capture the mouse and to track input outside an SDL window.</para>
<para>Capturing enables your app to obtain mouse events globally, instead of just within your window. Not all video targets support this function. When capturing is enabled, the current window will get all mouse events, but unlike relative mode, no change is made to the cursor and it is not restrained to your window.</para>
<para>This function may also deny mouse input to other windows<ndash/>both those in your application and others on the system<ndash/>so you should use this function sparingly, and in small bursts. For example, you might want to track the mouse while the user is dragging something, until the user releases a mouse button. It is not recommended that you capture the mouse for long periods of time, such as the entire time your app is running. For that, you should probably use <ref refid="_s_d_l__mouse_8h_1ad7b3533784e0aa34cdf1c5f232817206" kindref="member">SDL_SetRelativeMouseMode()</ref> or <ref refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" kindref="member">SDL_SetWindowGrab()</ref>, depending on your goals.</para>
<para>While captured, mouse events still report coordinates relative to the current (foreground) window, but those coordinates may be outside the bounds of the window (including negative values). Capturing is only allowed for the foreground window. If the window loses focus while capturing, the capture will be disabled automatically.</para>
<para>While capturing is enabled, the current window will have the <computeroutput>SDL_WINDOW_MOUSE_CAPTURE</computeroutput> flag set.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>SDL_TRUE to enable capturing, SDL_FALSE to disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or -1 if not supported; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.4.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1ab0f5adcf42e5074315b8a01f325d8f53" kindref="member">SDL_GetGlobalMouseState</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="256" column="29" declfile="D:/RayTracing/include/SDL_mouse.h" declline="256" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1ae97aaf1682b3a6b62214dda1dda9b212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_GetRelativeMouseMode</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetRelativeMouseMode</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query whether relative mouse mode is enabled.</para>
<para><simplesect kind="return"><para>SDL_TRUE if relative mode is enabled or SDL_FALSE otherwise.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1ad7b3533784e0aa34cdf1c5f232817206" kindref="member">SDL_SetRelativeMouseMode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="267" column="34" declfile="D:/RayTracing/include/SDL_mouse.h" declline="267" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a15e754481ab3bb8e94a36ea33829a4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Cursor *SDLCALL SDL_CreateCursor</definition>
        <argsstring>(const Uint8 *data, const Uint8 *mask, int w, int h, int hot_x, int hot_y)</argsstring>
        <name>SDL_CreateCursor</name>
        <param>
          <type>const <ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref> *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hot_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hot_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a cursor using the specified bitmap data and mask (in MSB format).</para>
<para><computeroutput>mask</computeroutput> has to be in MSB (Most Significant Bit) format.</para>
<para>The cursor width (<computeroutput>w</computeroutput>) must be a multiple of 8 bits.</para>
<para>The cursor is created in black and white according to the following:</para>
<para><itemizedlist>
<listitem><para>data=0, mask=1: white</para>
</listitem><listitem><para>data=1, mask=1: black</para>
</listitem><listitem><para>data=0, mask=0: transparent</para>
</listitem><listitem><para>data=1, mask=0: inverted color if possible, black if not.</para>
</listitem></itemizedlist>
</para>
<para>Cursors created with this function must be freed with <ref refid="_s_d_l__mouse_8h_1ac17a8282f93d9d31e8e087236f0ecdd8" kindref="member">SDL_FreeCursor()</ref>.</para>
<para>If you want to have a color cursor, or create your cursor from an <ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref>, you should use <ref refid="_s_d_l__mouse_8h_1aa875cf002af55d61daa50d1c4eadd8ca" kindref="member">SDL_CreateColorCursor()</ref>. Alternately, you can hide the cursor and draw your own as part of your game&apos;s rendering, but it will be bound to the framerate.</para>
<para>Also, since SDL 2.0.0, <ref refid="_s_d_l__mouse_8h_1aa3c78c8d7501b33db7839a49d3d6eb38" kindref="member">SDL_CreateSystemCursor()</ref> is available, which provides twelve readily available system cursors to pick from.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the color value for each pixel of the cursor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>the mask value for each pixel of the cursor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the cursor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>the height of the cursor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hot_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the X-axis location of the upper left corner of the cursor relative to the actual mouse position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hot_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the Y-axis location of the upper left corner of the cursor relative to the actual mouse position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new cursor with the specified parameters on success or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1ac17a8282f93d9d31e8e087236f0ecdd8" kindref="member">SDL_FreeCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a7c2971901f9a772be22152420aee275c" kindref="member">SDL_SetCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a00286ec15cd56dee1fd71ed4e6e7a585" kindref="member">SDL_ShowCursor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="310" column="36" declfile="D:/RayTracing/include/SDL_mouse.h" declline="310" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1aa875cf002af55d61daa50d1c4eadd8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Cursor *SDLCALL SDL_CreateColorCursor</definition>
        <argsstring>(SDL_Surface *surface, int hot_x, int hot_y)</argsstring>
        <name>SDL_CreateColorCursor</name>
        <param>
          <type><ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref> *</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hot_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hot_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a color cursor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>surface</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref> structure representing the cursor image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hot_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position of the cursor hot spot </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hot_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position of the cursor hot spot </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new cursor on success or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a15e754481ab3bb8e94a36ea33829a4ba" kindref="member">SDL_CreateCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1ac17a8282f93d9d31e8e087236f0ecdd8" kindref="member">SDL_FreeCursor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="329" column="36" declfile="D:/RayTracing/include/SDL_mouse.h" declline="329" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1aa3c78c8d7501b33db7839a49d3d6eb38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Cursor *SDLCALL SDL_CreateSystemCursor</definition>
        <argsstring>(SDL_SystemCursor id)</argsstring>
        <name>SDL_CreateSystemCursor</name>
        <param>
          <type><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732" kindref="member">SDL_SystemCursor</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a system cursor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>an SDL_SystemCursor enum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a cursor on success or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1ac17a8282f93d9d31e8e087236f0ecdd8" kindref="member">SDL_FreeCursor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="344" column="36" declfile="D:/RayTracing/include/SDL_mouse.h" declline="344" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a7c2971901f9a772be22152420aee275c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetCursor</definition>
        <argsstring>(SDL_Cursor *cursor)</argsstring>
        <name>SDL_SetCursor</name>
        <param>
          <type><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref> *</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the active cursor.</para>
<para>This function sets the currently active cursor to the specified one. If the cursor is currently visible, the change will be immediately represented on the display. SDL_SetCursor(NULL) can be used to force cursor redraw, if this is desired for any reason.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>a cursor to make active</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a15e754481ab3bb8e94a36ea33829a4ba" kindref="member">SDL_CreateCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a98d7b811cebffcdd9afb3b65288d715c" kindref="member">SDL_GetCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a00286ec15cd56dee1fd71ed4e6e7a585" kindref="member">SDL_ShowCursor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="362" column="30" declfile="D:/RayTracing/include/SDL_mouse.h" declline="362" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a98d7b811cebffcdd9afb3b65288d715c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Cursor *SDLCALL SDL_GetCursor</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetCursor</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the active cursor.</para>
<para>This function returns a pointer to the current cursor which is owned by the library. It is not necessary to free the cursor with <ref refid="_s_d_l__mouse_8h_1ac17a8282f93d9d31e8e087236f0ecdd8" kindref="member">SDL_FreeCursor()</ref>.</para>
<para><simplesect kind="return"><para>the active cursor or NULL if there is no mouse.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a7c2971901f9a772be22152420aee275c" kindref="member">SDL_SetCursor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="376" column="36" declfile="D:/RayTracing/include/SDL_mouse.h" declline="376" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a395cc3d18523a9240cb132f1c5d0034a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Cursor *SDLCALL SDL_GetDefaultCursor</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetDefaultCursor</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the default cursor.</para>
<para><simplesect kind="return"><para>the default cursor on success or NULL on failure.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1aa3c78c8d7501b33db7839a49d3d6eb38" kindref="member">SDL_CreateSystemCursor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="387" column="36" declfile="D:/RayTracing/include/SDL_mouse.h" declline="387" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1ac17a8282f93d9d31e8e087236f0ecdd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_FreeCursor</definition>
        <argsstring>(SDL_Cursor *cursor)</argsstring>
        <name>SDL_FreeCursor</name>
        <param>
          <type><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref> *</type>
          <declname>cursor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free a previously-created cursor.</para>
<para>Use this function to free cursor resources created with <ref refid="_s_d_l__mouse_8h_1a15e754481ab3bb8e94a36ea33829a4ba" kindref="member">SDL_CreateCursor()</ref>, <ref refid="_s_d_l__mouse_8h_1aa875cf002af55d61daa50d1c4eadd8ca" kindref="member">SDL_CreateColorCursor()</ref> or <ref refid="_s_d_l__mouse_8h_1aa3c78c8d7501b33db7839a49d3d6eb38" kindref="member">SDL_CreateSystemCursor()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cursor</parametername>
</parameternamelist>
<parameterdescription>
<para>the cursor to free</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1aa875cf002af55d61daa50d1c4eadd8ca" kindref="member">SDL_CreateColorCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a15e754481ab3bb8e94a36ea33829a4ba" kindref="member">SDL_CreateCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1aa3c78c8d7501b33db7839a49d3d6eb38" kindref="member">SDL_CreateSystemCursor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="403" column="30" declfile="D:/RayTracing/include/SDL_mouse.h" declline="403" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__mouse_8h_1a00286ec15cd56dee1fd71ed4e6e7a585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_ShowCursor</definition>
        <argsstring>(int toggle)</argsstring>
        <name>SDL_ShowCursor</name>
        <param>
          <type>int</type>
          <declname>toggle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Toggle whether or not the cursor is shown.</para>
<para>The cursor starts off displayed but can be turned off. Passing <computeroutput>SDL_ENABLE</computeroutput> displays the cursor and passing <computeroutput>SDL_DISABLE</computeroutput> hides it.</para>
<para>The current state of the mouse cursor can be queried by passing <computeroutput>SDL_QUERY</computeroutput>; either <computeroutput>SDL_DISABLE</computeroutput> or <computeroutput>SDL_ENABLE</computeroutput> will be returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>toggle</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>SDL_ENABLE</computeroutput> to show the cursor, <computeroutput>SDL_DISABLE</computeroutput> to hide it, <computeroutput>SDL_QUERY</computeroutput> to query the current state without changing it. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>SDL_ENABLE</computeroutput> if the cursor is shown, or <computeroutput>SDL_DISABLE</computeroutput> if the cursor is hidden, or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a15e754481ab3bb8e94a36ea33829a4ba" kindref="member">SDL_CreateCursor</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__mouse_8h_1a7c2971901f9a772be22152420aee275c" kindref="member">SDL_SetCursor</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_mouse.h" line="425" column="29" declfile="D:/RayTracing/include/SDL_mouse.h" declline="425" declcolumn="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include file for SDL mouse event handling. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_mouse_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_mouse_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__stdinc_8h" kindref="compound">SDL_stdinc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__error_8h" kindref="compound">SDL_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__video_8h" kindref="compound">SDL_video.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref><sp/><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a0ea5055b7ef96598a39570abf365b9f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a0ea5055b7ef96598a39570abf365b9f9" kindref="member">SDL_SYSTEM_CURSOR_ARROW</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a5f3b85170a85ffb62aa477f9c31987fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a5f3b85170a85ffb62aa477f9c31987fb" kindref="member">SDL_SYSTEM_CURSOR_IBEAM</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a8ce5ae38a754042575234c8da72417e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a8ce5ae38a754042575234c8da72417e6" kindref="member">SDL_SYSTEM_CURSOR_WAIT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732ae18ee52eb9724301950db552c953e48e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732ae18ee52eb9724301950db552c953e48e" kindref="member">SDL_SYSTEM_CURSOR_CROSSHAIR</ref>,<sp/></highlight></codeline>
<codeline lineno="52" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a71fe25cd68c411ca52370bacc40b2764" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a71fe25cd68c411ca52370bacc40b2764" kindref="member">SDL_SYSTEM_CURSOR_WAITARROW</ref>,<sp/></highlight></codeline>
<codeline lineno="53" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a0eb8a498162417265c0ec79c1eacb30e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a0eb8a498162417265c0ec79c1eacb30e" kindref="member">SDL_SYSTEM_CURSOR_SIZENWSE</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a5b70e5fee565ccf9a6a99f92c571b4ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a5b70e5fee565ccf9a6a99f92c571b4ed" kindref="member">SDL_SYSTEM_CURSOR_SIZENESW</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732aa2f663333ca851ce0f40f8f8d2c2a731" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732aa2f663333ca851ce0f40f8f8d2c2a731" kindref="member">SDL_SYSTEM_CURSOR_SIZEWE</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a04d6abe3f01b1c4b8d77af1b2ef5e4e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a04d6abe3f01b1c4b8d77af1b2ef5e4e9" kindref="member">SDL_SYSTEM_CURSOR_SIZENS</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a88849f7320ea2bf629e05a06c6ff8e20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a88849f7320ea2bf629e05a06c6ff8e20" kindref="member">SDL_SYSTEM_CURSOR_SIZEALL</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a70a8b0dec44a0f63d7af72e649de3b62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a70a8b0dec44a0f63d7af72e649de3b62" kindref="member">SDL_SYSTEM_CURSOR_NO</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a09cd11742bffaafbd1073afeea03f7bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732a09cd11742bffaafbd1073afeea03f7bc" kindref="member">SDL_SYSTEM_CURSOR_HAND</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732aa19cf5bcb79a35e1c34beb243f9a7a7b" kindref="member">SDL_NUM_SYSTEM_CURSORS</ref></highlight></codeline>
<codeline lineno="61" refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732aa19cf5bcb79a35e1c34beb243f9a7a7b" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732" kindref="member">SDL_SystemCursor</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68" refid="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3a8778fa74ec64be00b8b6c48d10f6e984" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3a8778fa74ec64be00b8b6c48d10f6e984" kindref="member">SDL_MOUSEWHEEL_NORMAL</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3a8e744c7abe1563a5fb219d32f413af1a" kindref="member">SDL_MOUSEWHEEL_FLIPPED</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3a8e744c7abe1563a5fb219d32f413af1a" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__mouse_8h_1ac65151e54bea0e005902790c68e738f3" kindref="member">SDL_MouseWheelDirection</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="_s_d_l__mouse_8h_1a1ca19fb9815f7b80ab15ab597e2eef06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a1ca19fb9815f7b80ab15ab597e2eef06" kindref="member">SDL_GetMouseFocus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_s_d_l__mouse_8h_1a1561f413546c0e4f5f44a8f094926575" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a1561f413546c0e4f5f44a8f094926575" kindref="member">SDL_GetMouseState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="_s_d_l__mouse_8h_1ab0f5adcf42e5074315b8a01f325d8f53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1ab0f5adcf42e5074315b8a01f325d8f53" kindref="member">SDL_GetGlobalMouseState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="_s_d_l__mouse_8h_1a8cf9b519050e3e871f5e59f03b38b6e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a8cf9b519050e3e871f5e59f03b38b6e1" kindref="member">SDL_GetRelativeMouseState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="_s_d_l__mouse_8h_1a2f2259cdf30272b3c4cc1e3236cb8071" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a2f2259cdf30272b3c4cc1e3236cb8071" kindref="member">SDL_WarpMouseInWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="_s_d_l__mouse_8h_1a200c3d105a0a30fb465760ab870b3ce3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a200c3d105a0a30fb465760ab870b3ce3" kindref="member">SDL_WarpMouseGlobal</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="_s_d_l__mouse_8h_1ad7b3533784e0aa34cdf1c5f232817206" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1ad7b3533784e0aa34cdf1c5f232817206" kindref="member">SDL_SetRelativeMouseMode</ref>(<ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a0455a397ab5468d21c3021f2efa6dd3c" kindref="member">enabled</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="_s_d_l__mouse_8h_1a8829359c04d0d7835b4330dd21fdd051" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a8829359c04d0d7835b4330dd21fdd051" kindref="member">SDL_CaptureMouse</ref>(<ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a0455a397ab5468d21c3021f2efa6dd3c" kindref="member">enabled</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="_s_d_l__mouse_8h_1ae97aaf1682b3a6b62214dda1dda9b212" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1ae97aaf1682b3a6b62214dda1dda9b212" kindref="member">SDL_GetRelativeMouseMode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="_s_d_l__mouse_8h_1a15e754481ab3bb8e94a36ea33829a4ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a15e754481ab3bb8e94a36ea33829a4ba" kindref="member">SDL_CreateCursor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/>*<sp/><ref refid="_s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a2e8825c19147a8250013df8e4275f5b6" kindref="member">mask</ref>,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a6ee8f168a7ab6785a9bb57c6715dad99" kindref="member">w</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hot_x,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hot_y);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="_s_d_l__mouse_8h_1aa875cf002af55d61daa50d1c4eadd8ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1aa875cf002af55d61daa50d1c4eadd8ca" kindref="member">SDL_CreateColorCursor</ref>(<ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref><sp/>*surface,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hot_x,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hot_y);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="_s_d_l__mouse_8h_1aa3c78c8d7501b33db7839a49d3d6eb38" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1aa3c78c8d7501b33db7839a49d3d6eb38" kindref="member">SDL_CreateSystemCursor</ref>(<ref refid="_s_d_l__mouse_8h_1a3e8083d1d8ce4c5a1ba76bfc2be8e732" kindref="member">SDL_SystemCursor</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="_s_d_l__mouse_8h_1a7c2971901f9a772be22152420aee275c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a7c2971901f9a772be22152420aee275c" kindref="member">SDL_SetCursor</ref>(<ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref><sp/>*<sp/>cursor);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="_s_d_l__mouse_8h_1a98d7b811cebffcdd9afb3b65288d715c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a98d7b811cebffcdd9afb3b65288d715c" kindref="member">SDL_GetCursor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="_s_d_l__mouse_8h_1a395cc3d18523a9240cb132f1c5d0034a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a395cc3d18523a9240cb132f1c5d0034a" kindref="member">SDL_GetDefaultCursor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="_s_d_l__mouse_8h_1ac17a8282f93d9d31e8e087236f0ecdd8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1ac17a8282f93d9d31e8e087236f0ecdd8" kindref="member">SDL_FreeCursor</ref>(<ref refid="_s_d_l__mouse_8h_1a63b6e9cd23bbe26b8fa00dc8fba7623d" kindref="member">SDL_Cursor</ref><sp/>*<sp/>cursor);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="_s_d_l__mouse_8h_1a00286ec15cd56dee1fd71ed4e6e7a585" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__mouse_8h_1a00286ec15cd56dee1fd71ed4e6e7a585" kindref="member">SDL_ShowCursor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>toggle);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="_s_d_l__mouse_8h_1af1bb0dead027146b766e4e319e22ea7b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>((X)-1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="_s_d_l__mouse_8h_1a9500bda83bcc0e9afee1438a79019c5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_LEFT<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="_s_d_l__mouse_8h_1a4d7543e668502bbb75d045d8097fb8f3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_MIDDLE<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="_s_d_l__mouse_8h_1a63fcfb473ee5e5da3752e1cf75f12286" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_RIGHT<sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="_s_d_l__mouse_8h_1a1422ab75c7388bb5047028103a6df550" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_X1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="_s_d_l__mouse_8h_1a2ae4ae2fe944879dc9ef6b16155d52e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_X2<sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="_s_d_l__mouse_8h_1ad9ccef8108b6a1704a49ab93a91d2c47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_LMASK<sp/><sp/><sp/><sp/>SDL_BUTTON(SDL_BUTTON_LEFT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="_s_d_l__mouse_8h_1ad90dffab11146e0eb9f2e28267e6fbbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_MMASK<sp/><sp/><sp/><sp/>SDL_BUTTON(SDL_BUTTON_MIDDLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="_s_d_l__mouse_8h_1aefa6805c2113f16e659edcde5172b5df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_RMASK<sp/><sp/><sp/><sp/>SDL_BUTTON(SDL_BUTTON_RIGHT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="_s_d_l__mouse_8h_1aee13129df2cc50d4a16c4fe7652737a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_X1MASK<sp/><sp/><sp/>SDL_BUTTON(SDL_BUTTON_X1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="_s_d_l__mouse_8h_1afb0dfebdfec877410feb8800cfd7e443" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_BUTTON_X2MASK<sp/><sp/><sp/>SDL_BUTTON(SDL_BUTTON_X2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_mouse_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_mouse.h"/>
  </compounddef>
</doxygen>
