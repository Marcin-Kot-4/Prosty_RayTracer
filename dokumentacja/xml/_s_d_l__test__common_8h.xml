<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__test__common_8h" kind="file" language="C++">
    <compoundname>SDL_test_common.h</compoundname>
    <includes refid="_s_d_l_8h" local="yes">SDL.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l__test_8h" local="yes">D:/RayTracing/include/SDL_test.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SDL_assert.h</label>
        <link refid="_s_d_l__assert_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SDL_atomic.h</label>
        <link refid="_s_d_l__atomic_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SDL_audio.h</label>
        <link refid="_s_d_l__audio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>SDL_blendmode.h</label>
        <link refid="_s_d_l__blendmode_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>SDL_clipboard.h</label>
        <link refid="_s_d_l__clipboard_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>SDL_cpuinfo.h</label>
        <link refid="_s_d_l__cpuinfo_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>SDL_endian.h</label>
        <link refid="_s_d_l__endian_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SDL_error.h</label>
        <link refid="_s_d_l__error_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>SDL_events.h</label>
        <link refid="_s_d_l__events_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>SDL_filesystem.h</label>
        <link refid="_s_d_l__filesystem_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>SDL_gamecontroller.h</label>
        <link refid="_s_d_l__gamecontroller_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>SDL_gesture.h</label>
        <link refid="_s_d_l__gesture_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>SDL_haptic.h</label>
        <link refid="_s_d_l__haptic_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>SDL_hidapi.h</label>
        <link refid="_s_d_l__hidapi_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>SDL_hints.h</label>
        <link refid="_s_d_l__hints_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>SDL_joystick.h</label>
        <link refid="_s_d_l__joystick_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>SDL_keyboard.h</label>
        <link refid="_s_d_l__keyboard_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>SDL_keycode.h</label>
        <link refid="_s_d_l__keycode_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>SDL_loadso.h</label>
        <link refid="_s_d_l__loadso_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>SDL_locale.h</label>
        <link refid="_s_d_l__locale_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>SDL_log.h</label>
        <link refid="_s_d_l__log_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SDL_main.h</label>
        <link refid="_s_d_l__main_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>SDL_messagebox.h</label>
        <link refid="_s_d_l__messagebox_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>SDL_metal.h</label>
        <link refid="_s_d_l__metal_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>SDL_misc.h</label>
        <link refid="_s_d_l__misc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>SDL_mouse.h</label>
        <link refid="_s_d_l__mouse_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>SDL_mutex.h</label>
        <link refid="_s_d_l__mutex_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>SDL_pixels.h</label>
        <link refid="_s_d_l__pixels_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>SDL_power.h</label>
        <link refid="_s_d_l__power_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>SDL_quit.h</label>
        <link refid="_s_d_l__quit_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>SDL_rect.h</label>
        <link refid="_s_d_l__rect_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>SDL_render.h</label>
        <link refid="_s_d_l__render_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>SDL_rwops.h</label>
        <link refid="_s_d_l__rwops_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>SDL_scancode.h</label>
        <link refid="_s_d_l__scancode_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>SDL_sensor.h</label>
        <link refid="_s_d_l__sensor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>SDL_shape.h</label>
        <link refid="_s_d_l__shape_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>SDL_surface.h</label>
        <link refid="_s_d_l__surface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>SDL_system.h</label>
        <link refid="_s_d_l__system_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>SDL_thread.h</label>
        <link refid="_s_d_l__thread_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>SDL_timer.h</label>
        <link refid="_s_d_l__timer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>SDL_touch.h</label>
        <link refid="_s_d_l__touch_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>SDL_version.h</label>
        <link refid="_s_d_l__version_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>SDL_video.h</label>
        <link refid="_s_d_l__video_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="8">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="10">
        <label>stdarg.h</label>
      </node>
      <node id="9">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_s_d_l_test___common_state" prot="public">SDLTest_CommonState</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_l__test__common_8h_1a6ca4df6b9e1495a80a2929a5187cb9b9" prot="public" static="no">
        <name>DEFAULT_WINDOW_WIDTH</name>
        <initializer>640</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="44" column="10" bodyfile="D:/RayTracing/include/SDL_test_common.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__test__common_8h_1a030ebc610fddb0a18d62829ab376bf85" prot="public" static="no">
        <name>DEFAULT_WINDOW_HEIGHT</name>
        <initializer>480</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="45" column="9" bodyfile="D:/RayTracing/include/SDL_test_common.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__test__common_8h_1ab5d2ba75c3cd702f1a269c406902ddcb" prot="public" static="no">
        <name>VERBOSE_VIDEO</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="48" column="9" bodyfile="D:/RayTracing/include/SDL_test_common.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__test__common_8h_1a3a535ac3889907ff97e556a3cae117cc" prot="public" static="no">
        <name>VERBOSE_MODES</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="49" column="9" bodyfile="D:/RayTracing/include/SDL_test_common.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__test__common_8h_1a7bdcd39423e8261d05407ab758feb037" prot="public" static="no">
        <name>VERBOSE_RENDER</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="50" column="9" bodyfile="D:/RayTracing/include/SDL_test_common.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__test__common_8h_1a3e5a47c9aaa54a2b134b0066f48b4e0c" prot="public" static="no">
        <name>VERBOSE_EVENT</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="51" column="9" bodyfile="D:/RayTracing/include/SDL_test_common.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__test__common_8h_1ab607cbf4694150235976fc1ef6e68387" prot="public" static="no">
        <name>VERBOSE_AUDIO</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="52" column="9" bodyfile="D:/RayTracing/include/SDL_test_common.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_l__test__common_8h_1a5a4834fbafe98dbe44df0c56b1848132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref> *</type>
        <definition>SDLTest_CommonState * SDLTest_CommonCreateState</definition>
        <argsstring>(char **argv, Uint32 flags)</argsstring>
        <name>SDLTest_CommonCreateState</name>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Parse command line parameters and create common state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of command line parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags indicating which subsystem to initialize (i.e. SDL_INIT_VIDEO | SDL_INIT_AUDIO)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a newly allocated common state object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="139" column="21" declfile="D:/RayTracing/include/SDL_test_common.h" declline="139" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__common_8h_1a6ffe001ae2299720a92b80812dbc48b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SDLTest_CommonArg</definition>
        <argsstring>(SDLTest_CommonState *state, int index)</argsstring>
        <name>SDLTest_CommonArg</name>
        <param>
          <type><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Process one common argument. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The common state describing the test window to create. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the argument to process in argv[].</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of arguments processed (i.e. 1 for <ndash/>fullscreen, 2 for <ndash/>video [videodriver], or -1 on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="149" column="5" declfile="D:/RayTracing/include/SDL_test_common.h" declline="149" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__common_8h_1aa048e9175cca826d9dbd6c5d72284e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        <definition>void SDLTest_CommonLogUsage</definition>
        <argsstring>(SDLTest_CommonState *state, const char *argv0, const char **options)</argsstring>
        <name>SDLTest_CommonLogUsage</name>
        <param>
          <type><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>argv0</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Logs command line usage info. </para>
        </briefdescription>
        <detaileddescription>
<para>This logs the appropriate command line options for the subsystems in use plus other common options, and then any application-specific options. This uses the <ref refid="_s_d_l__log_8h_1a712dc42164c67b7f9e23dc0e3b15bd92" kindref="member">SDL_Log()</ref> function and splits up output to be friendly to 80-character-wide terminals.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The common state describing the test window for the app. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv0</parametername>
</parameternamelist>
<parameterdescription>
<para>argv[0], as passed to main/SDL_main. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of strings for application specific options. The last element of the array should be NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="164" column="6" declfile="D:/RayTracing/include/SDL_test_common.h" declline="164" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__common_8h_1ad5d87db3b58b35581f99e41540512c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * SDLTest_CommonUsage</definition>
        <argsstring>(SDLTest_CommonState *state)</argsstring>
        <name>SDLTest_CommonUsage</name>
        <param>
          <type><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Returns common usage information. </para>
        </briefdescription>
        <detaileddescription>
<para>You should (probably) be using <ref refid="_s_d_l__test__common_8h_1aa048e9175cca826d9dbd6c5d72284e38" kindref="member">SDLTest_CommonLogUsage()</ref> instead, but this function remains for binary compatibility. Strings returned from this function are valid until <ref refid="_s_d_l__test__common_8h_1a2d24c255140a7e90c753eb363ef4d96e" kindref="member">SDLTest_CommonQuit()</ref> is called, in which case those strings&apos; memory is freed and can no longer be used.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The common state describing the test window to create. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string with usage information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="177" column="12" declfile="D:/RayTracing/include/SDL_test_common.h" declline="177" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__common_8h_1a7405405819a77e317a1edda6be974187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
        <definition>SDL_bool SDLTest_CommonInit</definition>
        <argsstring>(SDLTest_CommonState *state)</argsstring>
        <name>SDLTest_CommonInit</name>
        <param>
          <type><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Open test window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The common state describing the test window to create.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if initialization succeeded, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="186" column="10" declfile="D:/RayTracing/include/SDL_test_common.h" declline="186" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__common_8h_1a39a960ca01f07491d42008a137db6f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
        <definition>SDL_bool SDLTest_CommonDefaultArgs</definition>
        <argsstring>(SDLTest_CommonState *state, const int argc, char **argv)</argsstring>
        <name>SDLTest_CommonDefaultArgs</name>
        <param>
          <type><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Easy argument handling when test app doesn&apos;t need any custom args. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The common state describing the test window to create. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>argc, as supplied to SDL_main </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>argv, as supplied to SDL_main</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_FALSE if app should quit, true otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="197" column="10" declfile="D:/RayTracing/include/SDL_test_common.h" declline="197" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__common_8h_1a5fb0eb864d62d6d9f6d932c9abccd1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        <definition>void SDLTest_CommonEvent</definition>
        <argsstring>(SDLTest_CommonState *state, SDL_Event *event, int *done)</argsstring>
        <name>SDLTest_CommonEvent</name>
        <param>
          <type><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="union_s_d_l___event" kindref="compound">SDL_Event</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>done</declname>
        </param>
        <briefdescription>
<para>Common event handler for test windows. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The common state used to create test window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>done</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating we are done. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="207" column="6" declfile="D:/RayTracing/include/SDL_test_common.h" declline="207" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__common_8h_1a2d24c255140a7e90c753eb363ef4d96e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        <definition>void SDLTest_CommonQuit</definition>
        <argsstring>(SDLTest_CommonState *state)</argsstring>
        <name>SDLTest_CommonQuit</name>
        <param>
          <type><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Close test window. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The common state used to create test window. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="215" column="6" declfile="D:/RayTracing/include/SDL_test_common.h" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__test__common_8h_1a2ec5c6d6329602f002d441de8edfdad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        <definition>void SDLTest_CommonDrawWindowInfo</definition>
        <argsstring>(SDL_Renderer *renderer, SDL_Window *window, int *usedHeight)</argsstring>
        <name>SDLTest_CommonDrawWindowInfo</name>
        <param>
          <type><ref refid="_s_d_l__render_8h_1aaf0bf7d020754fc614fe06552ea4d5d4" kindref="member">SDL_Renderer</ref> *</type>
          <declname>renderer</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>usedHeight</declname>
        </param>
        <briefdescription>
<para>Draws various window information (position, size, etc.) to the renderer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>renderer</parametername>
</parameternamelist>
<parameterdescription>
<para>The renderer to draw to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window whose information should be displayed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usedHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>Returns the height used, so the caller can draw more below. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_test_common.h" line="225" column="6" declfile="D:/RayTracing/include/SDL_test_common.h" declline="225" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Include file for SDL test framework.</para>
<para>This code is a part of the SDL2_test library, not the main SDL library. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ported<sp/>from<sp/>original<sp/>test\common.h<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_test_common_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_test_common_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l_8h" kindref="compound">SDL.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__PSP__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_WINDOW_WIDTH<sp/><sp/>480</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_WINDOW_HEIGHT<sp/>272</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__VITA__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_WINDOW_WIDTH<sp/><sp/>960</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_WINDOW_HEIGHT<sp/>544</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="_s_d_l__test__common_8h_1a6ca4df6b9e1495a80a2929a5187cb9b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_WINDOW_WIDTH<sp/><sp/>640</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_s_d_l__test__common_8h_1a030ebc610fddb0a18d62829ab376bf85" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_WINDOW_HEIGHT<sp/>480</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="_s_d_l__test__common_8h_1ab5d2ba75c3cd702f1a269c406902ddcb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE_VIDEO<sp/><sp/><sp/>0x00000001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_s_d_l__test__common_8h_1a3a535ac3889907ff97e556a3cae117cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE_MODES<sp/><sp/><sp/>0x00000002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="_s_d_l__test__common_8h_1a7bdcd39423e8261d05407ab758feb037" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE_RENDER<sp/><sp/>0x00000004</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_s_d_l__test__common_8h_1a3e5a47c9aaa54a2b134b0066f48b4e0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE_EVENT<sp/><sp/><sp/>0x00000008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="_s_d_l__test__common_8h_1ab607cbf4694150235976fc1ef6e68387" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE_AUDIO<sp/><sp/><sp/>0x00000010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="struct_s_d_l_test___common_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SDL<sp/>init<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="struct_s_d_l_test___common_state_1a6db840410b86ab7c6807763fd8bcb081" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="struct_s_d_l_test___common_state_1a6db840410b86ab7c6807763fd8bcb081" kindref="member">argv</ref>;</highlight></codeline>
<codeline lineno="58" refid="struct_s_d_l_test___common_state_1a97272d03558f1f74e579ec8a5cdabc5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l_test___common_state_1a97272d03558f1f74e579ec8a5cdabc5e" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="59" refid="struct_s_d_l_test___common_state_1aad4b8ebf6277cd9d3608d2e1b48e4678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l_test___common_state_1aad4b8ebf6277cd9d3608d2e1b48e4678" kindref="member">verbose</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Video<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="struct_s_d_l_test___common_state_1ab3face917946465c60dc0f38f179534d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_s_d_l_test___common_state_1ab3face917946465c60dc0f38f179534d" kindref="member">videodriver</ref>;</highlight></codeline>
<codeline lineno="63" refid="struct_s_d_l_test___common_state_1addb3de8e2b278deed8d2309bafd30758" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1addb3de8e2b278deed8d2309bafd30758" kindref="member">display</ref>;</highlight></codeline>
<codeline lineno="64" refid="struct_s_d_l_test___common_state_1a86640ebac0afe0c504c3c324d84dcc37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_s_d_l_test___common_state_1a86640ebac0afe0c504c3c324d84dcc37" kindref="member">window_title</ref>;</highlight></codeline>
<codeline lineno="65" refid="struct_s_d_l_test___common_state_1ac9e981b2b60a59f995153c74242d9d43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_s_d_l_test___common_state_1ac9e981b2b60a59f995153c74242d9d43" kindref="member">window_icon</ref>;</highlight></codeline>
<codeline lineno="66" refid="struct_s_d_l_test___common_state_1a9e38339b34b483087ff8d52d44a80809" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l_test___common_state_1a9e38339b34b483087ff8d52d44a80809" kindref="member">window_flags</ref>;</highlight></codeline>
<codeline lineno="67" refid="struct_s_d_l_test___common_state_1a9a2f378b9d27573757c371dfdf684942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="struct_s_d_l_test___common_state_1a9a2f378b9d27573757c371dfdf684942" kindref="member">flash_on_focus_loss</ref>;</highlight></codeline>
<codeline lineno="68" refid="struct_s_d_l_test___common_state_1a5413ab562164642b3e6ee97ab5d938bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a5413ab562164642b3e6ee97ab5d938bf" kindref="member">window_x</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct_s_d_l_test___common_state_1a1fcd61cbe37c2bb563e7b2f1c6853d29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a1fcd61cbe37c2bb563e7b2f1c6853d29" kindref="member">window_y</ref>;</highlight></codeline>
<codeline lineno="70" refid="struct_s_d_l_test___common_state_1adc94ae1febd2aa3fa4b190cd0f8cb546" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1adc94ae1febd2aa3fa4b190cd0f8cb546" kindref="member">window_w</ref>;</highlight></codeline>
<codeline lineno="71" refid="struct_s_d_l_test___common_state_1a9357085bdb80f4d9452b73d8f5cebc47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a9357085bdb80f4d9452b73d8f5cebc47" kindref="member">window_h</ref>;</highlight></codeline>
<codeline lineno="72" refid="struct_s_d_l_test___common_state_1a34b3dccdaec98232fa01274d6842f534" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a34b3dccdaec98232fa01274d6842f534" kindref="member">window_minW</ref>;</highlight></codeline>
<codeline lineno="73" refid="struct_s_d_l_test___common_state_1a918001b474c4ca034db3e1aba96df7c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a918001b474c4ca034db3e1aba96df7c1" kindref="member">window_minH</ref>;</highlight></codeline>
<codeline lineno="74" refid="struct_s_d_l_test___common_state_1acecd147641f8d6a0f137e669bbe5c48b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1acecd147641f8d6a0f137e669bbe5c48b" kindref="member">window_maxW</ref>;</highlight></codeline>
<codeline lineno="75" refid="struct_s_d_l_test___common_state_1a0f792d6f2c15c60567bc4641e9f44f70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a0f792d6f2c15c60567bc4641e9f44f70" kindref="member">window_maxH</ref>;</highlight></codeline>
<codeline lineno="76" refid="struct_s_d_l_test___common_state_1a8a90266f8d6dc7846fbd3368426caec1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a8a90266f8d6dc7846fbd3368426caec1" kindref="member">logical_w</ref>;</highlight></codeline>
<codeline lineno="77" refid="struct_s_d_l_test___common_state_1af2ba89b260406782607ad1dd22676a5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1af2ba89b260406782607ad1dd22676a5b" kindref="member">logical_h</ref>;</highlight></codeline>
<codeline lineno="78" refid="struct_s_d_l_test___common_state_1ad2d2821689008f2fd65034eb8040fb3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1ad2d2821689008f2fd65034eb8040fb3c" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="79" refid="struct_s_d_l_test___common_state_1a6ab7d5f81b55c29594f9ba3e018632fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a6ab7d5f81b55c29594f9ba3e018632fe" kindref="member">depth</ref>;</highlight></codeline>
<codeline lineno="80" refid="struct_s_d_l_test___common_state_1a7a2505f4f99be07db7bc76743ac6b5f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a7a2505f4f99be07db7bc76743ac6b5f9" kindref="member">refresh_rate</ref>;</highlight></codeline>
<codeline lineno="81" refid="struct_s_d_l_test___common_state_1a4f8020400392b1ae374c066b45a56538" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a4f8020400392b1ae374c066b45a56538" kindref="member">num_windows</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct_s_d_l_test___common_state_1a0a054f0c45eb9d21f9561d701e721106" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>**<ref refid="struct_s_d_l_test___common_state_1a0a054f0c45eb9d21f9561d701e721106" kindref="member">windows</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Renderer<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="struct_s_d_l_test___common_state_1ad63f8a231467f2aad4494220b3bb3752" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_s_d_l_test___common_state_1ad63f8a231467f2aad4494220b3bb3752" kindref="member">renderdriver</ref>;</highlight></codeline>
<codeline lineno="86" refid="struct_s_d_l_test___common_state_1a71e8797902cdb8f5c621ddcaf37d7e35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l_test___common_state_1a71e8797902cdb8f5c621ddcaf37d7e35" kindref="member">render_flags</ref>;</highlight></codeline>
<codeline lineno="87" refid="struct_s_d_l_test___common_state_1a41527c9f496fb3326802de595aa0f306" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="struct_s_d_l_test___common_state_1a41527c9f496fb3326802de595aa0f306" kindref="member">skip_renderer</ref>;</highlight></codeline>
<codeline lineno="88" refid="struct_s_d_l_test___common_state_1aeb35b7f12f63256c92a9813e682043c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__render_8h_1aaf0bf7d020754fc614fe06552ea4d5d4" kindref="member">SDL_Renderer</ref><sp/>**<ref refid="struct_s_d_l_test___common_state_1aeb35b7f12f63256c92a9813e682043c1" kindref="member">renderers</ref>;</highlight></codeline>
<codeline lineno="89" refid="struct_s_d_l_test___common_state_1a3fcf7d8f0f8d2f2351a75b5966cf9fe4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__render_8h_1a17850d7f1f5de457727cb3cf66b3a7f5" kindref="member">SDL_Texture</ref><sp/>**<ref refid="struct_s_d_l_test___common_state_1a3fcf7d8f0f8d2f2351a75b5966cf9fe4" kindref="member">targets</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Audio<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="struct_s_d_l_test___common_state_1ae51671cdec7979ca844f19b650b75300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_s_d_l_test___common_state_1ae51671cdec7979ca844f19b650b75300" kindref="member">audiodriver</ref>;</highlight></codeline>
<codeline lineno="93" refid="struct_s_d_l_test___common_state_1a2f73162e6bfe149141192fa49717d805" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___audio_spec" kindref="compound">SDL_AudioSpec</ref><sp/><ref refid="struct_s_d_l_test___common_state_1a2f73162e6bfe149141192fa49717d805" kindref="member">audiospec</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GL<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="struct_s_d_l_test___common_state_1a33772305944410d726908efb5e0663ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a33772305944410d726908efb5e0663ce" kindref="member">gl_red_size</ref>;</highlight></codeline>
<codeline lineno="97" refid="struct_s_d_l_test___common_state_1a716c97e5b80ee96018b014afec2d19ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a716c97e5b80ee96018b014afec2d19ff" kindref="member">gl_green_size</ref>;</highlight></codeline>
<codeline lineno="98" refid="struct_s_d_l_test___common_state_1aff43a763af98b8eb651c41ec931e5d93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1aff43a763af98b8eb651c41ec931e5d93" kindref="member">gl_blue_size</ref>;</highlight></codeline>
<codeline lineno="99" refid="struct_s_d_l_test___common_state_1a2b6e86fd695d84f12db148dcf3b2fcb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a2b6e86fd695d84f12db148dcf3b2fcb5" kindref="member">gl_alpha_size</ref>;</highlight></codeline>
<codeline lineno="100" refid="struct_s_d_l_test___common_state_1a7e7ea32a3ba51db836b3aa7f31163921" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a7e7ea32a3ba51db836b3aa7f31163921" kindref="member">gl_buffer_size</ref>;</highlight></codeline>
<codeline lineno="101" refid="struct_s_d_l_test___common_state_1a9a16800e0ec09d4b9b55e9e6bb973abc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a9a16800e0ec09d4b9b55e9e6bb973abc" kindref="member">gl_depth_size</ref>;</highlight></codeline>
<codeline lineno="102" refid="struct_s_d_l_test___common_state_1af27830ef5d5ed9cc8e90088a69f4d78f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1af27830ef5d5ed9cc8e90088a69f4d78f" kindref="member">gl_stencil_size</ref>;</highlight></codeline>
<codeline lineno="103" refid="struct_s_d_l_test___common_state_1a74c88cb0dcd1e968db763152e0b1e068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a74c88cb0dcd1e968db763152e0b1e068" kindref="member">gl_double_buffer</ref>;</highlight></codeline>
<codeline lineno="104" refid="struct_s_d_l_test___common_state_1ae9d55cebbc3f4e486f4f77a35de4e4dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1ae9d55cebbc3f4e486f4f77a35de4e4dd" kindref="member">gl_accum_red_size</ref>;</highlight></codeline>
<codeline lineno="105" refid="struct_s_d_l_test___common_state_1a4c20729a710f51ed67bdd1910da1a16b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a4c20729a710f51ed67bdd1910da1a16b" kindref="member">gl_accum_green_size</ref>;</highlight></codeline>
<codeline lineno="106" refid="struct_s_d_l_test___common_state_1a3d23ac90e722af5098e7869a7302c119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a3d23ac90e722af5098e7869a7302c119" kindref="member">gl_accum_blue_size</ref>;</highlight></codeline>
<codeline lineno="107" refid="struct_s_d_l_test___common_state_1ab6dddf75a40c53343199fe724a2af32b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1ab6dddf75a40c53343199fe724a2af32b" kindref="member">gl_accum_alpha_size</ref>;</highlight></codeline>
<codeline lineno="108" refid="struct_s_d_l_test___common_state_1a39177b165c6a9c2164937c82402e2d4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a39177b165c6a9c2164937c82402e2d4f" kindref="member">gl_stereo</ref>;</highlight></codeline>
<codeline lineno="109" refid="struct_s_d_l_test___common_state_1a083f7381809b23f0ac3a9a8de562f70c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a083f7381809b23f0ac3a9a8de562f70c" kindref="member">gl_multisamplebuffers</ref>;</highlight></codeline>
<codeline lineno="110" refid="struct_s_d_l_test___common_state_1a96718b47862d4962e4a7ae9a62ce4a30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a96718b47862d4962e4a7ae9a62ce4a30" kindref="member">gl_multisamplesamples</ref>;</highlight></codeline>
<codeline lineno="111" refid="struct_s_d_l_test___common_state_1a5fa59e7aa6210fcde02940536eea9c12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a5fa59e7aa6210fcde02940536eea9c12" kindref="member">gl_retained_backing</ref>;</highlight></codeline>
<codeline lineno="112" refid="struct_s_d_l_test___common_state_1a2dca523be403a9ff6fe2dd7b1808baba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a2dca523be403a9ff6fe2dd7b1808baba" kindref="member">gl_accelerated</ref>;</highlight></codeline>
<codeline lineno="113" refid="struct_s_d_l_test___common_state_1a766e471516e0a39d0bb8c14ea2042bdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a766e471516e0a39d0bb8c14ea2042bdf" kindref="member">gl_major_version</ref>;</highlight></codeline>
<codeline lineno="114" refid="struct_s_d_l_test___common_state_1a5a50c65004454c791da21a3473388608" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a5a50c65004454c791da21a3473388608" kindref="member">gl_minor_version</ref>;</highlight></codeline>
<codeline lineno="115" refid="struct_s_d_l_test___common_state_1a2710657ef2a0c8aabebc5fceb01c71b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1a2710657ef2a0c8aabebc5fceb01c71b5" kindref="member">gl_debug</ref>;</highlight></codeline>
<codeline lineno="116" refid="struct_s_d_l_test___common_state_1aa923ff5f227c35523a4e491863a7d907" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l_test___common_state_1aa923ff5f227c35523a4e491863a7d907" kindref="member">gl_profile_mask</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Additional<sp/>fields<sp/>added<sp/>in<sp/>2.0.18<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="struct_s_d_l_test___common_state_1a501eff715371dedcff65da16b43b62be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref><sp/><ref refid="struct_s_d_l_test___common_state_1a501eff715371dedcff65da16b43b62be" kindref="member">confine</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}<sp/><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="_s_d_l__test__common_8h_1a5a4834fbafe98dbe44df0c56b1848132" refkind="member"><highlight class="normal"><ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref><sp/>*<ref refid="_s_d_l__test__common_8h_1a5a4834fbafe98dbe44df0c56b1848132" kindref="member">SDLTest_CommonCreateState</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="_s_d_l__test__common_8h_1a6ffe001ae2299720a92b80812dbc48b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__common_8h_1a6ffe001ae2299720a92b80812dbc48b9" kindref="member">SDLTest_CommonArg</ref>(<ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref><sp/>*<sp/>state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="_s_d_l__test__common_8h_1aa048e9175cca826d9dbd6c5d72284e38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__common_8h_1aa048e9175cca826d9dbd6c5d72284e38" kindref="member">SDLTest_CommonLogUsage</ref>(<ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref><sp/>*<sp/>state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**options);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="_s_d_l__test__common_8h_1ad5d87db3b58b35581f99e41540512c69" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__test__common_8h_1ad5d87db3b58b35581f99e41540512c69" kindref="member">SDLTest_CommonUsage</ref>(<ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref><sp/>*<sp/>state);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="_s_d_l__test__common_8h_1a7405405819a77e317a1edda6be974187" refkind="member"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="_s_d_l__test__common_8h_1a7405405819a77e317a1edda6be974187" kindref="member">SDLTest_CommonInit</ref>(<ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref><sp/>*<sp/>state);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="_s_d_l__test__common_8h_1a39a960ca01f07491d42008a137db6f1c" refkind="member"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="_s_d_l__test__common_8h_1a39a960ca01f07491d42008a137db6f1c" kindref="member">SDLTest_CommonDefaultArgs</ref>(<ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref><sp/>*<sp/>state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="_s_d_l__test__common_8h_1a5fb0eb864d62d6d9f6d932c9abccd1f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__common_8h_1a5fb0eb864d62d6d9f6d932c9abccd1f4" kindref="member">SDLTest_CommonEvent</ref>(<ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref><sp/>*<sp/>state,<sp/><ref refid="union_s_d_l___event" kindref="compound">SDL_Event</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a03b04a5a978bad576866339075de01f6" kindref="member">event</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*done);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="_s_d_l__test__common_8h_1a2d24c255140a7e90c753eb363ef4d96e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__common_8h_1a2d24c255140a7e90c753eb363ef4d96e" kindref="member">SDLTest_CommonQuit</ref>(<ref refid="struct_s_d_l_test___common_state" kindref="compound">SDLTest_CommonState</ref><sp/>*<sp/>state);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="_s_d_l__test__common_8h_1a2ec5c6d6329602f002d441de8edfdad2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__test__common_8h_1a2ec5c6d6329602f002d441de8edfdad2" kindref="member">SDLTest_CommonDrawWindowInfo</ref>(<ref refid="_s_d_l__render_8h_1aaf0bf7d020754fc614fe06552ea4d5d4" kindref="member">SDL_Renderer</ref><sp/>*<sp/>renderer,<sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>usedHeight);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_test_common_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_test_common.h"/>
  </compounddef>
</doxygen>
