<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__haptic_8h" kind="file" language="C++">
    <compoundname>SDL_haptic.h</compoundname>
    <includes refid="_s_d_l__stdinc_8h" local="yes">SDL_stdinc.h</includes>
    <includes refid="_s_d_l__error_8h" local="yes">SDL_error.h</includes>
    <includes refid="_s_d_l__joystick_8h" local="yes">SDL_joystick.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l_8h" local="yes">D:/RayTracing/include/SDL.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SDL_error.h</label>
        <link refid="_s_d_l__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_haptic.h</label>
        <link refid="_s_d_l__haptic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SDL_joystick.h</label>
        <link refid="_s_d_l__joystick_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="6">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="3">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="6">
        <label>D:/RayTracing/RayTrace/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/include/SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_haptic.h</label>
        <link refid="_s_d_l__haptic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="13">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/RayTracing/include/SDL_test_compare.h</label>
        <link refid="_s_d_l__test__compare_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>D:/RayTracing/include/SDL_test_images.h</label>
        <link refid="_s_d_l__test__images_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_s_d_l___haptic_direction" prot="public">SDL_HapticDirection</innerclass>
    <innerclass refid="struct_s_d_l___haptic_constant" prot="public">SDL_HapticConstant</innerclass>
    <innerclass refid="struct_s_d_l___haptic_periodic" prot="public">SDL_HapticPeriodic</innerclass>
    <innerclass refid="struct_s_d_l___haptic_condition" prot="public">SDL_HapticCondition</innerclass>
    <innerclass refid="struct_s_d_l___haptic_ramp" prot="public">SDL_HapticRamp</innerclass>
    <innerclass refid="struct_s_d_l___haptic_left_right" prot="public">SDL_HapticLeftRight</innerclass>
    <innerclass refid="struct_s_d_l___haptic_custom" prot="public">SDL_HapticCustom</innerclass>
    <innerclass refid="union_s_d_l___haptic_effect" prot="public">SDL_HapticEffect</innerclass>
      <sectiondef kind="user-defined">
      <header>Haptic effects</header>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a955fb9f680dcf9cc72a3d5263e85b80a" prot="public" static="no">
        <name>SDL_HAPTIC_CONSTANT</name>
        <initializer>(1u&lt;&lt;0)</initializer>
        <briefdescription>
<para>Constant effect supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Constant haptic effect.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="163" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1aa6d75adbfcdda5075078e7a2849da5c0" prot="public" static="no">
        <name>SDL_HAPTIC_SINE</name>
        <initializer>(1u&lt;&lt;1)</initializer>
        <briefdescription>
<para>Sine wave effect supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Periodic haptic effect that simulates sine waves.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_periodic" kindref="compound">SDL_HapticPeriodic</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="172" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1ae047624d8458ff6400887c37a36f86d3" prot="public" static="no">
        <name>SDL_HAPTIC_LEFTRIGHT</name>
        <initializer>(1u&lt;&lt;2)</initializer>
        <briefdescription>
<para>Left/Right effect supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Haptic effect for direct control over high/low frequency motors.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_left_right" kindref="compound">SDL_HapticLeftRight</ref> </para>
</simplesect>
<simplesect kind="warning"><para>this value was SDL_HAPTIC_SQUARE right before 2.0.0 shipped. Sorry, we ran out of bits, and this is important for XInput devices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="183" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1ae8123eaa51511507375ba6ef9220fa46" prot="public" static="no">
        <name>SDL_HAPTIC_TRIANGLE</name>
        <initializer>(1u&lt;&lt;3)</initializer>
        <briefdescription>
<para>Triangle wave effect supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Periodic haptic effect that simulates triangular waves.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_periodic" kindref="compound">SDL_HapticPeriodic</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="195" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1ab8e3f40f3c2bcee8905d13b634363c3f" prot="public" static="no">
        <name>SDL_HAPTIC_SAWTOOTHUP</name>
        <initializer>(1u&lt;&lt;4)</initializer>
        <briefdescription>
<para>Sawtoothup wave effect supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Periodic haptic effect that simulates saw tooth up waves.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_periodic" kindref="compound">SDL_HapticPeriodic</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="204" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1afd64aa747034a7ccf4b55f6246525701" prot="public" static="no">
        <name>SDL_HAPTIC_SAWTOOTHDOWN</name>
        <initializer>(1u&lt;&lt;5)</initializer>
        <briefdescription>
<para>Sawtoothdown wave effect supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Periodic haptic effect that simulates saw tooth down waves.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_periodic" kindref="compound">SDL_HapticPeriodic</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="213" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1af10eb937a64a8f602e9c46682ac0d868" prot="public" static="no">
        <name>SDL_HAPTIC_RAMP</name>
        <initializer>(1u&lt;&lt;6)</initializer>
        <briefdescription>
<para>Ramp effect supported. </para>
        </briefdescription>
        <detaileddescription>
<para>Ramp haptic effect.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_ramp" kindref="compound">SDL_HapticRamp</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="222" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a3b52d4700380085e2b5d87bb20320fb1" prot="public" static="no">
        <name>SDL_HAPTIC_SPRING</name>
        <initializer>(1u&lt;&lt;7)</initializer>
        <briefdescription>
<para>Spring effect supported - uses axes position. </para>
        </briefdescription>
        <detaileddescription>
<para>Condition haptic effect that simulates a spring. Effect is based on the axes position.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="232" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a69522f261973e3ea4273486141320a87" prot="public" static="no">
        <name>SDL_HAPTIC_DAMPER</name>
        <initializer>(1u&lt;&lt;8)</initializer>
        <briefdescription>
<para>Damper effect supported - uses axes velocity. </para>
        </briefdescription>
        <detaileddescription>
<para>Condition haptic effect that simulates dampening. Effect is based on the axes velocity.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="242" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a14b807471589120395aec28293cf6642" prot="public" static="no">
        <name>SDL_HAPTIC_INERTIA</name>
        <initializer>(1u&lt;&lt;9)</initializer>
        <briefdescription>
<para>Inertia effect supported - uses axes acceleration. </para>
        </briefdescription>
        <detaileddescription>
<para>Condition haptic effect that simulates inertia. Effect is based on the axes acceleration.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="252" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a98a5011311168d63921aaac21403a4d8" prot="public" static="no">
        <name>SDL_HAPTIC_FRICTION</name>
        <initializer>(1u&lt;&lt;10)</initializer>
        <briefdescription>
<para>Friction effect supported - uses axes movement. </para>
        </briefdescription>
        <detaileddescription>
<para>Condition haptic effect that simulates friction. Effect is based on the axes movement.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="262" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a8a18c4de1076ac9bebd718329d16db29" prot="public" static="no">
        <name>SDL_HAPTIC_CUSTOM</name>
        <initializer>(1u&lt;&lt;11)</initializer>
        <briefdescription>
<para>Custom effect is supported. </para>
        </briefdescription>
        <detaileddescription>
<para>User defined custom haptic effect. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="269" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a3afe54582bd5c184109f3f61b6c84c6c" prot="public" static="no">
        <name>SDL_HAPTIC_GAIN</name>
        <initializer>(1u&lt;&lt;12)</initializer>
        <briefdescription>
<para>Device can set global gain. </para>
        </briefdescription>
        <detaileddescription>
<para>Device supports setting the global gain.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a2a90e7cefab3fdecf37e2f1b956a9e73" kindref="member">SDL_HapticSetGain</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="282" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a28aa71e231fbf5b88bce7906bf2f4e70" prot="public" static="no">
        <name>SDL_HAPTIC_AUTOCENTER</name>
        <initializer>(1u&lt;&lt;13)</initializer>
        <briefdescription>
<para>Device can set autocenter. </para>
        </briefdescription>
        <detaileddescription>
<para>Device supports setting autocenter.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a0b0d63aa4513fc1b12939500cb3f8a76" kindref="member">SDL_HapticSetAutocenter</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="291" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1abfbc9fa0d65f4b5632788945080cc71b" prot="public" static="no">
        <name>SDL_HAPTIC_STATUS</name>
        <initializer>(1u&lt;&lt;14)</initializer>
        <briefdescription>
<para>Device can be queried for effect status. </para>
        </briefdescription>
        <detaileddescription>
<para>Device supports querying effect status.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ae2185c0814f107dd5851dd743e9ea71c" kindref="member">SDL_HapticGetEffectStatus</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="300" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a6baee8978ccc97add8457388801d7782" prot="public" static="no">
        <name>SDL_HAPTIC_PAUSE</name>
        <initializer>(1u&lt;&lt;15)</initializer>
        <briefdescription>
<para>Device can be paused. </para>
        </briefdescription>
        <detaileddescription>
<para>Devices supports being paused.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1af0181e59ecd14c6aecd1fd3c5099330a" kindref="member">SDL_HapticPause</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a3593eed87aee3b9caa1c25927002c5ae" kindref="member">SDL_HapticUnpause</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="310" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Direction encodings</header>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1acdc35e97e5525472054a67b76e518f3b" prot="public" static="no">
        <name>SDL_HAPTIC_POLAR</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Uses polar coordinates for the direction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="323" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1af8b2430a363a968de2a5b64c8f663d3b" prot="public" static="no">
        <name>SDL_HAPTIC_CARTESIAN</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Uses cartesian coordinates for the direction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="330" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a1fcf7cb0eaf3c39b16ba266054e25aff" prot="public" static="no">
        <name>SDL_HAPTIC_SPHERICAL</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Uses spherical coordinates for the direction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="337" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a9efacbecc0a1b7a13684ee822b18062c" prot="public" static="no">
        <name>SDL_HAPTIC_STEERING_AXIS</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Use this value to play an effect on the steering wheel axis. This provides better compatibility across platforms and devices as SDL will guess the correct axis. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="345" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__haptic_8h_1a648896e9e14cb27fa8a4b6632d3f3882" prot="public" static="no">
        <name>SDL_HAPTIC_INFINITY</name>
        <initializer>4294967295U</initializer>
        <briefdescription>
<para>Used to play a device an infinite number of times. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" kindref="member">SDL_HapticRunEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="360" column="9" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1a67e1c7124fcd0d6c6bc775ab0758b4ad" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref></type>
        <definition>typedef struct SDL_HapticDirection SDL_HapticDirection</definition>
        <argsstring></argsstring>
        <name>SDL_HapticDirection</name>
        <briefdescription>
<para>Structure that represents a haptic direction. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the direction where the force comes from, instead of the direction in which the force is exerted.</para>
<para>Directions can be specified by:<itemizedlist>
<listitem><para><ref refid="_s_d_l__haptic_8h_1acdc35e97e5525472054a67b76e518f3b" kindref="member">SDL_HAPTIC_POLAR</ref> : Specified by polar coordinates.</para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1af8b2430a363a968de2a5b64c8f663d3b" kindref="member">SDL_HAPTIC_CARTESIAN</ref> : Specified by cartesian coordinates.</para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1a1fcf7cb0eaf3c39b16ba266054e25aff" kindref="member">SDL_HAPTIC_SPHERICAL</ref> : Specified by spherical coordinates.</para>
</listitem></itemizedlist>
</para>
<para>Cardinal directions of the haptic device are relative to the positioning of the device. North is considered to be away from the user.</para>
<para>The following diagram represents the cardinal directions: <verbatim>              .--.
              |__| .-------.
              |=.| |.-----.|
              |--| ||     ||
              |  | |&apos;-----&apos;|
              |__|~&apos;)_____(&apos;
                [ COMPUTER ]


                  North (0,-1)
                      ^
                      |
                      |
(-1,0)  West &lt;----[ HAPTIC ]----&gt; East (1,0)
                      |
                      |
                      v
                   South (0,1)


                   [ USER ]
                     \|||/
                     (o o)
               ---ooO-(_)-Ooo---</verbatim></para>
<para>If type is <ref refid="_s_d_l__haptic_8h_1acdc35e97e5525472054a67b76e518f3b" kindref="member">SDL_HAPTIC_POLAR</ref>, direction is encoded by hundredths of a degree starting north and turning clockwise. <ref refid="_s_d_l__haptic_8h_1acdc35e97e5525472054a67b76e518f3b" kindref="member">SDL_HAPTIC_POLAR</ref> only uses the first <computeroutput>dir</computeroutput> parameter. The cardinal directions would be:<itemizedlist>
<listitem><para>North: 0 (0 degrees)</para>
</listitem><listitem><para>East: 9000 (90 degrees)</para>
</listitem><listitem><para>South: 18000 (180 degrees)</para>
</listitem><listitem><para>West: 27000 (270 degrees)</para>
</listitem></itemizedlist>
</para>
<para>If type is <ref refid="_s_d_l__haptic_8h_1af8b2430a363a968de2a5b64c8f663d3b" kindref="member">SDL_HAPTIC_CARTESIAN</ref>, direction is encoded by three positions (X axis, Y axis and Z axis (with 3 axes)). <ref refid="_s_d_l__haptic_8h_1af8b2430a363a968de2a5b64c8f663d3b" kindref="member">SDL_HAPTIC_CARTESIAN</ref> uses the first three <computeroutput>dir</computeroutput> parameters. The cardinal directions would be:<itemizedlist>
<listitem><para>North: 0,-1, 0</para>
</listitem><listitem><para>East: 1, 0, 0</para>
</listitem><listitem><para>South: 0, 1, 0</para>
</listitem><listitem><para>West: -1, 0, 0</para>
</listitem></itemizedlist>
</para>
<para>The Z axis represents the height of the effect if supported, otherwise it&apos;s unused. In cartesian encoding (1, 2) would be the same as (2, 4), you can use any multiple you want, only the direction matters.</para>
<para>If type is <ref refid="_s_d_l__haptic_8h_1a1fcf7cb0eaf3c39b16ba266054e25aff" kindref="member">SDL_HAPTIC_SPHERICAL</ref>, direction is encoded by two rotations. The first two <computeroutput>dir</computeroutput> parameters are used. The <computeroutput>dir</computeroutput> parameters are as follows (all values are in hundredths of degrees):<itemizedlist>
<listitem><para>Degrees from (1, 0) rotated towards (0, 1).</para>
</listitem><listitem><para>Degrees towards (0, 0, 1) (device needs at least 3 axes).</para>
</listitem></itemizedlist>
</para>
<para>Example of force coming from the south with all encodings (force coming from the south means the user will have to pull the stick to counteract): <programlisting><codeline><highlight class="normal">SDL_HapticDirection<sp/>direction;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Cartesian<sp/>directions</highlight></codeline>
<codeline><highlight class="normal">direction.type<sp/>=<sp/>SDL_HAPTIC_CARTESIAN;<sp/>//<sp/>Using<sp/>cartesian<sp/>direction<sp/>encoding.</highlight></codeline>
<codeline><highlight class="normal">direction.dir[0]<sp/>=<sp/>0;<sp/>//<sp/>X<sp/>position</highlight></codeline>
<codeline><highlight class="normal">direction.dir[1]<sp/>=<sp/>1;<sp/>//<sp/>Y<sp/>position</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Assuming<sp/>the<sp/>device<sp/>has<sp/>2<sp/>axes,<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>specify<sp/>third<sp/>parameter.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Polar<sp/>directions</highlight></codeline>
<codeline><highlight class="normal">direction.type<sp/>=<sp/>SDL_HAPTIC_POLAR;<sp/>//<sp/>We&apos;ll<sp/>be<sp/>using<sp/>polar<sp/>direction<sp/>encoding.</highlight></codeline>
<codeline><highlight class="normal">direction.dir[0]<sp/>=<sp/>18000;<sp/>//<sp/>Polar<sp/>only<sp/>uses<sp/>first<sp/>parameter</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Spherical<sp/>coordinates</highlight></codeline>
<codeline><highlight class="normal">direction.type<sp/>=<sp/>SDL_HAPTIC_SPHERICAL;<sp/>//<sp/>Spherical<sp/>encoding</highlight></codeline>
<codeline><highlight class="normal">direction.dir[0]<sp/>=<sp/>9000;<sp/>//<sp/>Since<sp/>we<sp/>only<sp/>have<sp/>two<sp/>axes<sp/>we<sp/>don&apos;t<sp/>need<sp/>more<sp/>parameters.</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1acdc35e97e5525472054a67b76e518f3b" kindref="member">SDL_HAPTIC_POLAR</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1af8b2430a363a968de2a5b64c8f663d3b" kindref="member">SDL_HAPTIC_CARTESIAN</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a1fcf7cb0eaf3c39b16ba266054e25aff" kindref="member">SDL_HAPTIC_SPHERICAL</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a9efacbecc0a1b7a13684ee822b18062c" kindref="member">SDL_HAPTIC_STEERING_AXIS</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ad6705645197f6df4eeeea32392462483" kindref="member">SDL_HapticNumAxes</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="463" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1ad90d0e292edba72fdb696a1e7b9560cd" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___haptic_constant" kindref="compound">SDL_HapticConstant</ref></type>
        <definition>typedef struct SDL_HapticConstant SDL_HapticConstant</definition>
        <argsstring></argsstring>
        <name>SDL_HapticConstant</name>
        <briefdescription>
<para>A structure containing a template for a Constant effect. </para>
        </briefdescription>
        <detaileddescription>
<para>This struct is exclusively for the <ref refid="_s_d_l__haptic_8h_1a955fb9f680dcf9cc72a3d5263e85b80a" kindref="member">SDL_HAPTIC_CONSTANT</ref> effect.</para>
<para>A constant effect applies a constant force in the specified direction to the joystick.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a955fb9f680dcf9cc72a3d5263e85b80a" kindref="member">SDL_HAPTIC_CONSTANT</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="499" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1a0ebf54334ce8dbdd0f8711ca70f141a7" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___haptic_periodic" kindref="compound">SDL_HapticPeriodic</ref></type>
        <definition>typedef struct SDL_HapticPeriodic SDL_HapticPeriodic</definition>
        <argsstring></argsstring>
        <name>SDL_HapticPeriodic</name>
        <briefdescription>
<para>A structure containing a template for a Periodic effect. </para>
        </briefdescription>
        <detaileddescription>
<para>The struct handles the following effects:<itemizedlist>
<listitem><para><ref refid="_s_d_l__haptic_8h_1aa6d75adbfcdda5075078e7a2849da5c0" kindref="member">SDL_HAPTIC_SINE</ref></para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1ae047624d8458ff6400887c37a36f86d3" kindref="member">SDL_HAPTIC_LEFTRIGHT</ref></para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1ae8123eaa51511507375ba6ef9220fa46" kindref="member">SDL_HAPTIC_TRIANGLE</ref></para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1ab8e3f40f3c2bcee8905d13b634363c3f" kindref="member">SDL_HAPTIC_SAWTOOTHUP</ref></para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1afd64aa747034a7ccf4b55f6246525701" kindref="member">SDL_HAPTIC_SAWTOOTHDOWN</ref></para>
</listitem></itemizedlist>
</para>
<para>A periodic effect consists in a wave-shaped effect that repeats itself over time. The type determines the shape of the wave and the parameters determine the dimensions of the wave.</para>
<para>Phase is given by hundredth of a degree meaning that giving the phase a value of 9000 will displace it 25% of its period. Here are sample values:<itemizedlist>
<listitem><para>0: No phase displacement.</para>
</listitem><listitem><para>9000: Displaced 25% of its period.</para>
</listitem><listitem><para>18000: Displaced 50% of its period.</para>
</listitem><listitem><para>27000: Displaced 75% of its period.</para>
</listitem><listitem><para>36000: Displaced 100% of its period, same as 0, but 0 is preferred.</para>
</listitem></itemizedlist>
</para>
<para>Examples: <verbatim>SDL_HAPTIC_SINE
  __      __      __      __
 /  \    /  \    /  \    /
/    \__/    \__/    \__/

SDL_HAPTIC_SQUARE
 __    __    __    __    __
|  |  |  |  |  |  |  |  |  |
|  |__|  |__|  |__|  |__|  |

SDL_HAPTIC_TRIANGLE
  /\    /\    /\    /\    /\
 /  \  /  \  /  \  /  \  /
/    \/    \/    \/    \/

SDL_HAPTIC_SAWTOOTHUP
  /|  /|  /|  /|  /|  /|  /|
 / | / | / | / | / | / | / |
/  |/  |/  |/  |/  |/  |/  |

SDL_HAPTIC_SAWTOOTHDOWN
\  |\  |\  |\  |\  |\  |\  |
 \ | \ | \ | \ | \ | \ | \ |
  \|  \|  \|  \|  \|  \|  \|
</verbatim></para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa6d75adbfcdda5075078e7a2849da5c0" kindref="member">SDL_HAPTIC_SINE</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ae047624d8458ff6400887c37a36f86d3" kindref="member">SDL_HAPTIC_LEFTRIGHT</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ae8123eaa51511507375ba6ef9220fa46" kindref="member">SDL_HAPTIC_TRIANGLE</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ab8e3f40f3c2bcee8905d13b634363c3f" kindref="member">SDL_HAPTIC_SAWTOOTHUP</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1afd64aa747034a7ccf4b55f6246525701" kindref="member">SDL_HAPTIC_SAWTOOTHDOWN</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="585" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1af4d7e7825bf98ca5a5aa8194b77b0754" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref></type>
        <definition>typedef struct SDL_HapticCondition SDL_HapticCondition</definition>
        <argsstring></argsstring>
        <name>SDL_HapticCondition</name>
        <briefdescription>
<para>A structure containing a template for a Condition effect. </para>
        </briefdescription>
        <detaileddescription>
<para>The struct handles the following effects:<itemizedlist>
<listitem><para><ref refid="_s_d_l__haptic_8h_1a3b52d4700380085e2b5d87bb20320fb1" kindref="member">SDL_HAPTIC_SPRING</ref>: Effect based on axes position.</para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1a69522f261973e3ea4273486141320a87" kindref="member">SDL_HAPTIC_DAMPER</ref>: Effect based on axes velocity.</para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1a14b807471589120395aec28293cf6642" kindref="member">SDL_HAPTIC_INERTIA</ref>: Effect based on axes acceleration.</para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1a98a5011311168d63921aaac21403a4d8" kindref="member">SDL_HAPTIC_FRICTION</ref>: Effect based on axes movement.</para>
</listitem></itemizedlist>
</para>
<para>Direction is handled by condition internals instead of a direction member. The condition effect specific members have three parameters. The first refers to the X axis, the second refers to the Y axis and the third refers to the Z axis. The right terms refer to the positive side of the axis and the left terms refer to the negative side of the axis. Please refer to the <ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref> diagram for which side is positive and which is negative.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a3b52d4700380085e2b5d87bb20320fb1" kindref="member">SDL_HAPTIC_SPRING</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a69522f261973e3ea4273486141320a87" kindref="member">SDL_HAPTIC_DAMPER</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a14b807471589120395aec28293cf6642" kindref="member">SDL_HAPTIC_INERTIA</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a98a5011311168d63921aaac21403a4d8" kindref="member">SDL_HAPTIC_FRICTION</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="633" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1af967093786a8e460fc42c9b502472d85" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___haptic_ramp" kindref="compound">SDL_HapticRamp</ref></type>
        <definition>typedef struct SDL_HapticRamp SDL_HapticRamp</definition>
        <argsstring></argsstring>
        <name>SDL_HapticRamp</name>
        <briefdescription>
<para>A structure containing a template for a Ramp effect. </para>
        </briefdescription>
        <detaileddescription>
<para>This struct is exclusively for the <ref refid="_s_d_l__haptic_8h_1af10eb937a64a8f602e9c46682ac0d868" kindref="member">SDL_HAPTIC_RAMP</ref> effect.</para>
<para>The ramp effect starts at start strength and ends at end strength. It augments in linear fashion. If you use attack and fade with a ramp the effects get added to the ramp effect making the effect become quadratic instead of linear.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1af10eb937a64a8f602e9c46682ac0d868" kindref="member">SDL_HAPTIC_RAMP</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="671" column="16"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1adf5073b6a3b2129da7820e5506321542" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___haptic_left_right" kindref="compound">SDL_HapticLeftRight</ref></type>
        <definition>typedef struct SDL_HapticLeftRight SDL_HapticLeftRight</definition>
        <argsstring></argsstring>
        <name>SDL_HapticLeftRight</name>
        <briefdescription>
<para>A structure containing a template for a Left/Right effect. </para>
        </briefdescription>
        <detaileddescription>
<para>This struct is exclusively for the <ref refid="_s_d_l__haptic_8h_1ae047624d8458ff6400887c37a36f86d3" kindref="member">SDL_HAPTIC_LEFTRIGHT</ref> effect.</para>
<para>The Left/Right effect is used to explicitly control the large and small motors, commonly found in modern game controllers. The small (right) motor is high frequency, and the large (left) motor is low frequency.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ae047624d8458ff6400887c37a36f86d3" kindref="member">SDL_HAPTIC_LEFTRIGHT</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="696" column="21"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1ace902fac5855f399ea16edbc2d28c8f1" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___haptic_custom" kindref="compound">SDL_HapticCustom</ref></type>
        <definition>typedef struct SDL_HapticCustom SDL_HapticCustom</definition>
        <argsstring></argsstring>
        <name>SDL_HapticCustom</name>
        <briefdescription>
<para>A structure containing a template for the <ref refid="_s_d_l__haptic_8h_1a8a18c4de1076ac9bebd718329d16db29" kindref="member">SDL_HAPTIC_CUSTOM</ref> effect. </para>
        </briefdescription>
        <detaileddescription>
<para>This struct is exclusively for the <ref refid="_s_d_l__haptic_8h_1a8a18c4de1076ac9bebd718329d16db29" kindref="member">SDL_HAPTIC_CUSTOM</ref> effect.</para>
<para>A custom force feedback effect is much like a periodic effect, where the application can define its exact shape. You will have to allocate the data yourself. Data should consist of channels * samples Uint16 samples.</para>
<para>If channels is one, the effect is rotated using the defined direction. Otherwise it uses the samples in data for the different axes.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a8a18c4de1076ac9bebd718329d16db29" kindref="member">SDL_HAPTIC_CUSTOM</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="738" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1a7a4688cc52c09110c97e65c2f11072ee" prot="public" static="no">
        <type>union <ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref></type>
        <definition>typedef union SDL_HapticEffect SDL_HapticEffect</definition>
        <argsstring></argsstring>
        <name>SDL_HapticEffect</name>
        <briefdescription>
<para>The generic template for any haptic effect. </para>
        </briefdescription>
        <detaileddescription>
<para>All values max at 32767 (0x7FFF). Signed values also can be negative. Time values unless specified otherwise are in milliseconds.</para>
<para>You can also pass <ref refid="_s_d_l__haptic_8h_1a648896e9e14cb27fa8a4b6632d3f3882" kindref="member">SDL_HAPTIC_INFINITY</ref> to length instead of a 0-32767 value. Neither delay, interval, attack_length nor fade_length support <ref refid="_s_d_l__haptic_8h_1a648896e9e14cb27fa8a4b6632d3f3882" kindref="member">SDL_HAPTIC_INFINITY</ref>. Fade will also not be used since effect never ends.</para>
<para>Additionally, the <ref refid="_s_d_l__haptic_8h_1af10eb937a64a8f602e9c46682ac0d868" kindref="member">SDL_HAPTIC_RAMP</ref> effect does not support a duration of <ref refid="_s_d_l__haptic_8h_1a648896e9e14cb27fa8a4b6632d3f3882" kindref="member">SDL_HAPTIC_INFINITY</ref>.</para>
<para>Button triggers may not be supported on all devices, it is advised to not use them if possible. Buttons start at index 1 instead of index 0 like the joystick.</para>
<para>If both attack_length and fade_level are 0, the envelope is not used, otherwise both values are used.</para>
<para>Common parts: <programlisting><codeline><highlight class="normal">//<sp/>Replay<sp/>-<sp/>All<sp/>effects<sp/>have<sp/>this</highlight></codeline>
<codeline><highlight class="normal">Uint32<sp/>length;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Duration<sp/>of<sp/>effect<sp/>(ms).</highlight></codeline>
<codeline><highlight class="normal">Uint16<sp/>delay;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Delay<sp/>before<sp/>starting<sp/>effect.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Trigger<sp/>-<sp/>All<sp/>effects<sp/>have<sp/>this</highlight></codeline>
<codeline><highlight class="normal">Uint16<sp/>button;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Button<sp/>that<sp/>triggers<sp/>effect.</highlight></codeline>
<codeline><highlight class="normal">Uint16<sp/>interval;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>How<sp/>soon<sp/>before<sp/>effect<sp/>can<sp/>be<sp/>triggered<sp/>again.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Envelope<sp/>-<sp/>All<sp/>effects<sp/>except<sp/>condition<sp/>effects<sp/>have<sp/>this</highlight></codeline>
<codeline><highlight class="normal">Uint16<sp/>attack_length;<sp/>//<sp/>Duration<sp/>of<sp/>the<sp/>attack<sp/>(ms).</highlight></codeline>
<codeline><highlight class="normal">Uint16<sp/>attack_level;<sp/><sp/>//<sp/>Level<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>attack.</highlight></codeline>
<codeline><highlight class="normal">Uint16<sp/>fade_length;<sp/><sp/><sp/>//<sp/>Duration<sp/>of<sp/>the<sp/>fade<sp/>out<sp/>(ms).</highlight></codeline>
<codeline><highlight class="normal">Uint16<sp/>fade_level;<sp/><sp/><sp/><sp/>//<sp/>Level<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>fade.</highlight></codeline>
</programlisting></para>
<para>Here we have an example of a constant effect evolution in time: <verbatim>Strength
^
|
|    effect level --&gt;  _________________
|                     /                 \
|                    /                   \
|                   /                     \
|                  /                       \
| attack_level --&gt; |                        \
|                  |                        |  &lt;---  fade_level
|
+--------------------------------------------------&gt; Time
                   [--]                 [---]
                   attack_length        fade_length

[------------------][-----------------------]
delay               length
</verbatim></para>
<para>Note either the attack_level or the fade_level may be above the actual effect level.</para>
<para><simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_constant" kindref="compound">SDL_HapticConstant</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_periodic" kindref="compound">SDL_HapticPeriodic</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_ramp" kindref="compound">SDL_HapticRamp</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_left_right" kindref="compound">SDL_HapticLeftRight</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_s_d_l___haptic_custom" kindref="compound">SDL_HapticCustom</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="819" column="18"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a6f538063a9f1d790882c0d3a81c302cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_NumHaptics</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_NumHaptics</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Count the number of haptic devices attached to the system.</para>
<para><simplesect kind="return"><para>the number of haptic devices detected on the system or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ac471a69170328585193066cc9d9ff482" kindref="member">SDL_HapticName</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="834" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="834" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1ac471a69170328585193066cc9d9ff482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_HapticName</definition>
        <argsstring>(int device_index)</argsstring>
        <name>SDL_HapticName</name>
        <param>
          <type>int</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the implementation dependent name of a haptic device.</para>
<para>This can be called before any joysticks are opened. If no name can be found, this function returns NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the device to query. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name of the device or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a6f538063a9f1d790882c0d3a81c302cd" kindref="member">SDL_NumHaptics</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="850" column="36" declfile="D:/RayTracing/include/SDL_haptic.h" declline="850" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpen</definition>
        <argsstring>(int device_index)</argsstring>
        <name>SDL_HapticOpen</name>
        <param>
          <type>int</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open a haptic device for use.</para>
<para>The index passed as an argument refers to the N&apos;th haptic device on this system.</para>
<para>When opening a haptic device, its gain will be set to maximum and autocenter will be disabled. To modify these values use <ref refid="_s_d_l__haptic_8h_1a2a90e7cefab3fdecf37e2f1b956a9e73" kindref="member">SDL_HapticSetGain()</ref> and <ref refid="_s_d_l__haptic_8h_1a0b0d63aa4513fc1b12939500cb3f8a76" kindref="member">SDL_HapticSetAutocenter()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the device to open </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the device identifier or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" kindref="member">SDL_HapticClose</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aacee621c474cda53e56f4a2233c65407" kindref="member">SDL_HapticIndex</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a865ecbbf4869868e401c182952994ea0" kindref="member">SDL_HapticOpenFromJoystick</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a303d13b149b6dc4cabe07fb799333581" kindref="member">SDL_HapticOpenFromMouse</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1af0181e59ecd14c6aecd1fd3c5099330a" kindref="member">SDL_HapticPause</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a0b0d63aa4513fc1b12939500cb3f8a76" kindref="member">SDL_HapticSetAutocenter</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a2a90e7cefab3fdecf37e2f1b956a9e73" kindref="member">SDL_HapticSetGain</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aad427170295d6b88a5a94cd6a491797a" kindref="member">SDL_HapticStopAll</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="877" column="36" declfile="D:/RayTracing/include/SDL_haptic.h" declline="877" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a24d8f221d4b2eae5c3c663752fc0d66a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticOpened</definition>
        <argsstring>(int device_index)</argsstring>
        <name>SDL_HapticOpened</name>
        <param>
          <type>int</type>
          <declname>device_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the haptic device at the designated index has been opened.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>device_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the device to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if it has been opened, 0 if it hasn&apos;t or on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aacee621c474cda53e56f4a2233c65407" kindref="member">SDL_HapticIndex</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="891" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="891" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1aacee621c474cda53e56f4a2233c65407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticIndex</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticIndex</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index of a haptic device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the specified haptic device or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a24d8f221d4b2eae5c3c663752fc0d66a" kindref="member">SDL_HapticOpened</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="905" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="905" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a8fcc0fb333baed629004bd8c0c66bd76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_MouseIsHaptic</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_MouseIsHaptic</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query whether or not the current mouse has haptic capabilities.</para>
<para><simplesect kind="return"><para>SDL_TRUE if the mouse is haptic or SDL_FALSE if it isn&apos;t.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a303d13b149b6dc4cabe07fb799333581" kindref="member">SDL_HapticOpenFromMouse</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="916" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="916" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a303d13b149b6dc4cabe07fb799333581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromMouse</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_HapticOpenFromMouse</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to open a haptic device from the current mouse.</para>
<para><simplesect kind="return"><para>the haptic device identifier or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a8fcc0fb333baed629004bd8c0c66bd76" kindref="member">SDL_MouseIsHaptic</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="929" column="36" declfile="D:/RayTracing/include/SDL_haptic.h" declline="929" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a8a2966d363cba55ffdfeff42e4204ef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_JoystickIsHaptic</definition>
        <argsstring>(SDL_Joystick *joystick)</argsstring>
        <name>SDL_JoystickIsHaptic</name>
        <param>
          <type><ref refid="_s_d_l__joystick_8h_1a1246a982e91df301042a77e65c694987" kindref="member">SDL_Joystick</ref> *</type>
          <declname>joystick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query if a joystick has haptic features.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>joystick</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Joystick to test for haptic capabilities </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if the joystick is haptic, SDL_FALSE if it isn&apos;t, or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a865ecbbf4869868e401c182952994ea0" kindref="member">SDL_HapticOpenFromJoystick</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="943" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="943" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a865ecbbf4869868e401c182952994ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromJoystick</definition>
        <argsstring>(SDL_Joystick *joystick)</argsstring>
        <name>SDL_HapticOpenFromJoystick</name>
        <param>
          <type><ref refid="_s_d_l__joystick_8h_1a1246a982e91df301042a77e65c694987" kindref="member">SDL_Joystick</ref> *</type>
          <declname>joystick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open a haptic device for use from a joystick device.</para>
<para>You must still close the haptic device separately. It will not be closed with the joystick.</para>
<para>When opened from a joystick you should first close the haptic device before closing the joystick device. If not, on some implementations the haptic device will also get unallocated and you&apos;ll be unable to use force feedback on that device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>joystick</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Joystick to create a haptic device from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a valid haptic device identifier on success or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" kindref="member">SDL_HapticClose</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a8a2966d363cba55ffdfeff42e4204ef1" kindref="member">SDL_JoystickIsHaptic</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="966" column="36" declfile="D:/RayTracing/include/SDL_haptic.h" declline="966" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_HapticClose</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticClose</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close a haptic device previously opened with <ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to close</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="978" column="30" declfile="D:/RayTracing/include/SDL_haptic.h" declline="978" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1afc6e5a5701fe80004d529d762132ad6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticNumEffects</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticNumEffects</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of effects a haptic device can store.</para>
<para>On some platforms this isn&apos;t fully supported, and therefore is an approximation. Always check to see if your created effect was actually created and do not rely solely on <ref refid="_s_d_l__haptic_8h_1afc6e5a5701fe80004d529d762132ad6b" kindref="member">SDL_HapticNumEffects()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of effects the haptic device can store or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a255e1e6fc27489080bcbbd3c7fadc6db" kindref="member">SDL_HapticNumEffectsPlaying</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" kindref="member">SDL_HapticQuery</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="996" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="996" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a255e1e6fc27489080bcbbd3c7fadc6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticNumEffectsPlaying</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticNumEffectsPlaying</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of effects a haptic device can play at the same time.</para>
<para>This is not supported on all platforms, but will always return a value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to query maximum playing effects </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of effects the haptic device can play at the same time or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1afc6e5a5701fe80004d529d762132ad6b" kindref="member">SDL_HapticNumEffects</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" kindref="member">SDL_HapticQuery</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1013" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1013" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> unsigned int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC unsigned int SDLCALL SDL_HapticQuery</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticQuery</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the haptic device&apos;s supported features in bitwise manner.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a list of supported haptic features in bitwise manner (OR&apos;d), or 0 on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ae333ef77753ba700875fa20858b9021d" kindref="member">SDL_HapticEffectSupported</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1afc6e5a5701fe80004d529d762132ad6b" kindref="member">SDL_HapticNumEffects</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1027" column="38" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1027" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1ad6705645197f6df4eeeea32392462483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticNumAxes</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticNumAxes</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of haptic axes the device has.</para>
<para>The number of haptic axes might be useful if working with the <ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref> effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of axes on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1042" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1042" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1ae333ef77753ba700875fa20858b9021d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticEffectSupported</definition>
        <argsstring>(SDL_Haptic *haptic, SDL_HapticEffect *effect)</argsstring>
        <name>SDL_HapticEffectSupported</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> *</type>
          <declname>effect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check to see if an effect is supported by a haptic device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired effect to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if effect is supported, SDL_FALSE if it isn&apos;t, or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a176c52ff4b77b63cb94ea83f8f4183ad" kindref="member">SDL_HapticNewEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" kindref="member">SDL_HapticQuery</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1058" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1058" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a176c52ff4b77b63cb94ea83f8f4183ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticNewEffect</definition>
        <argsstring>(SDL_Haptic *haptic, SDL_HapticEffect *effect)</argsstring>
        <name>SDL_HapticNewEffect</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> *</type>
          <declname>effect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new haptic effect on a specified device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>an SDL_Haptic device to create the effect on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> structure containing the properties of the effect to create </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the ID of the effect on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" kindref="member">SDL_HapticDestroyEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" kindref="member">SDL_HapticRunEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a4c212cbdb3487dd8d72882d355a19472" kindref="member">SDL_HapticUpdateEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1077" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1077" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a4c212cbdb3487dd8d72882d355a19472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticUpdateEffect</definition>
        <argsstring>(SDL_Haptic *haptic, int effect, SDL_HapticEffect *data)</argsstring>
        <name>SDL_HapticUpdateEffect</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type>int</type>
          <declname>effect</declname>
        </param>
        <param>
          <type><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the properties of an effect.</para>
<para>Can be used dynamically, although behavior when dynamically changing direction may be strange. Specifically the effect may re-upload itself and start playing from the start. You also cannot change the type either when running <ref refid="_s_d_l__haptic_8h_1a4c212cbdb3487dd8d72882d355a19472" kindref="member">SDL_HapticUpdateEffect()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device that has the effect </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>the identifier of the effect to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref> structure containing the new effect properties to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" kindref="member">SDL_HapticDestroyEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a176c52ff4b77b63cb94ea83f8f4183ad" kindref="member">SDL_HapticNewEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" kindref="member">SDL_HapticRunEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1101" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1101" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticRunEffect</definition>
        <argsstring>(SDL_Haptic *haptic, int effect, Uint32 iterations)</argsstring>
        <name>SDL_HapticRunEffect</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type>int</type>
          <declname>effect</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>iterations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run the haptic effect on its associated haptic device.</para>
<para>To repeat the effect over and over indefinitely, set <computeroutput>iterations</computeroutput> to <computeroutput>SDL_HAPTIC_INFINITY</computeroutput>. (Repeats the envelope - attack and fade.) To make one instance of the effect last indefinitely (so the effect does not fade), set the effect&apos;s <computeroutput>length</computeroutput> in its structure/union to <computeroutput>SDL_HAPTIC_INFINITY</computeroutput> instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to run the effect on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the haptic effect to run </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iterations</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of iterations to run the effect; use <computeroutput>SDL_HAPTIC_INFINITY</computeroutput> to repeat forever </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" kindref="member">SDL_HapticDestroyEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1ae2185c0814f107dd5851dd743e9ea71c" kindref="member">SDL_HapticGetEffectStatus</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a27b35e361aaafa830561e98328c98c8e" kindref="member">SDL_HapticStopEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1127" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1127" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a27b35e361aaafa830561e98328c98c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticStopEffect</definition>
        <argsstring>(SDL_Haptic *haptic, int effect)</argsstring>
        <name>SDL_HapticStopEffect</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type>int</type>
          <declname>effect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop the haptic effect on its associated haptic device.</para>
<para><itemizedlist>
<listitem><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to stop the effect on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the haptic effect to stop </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" kindref="member">SDL_HapticDestroyEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" kindref="member">SDL_HapticRunEffect</ref> </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1146" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1146" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_HapticDestroyEffect</definition>
        <argsstring>(SDL_Haptic *haptic, int effect)</argsstring>
        <name>SDL_HapticDestroyEffect</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type>int</type>
          <declname>effect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a haptic effect on the device.</para>
<para>This will stop the effect if it&apos;s running. Effects are automatically destroyed when the device is closed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to destroy the effect on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the haptic effect to destroy</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a176c52ff4b77b63cb94ea83f8f4183ad" kindref="member">SDL_HapticNewEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1162" column="30" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1162" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1ae2185c0814f107dd5851dd743e9ea71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticGetEffectStatus</definition>
        <argsstring>(SDL_Haptic *haptic, int effect)</argsstring>
        <name>SDL_HapticGetEffectStatus</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type>int</type>
          <declname>effect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the status of the current effect on the specified haptic device.</para>
<para>Device must support the SDL_HAPTIC_STATUS feature.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to query for the effect status on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the haptic effect to query its status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if it isn&apos;t playing, 1 if it is playing, or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" kindref="member">SDL_HapticRunEffect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a27b35e361aaafa830561e98328c98c8e" kindref="member">SDL_HapticStopEffect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1180" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1180" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a2a90e7cefab3fdecf37e2f1b956a9e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticSetGain</definition>
        <argsstring>(SDL_Haptic *haptic, int gain)</argsstring>
        <name>SDL_HapticSetGain</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the global gain of the specified haptic device.</para>
<para>Device must support the SDL_HAPTIC_GAIN feature.</para>
<para>The user may specify the maximum gain by setting the environment variable <computeroutput>SDL_HAPTIC_GAIN_MAX</computeroutput> which should be between 0 and 100. All calls to <ref refid="_s_d_l__haptic_8h_1a2a90e7cefab3fdecf37e2f1b956a9e73" kindref="member">SDL_HapticSetGain()</ref> will scale linearly using <computeroutput>SDL_HAPTIC_GAIN_MAX</computeroutput> as the maximum.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to set the gain on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set the gain to, should be between 0 and 100 (0 - 100) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" kindref="member">SDL_HapticQuery</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1202" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1202" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a0b0d63aa4513fc1b12939500cb3f8a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticSetAutocenter</definition>
        <argsstring>(SDL_Haptic *haptic, int autocenter)</argsstring>
        <name>SDL_HapticSetAutocenter</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type>int</type>
          <declname>autocenter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the global autocenter of the device.</para>
<para>Autocenter should be between 0 and 100. Setting it to 0 will disable autocentering.</para>
<para>Device must support the SDL_HAPTIC_AUTOCENTER feature.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to set autocentering on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>autocenter</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set autocenter to (0-100) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" kindref="member">SDL_HapticQuery</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1221" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1221" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1af0181e59ecd14c6aecd1fd3c5099330a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticPause</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticPause</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pause a haptic device.</para>
<para>Device must support the <computeroutput>SDL_HAPTIC_PAUSE</computeroutput> feature. Call <ref refid="_s_d_l__haptic_8h_1a3593eed87aee3b9caa1c25927002c5ae" kindref="member">SDL_HapticUnpause()</ref> to resume playback.</para>
<para>Do not modify the effects nor add new ones while the device is paused. That can cause all sorts of weird errors.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to pause </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a3593eed87aee3b9caa1c25927002c5ae" kindref="member">SDL_HapticUnpause</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1241" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1241" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a3593eed87aee3b9caa1c25927002c5ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticUnpause</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticUnpause</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpause a haptic device.</para>
<para>Call to unpause after <ref refid="_s_d_l__haptic_8h_1af0181e59ecd14c6aecd1fd3c5099330a" kindref="member">SDL_HapticPause()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to unpause </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1af0181e59ecd14c6aecd1fd3c5099330a" kindref="member">SDL_HapticPause</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1256" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1256" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1aad427170295d6b88a5a94cd6a491797a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticStopAll</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticStopAll</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop all the currently playing effects on a haptic device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Haptic device to stop </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1267" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1267" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1aa0754b11e2aed38bc955750c7a6a6c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticRumbleSupported</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticRumbleSupported</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether rumble is supported on a haptic device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>haptic device to check for rumble support </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if effect is supported, SDL_FALSE if it isn&apos;t, or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1af44cbecefe14da5a7476013ce06f38b9" kindref="member">SDL_HapticRumbleInit</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a971b5651414202f89a8c6eed640e990d" kindref="member">SDL_HapticRumblePlay</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a9e11ff3ae40f59c04be3bae98d8d05ba" kindref="member">SDL_HapticRumbleStop</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1283" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1283" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1af44cbecefe14da5a7476013ce06f38b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticRumbleInit</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticRumbleInit</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a haptic device for simple rumble playback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the haptic device to initialize for simple rumble playback </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a971b5651414202f89a8c6eed640e990d" kindref="member">SDL_HapticRumblePlay</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a9e11ff3ae40f59c04be3bae98d8d05ba" kindref="member">SDL_HapticRumbleStop</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa0754b11e2aed38bc955750c7a6a6c73" kindref="member">SDL_HapticRumbleSupported</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1299" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1299" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a971b5651414202f89a8c6eed640e990d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticRumblePlay</definition>
        <argsstring>(SDL_Haptic *haptic, float strength, Uint32 length)</argsstring>
        <name>SDL_HapticRumblePlay</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <param>
          <type>float</type>
          <declname>strength</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run a simple rumble effect on a haptic device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the haptic device to play the rumble effect on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strength</parametername>
</parameternamelist>
<parameterdescription>
<para>strength of the rumble to play as a 0-1 float value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the rumble to play in milliseconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1af44cbecefe14da5a7476013ce06f38b9" kindref="member">SDL_HapticRumbleInit</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a9e11ff3ae40f59c04be3bae98d8d05ba" kindref="member">SDL_HapticRumbleStop</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa0754b11e2aed38bc955750c7a6a6c73" kindref="member">SDL_HapticRumbleSupported</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1316" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1316" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__haptic_8h_1a9e11ff3ae40f59c04be3bae98d8d05ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_HapticRumbleStop</definition>
        <argsstring>(SDL_Haptic *haptic)</argsstring>
        <name>SDL_HapticRumbleStop</name>
        <param>
          <type><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref> *</type>
          <declname>haptic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop the simple rumble on a haptic device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>haptic</parametername>
</parameternamelist>
<parameterdescription>
<para>the haptic device to stop the rumble effect on </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1af44cbecefe14da5a7476013ce06f38b9" kindref="member">SDL_HapticRumbleInit</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a971b5651414202f89a8c6eed640e990d" kindref="member">SDL_HapticRumblePlay</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa0754b11e2aed38bc955750c7a6a6c73" kindref="member">SDL_HapticRumbleSupported</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="1331" column="29" declfile="D:/RayTracing/include/SDL_haptic.h" declline="1331" declcolumn="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" prot="public" static="no">
        <type>struct _SDL_Haptic</type>
        <definition>SDL_Haptic</definition>
        <argsstring></argsstring>
        <name>SDL_Haptic</name>
        <briefdescription>
<para>The haptic structure used to identify an SDL haptic. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a865ecbbf4869868e401c182952994ea0" kindref="member">SDL_HapticOpenFromJoystick</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" kindref="member">SDL_HapticClose</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_haptic.h" line="141" column="26" bodyfile="D:/RayTracing/include/SDL_haptic.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The SDL haptic subsystem allows you to control haptic (force feedback) devices. </para>
    </briefdescription>
    <detaileddescription>
<para>The basic usage is as follows:<itemizedlist>
<listitem><para>Initialize the subsystem (<ref refid="_s_d_l_8h_1adfd88189fec07574cae461b9dea75a85" kindref="member">SDL_INIT_HAPTIC</ref>).</para>
</listitem><listitem><para>Open a haptic device.<itemizedlist>
<listitem><para><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen()</ref> to open from index.</para>
</listitem><listitem><para><ref refid="_s_d_l__haptic_8h_1a865ecbbf4869868e401c182952994ea0" kindref="member">SDL_HapticOpenFromJoystick()</ref> to open from an existing joystick.</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para>Create an effect (<ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref>).</para>
</listitem><listitem><para>Upload the effect with <ref refid="_s_d_l__haptic_8h_1a176c52ff4b77b63cb94ea83f8f4183ad" kindref="member">SDL_HapticNewEffect()</ref>.</para>
</listitem><listitem><para>Run the effect with <ref refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" kindref="member">SDL_HapticRunEffect()</ref>.</para>
</listitem><listitem><para>(optional) Free the effect with <ref refid="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" kindref="member">SDL_HapticDestroyEffect()</ref>.</para>
</listitem><listitem><para>Close the haptic device with <ref refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" kindref="member">SDL_HapticClose()</ref>.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Simple rumble example:</title><para><programlisting><codeline><highlight class="normal"><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*haptic;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">haptic<sp/>=<sp/><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref>(<sp/>0<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haptic<sp/>==<sp/><ref refid="begin__code_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>simple<sp/>rumble</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__haptic_8h_1af44cbecefe14da5a7476013ce06f38b9" kindref="member">SDL_HapticRumbleInit</ref>(<sp/>haptic<sp/>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Play<sp/>effect<sp/>at<sp/>50%<sp/>strength<sp/>for<sp/>2<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__haptic_8h_1a971b5651414202f89a8c6eed640e990d" kindref="member">SDL_HapticRumblePlay</ref>(<sp/>haptic,<sp/>0.5,<sp/>2000<sp/>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="_s_d_l__timer_8h_1ae8050b95373b95249064467592ab4e21" kindref="member">SDL_Delay</ref>(<sp/>2000<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" kindref="member">SDL_HapticClose</ref>(<sp/>haptic<sp/>);</highlight></codeline>
</programlisting></para>
</simplesect>
<simplesect kind="par"><title>Complete example:</title><para><programlisting><codeline><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_haptic(<sp/><ref refid="_s_d_l__joystick_8h_1a1246a982e91df301042a77e65c694987" kindref="member">SDL_Joystick</ref><sp/>*<sp/>joystick<sp/>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*haptic;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref><sp/>effect;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effect_id;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>haptic<sp/>=<sp/><ref refid="_s_d_l__haptic_8h_1a865ecbbf4869868e401c182952994ea0" kindref="member">SDL_HapticOpenFromJoystick</ref>(<sp/>joystick<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haptic<sp/>==<sp/><ref refid="begin__code_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>Most<sp/>likely<sp/>joystick<sp/>isn&apos;t<sp/>haptic</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>it<sp/>can<sp/>do<sp/>sine<sp/>waves</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" kindref="member">SDL_HapticQuery</ref>(haptic)<sp/>&amp;<sp/><ref refid="_s_d_l__haptic_8h_1aa6d75adbfcdda5075078e7a2849da5c0" kindref="member">SDL_HAPTIC_SINE</ref>)==0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" kindref="member">SDL_HapticClose</ref>(haptic);<sp/></highlight><highlight class="comment">//<sp/>No<sp/>sine<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1ae175db0d44cd740e2fa1072b71e5f1a4" kindref="member">SDL_memset</ref>(<sp/>&amp;effect,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>0<sp/>is<sp/>safe<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="union_s_d_l___haptic_effect_1a5ff6cfd8da91537091e9a6c2108cb179" kindref="member">type</ref><sp/>=<sp/><ref refid="_s_d_l__haptic_8h_1aa6d75adbfcdda5075078e7a2849da5c0" kindref="member">SDL_HAPTIC_SINE</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" kindref="member">periodic</ref>.<ref refid="struct_s_d_l___haptic_periodic_1a2c4f27d4583187a7a994e79ad49083d3" kindref="member">direction</ref>.<ref refid="struct_s_d_l___haptic_direction_1acd6830ad68c4ba2af16057fa418087cc" kindref="member">type</ref><sp/>=<sp/><ref refid="_s_d_l__haptic_8h_1acdc35e97e5525472054a67b76e518f3b" kindref="member">SDL_HAPTIC_POLAR</ref>;<sp/></highlight><highlight class="comment">//<sp/>Polar<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" kindref="member">periodic</ref>.<ref refid="struct_s_d_l___haptic_periodic_1a2c4f27d4583187a7a994e79ad49083d3" kindref="member">direction</ref>.<ref refid="struct_s_d_l___haptic_direction_1a6cebd8118a3e61e36bd0c503ae020362" kindref="member">dir</ref>[0]<sp/>=<sp/>18000;<sp/></highlight><highlight class="comment">//<sp/>Force<sp/>comes<sp/>from<sp/>south</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" kindref="member">periodic</ref>.<ref refid="struct_s_d_l___haptic_periodic_1a0e7e105b96308129b248d52b56a2a839" kindref="member">period</ref><sp/>=<sp/>1000;<sp/></highlight><highlight class="comment">//<sp/>1000<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" kindref="member">periodic</ref>.<ref refid="struct_s_d_l___haptic_periodic_1aad0ad2b00c7e6959da627663d91f7b94" kindref="member">magnitude</ref><sp/>=<sp/>20000;<sp/></highlight><highlight class="comment">//<sp/>20000/32767<sp/>strength</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" kindref="member">periodic</ref>.<ref refid="struct_s_d_l___haptic_periodic_1a0ef0b17c54aaa5c99886c2a618444026" kindref="member">length</ref><sp/>=<sp/>5000;<sp/></highlight><highlight class="comment">//<sp/>5<sp/>seconds<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" kindref="member">periodic</ref>.<ref refid="struct_s_d_l___haptic_periodic_1ab35eedce7107edc75640586159fe75bb" kindref="member">attack_length</ref><sp/>=<sp/>1000;<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>1<sp/>second<sp/>to<sp/>get<sp/>max<sp/>strength</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect.<ref refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" kindref="member">periodic</ref>.<ref refid="struct_s_d_l___haptic_periodic_1ae1c186d02304eae142a62dca72f50fa8" kindref="member">fade_length</ref><sp/>=<sp/>1000;<sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>1<sp/>second<sp/>to<sp/>fade<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upload<sp/>the<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>effect_id<sp/>=<sp/><ref refid="_s_d_l__haptic_8h_1a176c52ff4b77b63cb94ea83f8f4183ad" kindref="member">SDL_HapticNewEffect</ref>(<sp/>haptic,<sp/>&amp;effect<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>the<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" kindref="member">SDL_HapticRunEffect</ref>(<sp/>haptic,<sp/>effect_id,<sp/>1<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="_s_d_l__timer_8h_1ae8050b95373b95249064467592ab4e21" kindref="member">SDL_Delay</ref>(<sp/>5000);<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>effect<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>destroy<sp/>the<sp/>effect,<sp/>although<sp/>closing<sp/>the<sp/>device<sp/>also<sp/>does<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" kindref="member">SDL_HapticDestroyEffect</ref>(<sp/>haptic,<sp/>effect_id<sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" kindref="member">SDL_HapticClose</ref>(haptic);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Success</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_haptic_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_haptic_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__stdinc_8h" kindref="compound">SDL_stdinc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__error_8h" kindref="compound">SDL_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__joystick_8h" kindref="compound">SDL_joystick.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>For<sp/>SDL<sp/>2.1,<sp/>adjust<sp/>all<sp/>the<sp/>magnitude<sp/>variables<sp/>to<sp/>be<sp/>Uint16<sp/>(0xFFFF).</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>At<sp/>the<sp/>moment<sp/>the<sp/>magnitude<sp/>variables<sp/>are<sp/>mixed<sp/>between<sp/>signed/unsigned,<sp/>and</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>it<sp/>is<sp/>also<sp/>not<sp/>made<sp/>clear<sp/>that<sp/>ALL<sp/>of<sp/>those<sp/>variables<sp/>expect<sp/>a<sp/>max<sp/>of<sp/>0x7FFF.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>Some<sp/>platforms<sp/>may<sp/>have<sp/>higher<sp/>precision<sp/>than<sp/>that<sp/>(Linux<sp/>FF,<sp/>Windows<sp/>XInput)</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>so<sp/>we<sp/>should<sp/>fix<sp/>the<sp/>inconsistency<sp/>in<sp/>favor<sp/>of<sp/>higher<sp/>possible<sp/>precision,</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>adjusting<sp/>for<sp/>platforms<sp/>that<sp/>use<sp/>different<sp/>scales.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>-flibit</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_SDL_Haptic;</highlight></codeline>
<codeline lineno="141" refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_SDL_Haptic<sp/><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="_s_d_l__haptic_8h_1a955fb9f680dcf9cc72a3d5263e85b80a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_CONSTANT<sp/><sp/><sp/>(1u&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="_s_d_l__haptic_8h_1aa6d75adbfcdda5075078e7a2849da5c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_SINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="_s_d_l__haptic_8h_1ae047624d8458ff6400887c37a36f86d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_LEFTRIGHT<sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>!!!<sp/>FIXME:<sp/>put<sp/>this<sp/>back<sp/>when<sp/>we<sp/>have<sp/>more<sp/>bits<sp/>in<sp/>2.1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SDL_HAPTIC_SQUARE<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="_s_d_l__haptic_8h_1ae8123eaa51511507375ba6ef9220fa46" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_TRIANGLE<sp/><sp/><sp/>(1u&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="_s_d_l__haptic_8h_1ab8e3f40f3c2bcee8905d13b634363c3f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_SAWTOOTHUP<sp/>(1u&lt;&lt;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="_s_d_l__haptic_8h_1afd64aa747034a7ccf4b55f6246525701" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_SAWTOOTHDOWN<sp/>(1u&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="_s_d_l__haptic_8h_1af10eb937a64a8f602e9c46682ac0d868" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_RAMP<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="_s_d_l__haptic_8h_1a3b52d4700380085e2b5d87bb20320fb1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_SPRING<sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="_s_d_l__haptic_8h_1a69522f261973e3ea4273486141320a87" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_DAMPER<sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="_s_d_l__haptic_8h_1a14b807471589120395aec28293cf6642" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_INERTIA<sp/><sp/><sp/><sp/>(1u&lt;&lt;9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="_s_d_l__haptic_8h_1a98a5011311168d63921aaac21403a4d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_FRICTION<sp/><sp/><sp/>(1u&lt;&lt;10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="_s_d_l__haptic_8h_1a8a18c4de1076ac9bebd718329d16db29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_CUSTOM<sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="comment">/*<sp/>Haptic<sp/>effects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>last<sp/>few<sp/>are<sp/>features<sp/>the<sp/>device<sp/>has,<sp/>not<sp/>effects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="_s_d_l__haptic_8h_1a3afe54582bd5c184109f3f61b6c84c6c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_GAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="_s_d_l__haptic_8h_1a28aa71e231fbf5b88bce7906bf2f4e70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_AUTOCENTER<sp/>(1u&lt;&lt;13)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="_s_d_l__haptic_8h_1abfbc9fa0d65f4b5632788945080cc71b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_STATUS<sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="_s_d_l__haptic_8h_1a6baee8978ccc97add8457388801d7782" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_PAUSE<sp/><sp/><sp/><sp/><sp/><sp/>(1u&lt;&lt;15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="_s_d_l__haptic_8h_1acdc35e97e5525472054a67b76e518f3b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_POLAR<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="_s_d_l__haptic_8h_1af8b2430a363a968de2a5b64c8f663d3b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_CARTESIAN<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="_s_d_l__haptic_8h_1a1fcf7cb0eaf3c39b16ba266054e25aff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_SPHERICAL<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="_s_d_l__haptic_8h_1a9efacbecc0a1b7a13684ee822b18062c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_STEERING_AXIS<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="comment">/*<sp/>Direction<sp/>encodings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="comment">/*<sp/>Haptic<sp/>features<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>Misc<sp/>defines.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="_s_d_l__haptic_8h_1a648896e9e14cb27fa8a4b6632d3f3882" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_HAPTIC_INFINITY<sp/><sp/><sp/>4294967295U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="struct_s_d_l___haptic_direction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref></highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461" refid="struct_s_d_l___haptic_direction_1acd6830ad68c4ba2af16057fa418087cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/><ref refid="struct_s_d_l___haptic_direction_1acd6830ad68c4ba2af16057fa418087cc" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462" refid="struct_s_d_l___haptic_direction_1a6cebd8118a3e61e36bd0c503ae020362" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" kindref="member">Sint32</ref><sp/><ref refid="struct_s_d_l___haptic_direction_1a6cebd8118a3e61e36bd0c503ae020362" kindref="member">dir</ref>[3];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463" refid="_s_d_l__haptic_8h_1a67e1c7124fcd0d6c6bc775ab0758b4ad" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__haptic_8h_1a67e1c7124fcd0d6c6bc775ab0758b4ad" kindref="member">SDL_HapticDirection</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="struct_s_d_l___haptic_constant" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___haptic_constant" kindref="compound">SDL_HapticConstant</ref></highlight></codeline>
<codeline lineno="478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="struct_s_d_l___haptic_constant_1a5cb31202803a8bc1be95fcede5ac8afb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1a5cb31202803a8bc1be95fcede5ac8afb" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481" refid="struct_s_d_l___haptic_constant_1a3e871debf4e57c35960f019d2605d84f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1a3e871debf4e57c35960f019d2605d84f" kindref="member">direction</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Replay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="struct_s_d_l___haptic_constant_1aeb994c356b1d236b060f277d157e98ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1aeb994c356b1d236b060f277d157e98ec" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485" refid="struct_s_d_l___haptic_constant_1a16a751009893f5412201e3ce91146b25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1a16a751009893f5412201e3ce91146b25" kindref="member">delay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="struct_s_d_l___haptic_constant_1aa65321f1b002adaab6e629d5bed556e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1aa65321f1b002adaab6e629d5bed556e9" kindref="member">button</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489" refid="struct_s_d_l___haptic_constant_1ab1f7f0df856f4cf1fdf937cb886226b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1ab1f7f0df856f4cf1fdf937cb886226b4" kindref="member">interval</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Constant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="struct_s_d_l___haptic_constant_1a5b095eea77464623ed57af15f29f4ca6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1a5b095eea77464623ed57af15f29f4ca6" kindref="member">level</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Envelope<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="struct_s_d_l___haptic_constant_1a907bade68ab53fb24e7d2651d19b767f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1a907bade68ab53fb24e7d2651d19b767f" kindref="member">attack_length</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="496" refid="struct_s_d_l___haptic_constant_1a0928a37f3fab0e5b7daffc7a1d65744c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1a0928a37f3fab0e5b7daffc7a1d65744c" kindref="member">attack_level</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="497" refid="struct_s_d_l___haptic_constant_1a647a6b761ac6ba16160d0892a12806bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1a647a6b761ac6ba16160d0892a12806bc" kindref="member">fade_length</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498" refid="struct_s_d_l___haptic_constant_1a49f6499c89f3e494efbe92f12277c949" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_constant_1a49f6499c89f3e494efbe92f12277c949" kindref="member">fade_level</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499" refid="_s_d_l__haptic_8h_1ad90d0e292edba72fdb696a1e7b9560cd" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__haptic_8h_1ad90d0e292edba72fdb696a1e7b9560cd" kindref="member">SDL_HapticConstant</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="struct_s_d_l___haptic_periodic" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___haptic_periodic" kindref="compound">SDL_HapticPeriodic</ref></highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="struct_s_d_l___haptic_periodic_1ac53c5725e8cff012e9b90e01b7110869" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1ac53c5725e8cff012e9b90e01b7110869" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564" refid="struct_s_d_l___haptic_periodic_1a2c4f27d4583187a7a994e79ad49083d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1a2c4f27d4583187a7a994e79ad49083d3" kindref="member">direction</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Replay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="struct_s_d_l___haptic_periodic_1a0ef0b17c54aaa5c99886c2a618444026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1a0ef0b17c54aaa5c99886c2a618444026" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568" refid="struct_s_d_l___haptic_periodic_1a8688d1c7ee6270ed290f6b474aef5ec9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1a8688d1c7ee6270ed290f6b474aef5ec9" kindref="member">delay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="struct_s_d_l___haptic_periodic_1a9e0177354f4a285b8c98e4a31cd31752" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1a9e0177354f4a285b8c98e4a31cd31752" kindref="member">button</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572" refid="struct_s_d_l___haptic_periodic_1a076d266e917098d89b2385b631629162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1a076d266e917098d89b2385b631629162" kindref="member">interval</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Periodic<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="struct_s_d_l___haptic_periodic_1a0e7e105b96308129b248d52b56a2a839" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1a0e7e105b96308129b248d52b56a2a839" kindref="member">period</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="576" refid="struct_s_d_l___haptic_periodic_1aad0ad2b00c7e6959da627663d91f7b94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1aad0ad2b00c7e6959da627663d91f7b94" kindref="member">magnitude</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577" refid="struct_s_d_l___haptic_periodic_1abc7aa9e9c0d546cb54189a7812fbe554" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1abc7aa9e9c0d546cb54189a7812fbe554" kindref="member">offset</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578" refid="struct_s_d_l___haptic_periodic_1a25e8c6aebc78bd74b9343fa228d25d8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1a25e8c6aebc78bd74b9343fa228d25d8f" kindref="member">phase</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Envelope<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="struct_s_d_l___haptic_periodic_1ab35eedce7107edc75640586159fe75bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1ab35eedce7107edc75640586159fe75bb" kindref="member">attack_length</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582" refid="struct_s_d_l___haptic_periodic_1a79fc2217fea6db6ab3d89ad905d52ccb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1a79fc2217fea6db6ab3d89ad905d52ccb" kindref="member">attack_level</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="583" refid="struct_s_d_l___haptic_periodic_1ae1c186d02304eae142a62dca72f50fa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1ae1c186d02304eae142a62dca72f50fa8" kindref="member">fade_length</ref>;<sp/></highlight></codeline>
<codeline lineno="584" refid="struct_s_d_l___haptic_periodic_1afa7713fc264959873f2a852fca4174fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_periodic_1afa7713fc264959873f2a852fca4174fd" kindref="member">fade_level</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="585" refid="_s_d_l__haptic_8h_1a0ebf54334ce8dbdd0f8711ca70f141a7" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__haptic_8h_1a0ebf54334ce8dbdd0f8711ca70f141a7" kindref="member">SDL_HapticPeriodic</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="611" refid="struct_s_d_l___haptic_condition" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref></highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="struct_s_d_l___haptic_condition_1a7be55a9a86c05dd1a54a3006781cfa6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1a7be55a9a86c05dd1a54a3006781cfa6f" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="616" refid="struct_s_d_l___haptic_condition_1a728507d30d18998949313de3a25e5581" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1a728507d30d18998949313de3a25e5581" kindref="member">direction</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Replay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="struct_s_d_l___haptic_condition_1ad0efb0a6ddc20f058e87199eaaa95978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1ad0efb0a6ddc20f058e87199eaaa95978" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620" refid="struct_s_d_l___haptic_condition_1aad40417980530ca8d80c62ba864a090b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1aad40417980530ca8d80c62ba864a090b" kindref="member">delay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623" refid="struct_s_d_l___haptic_condition_1acd35a9d432ad122bf7824b16974eac7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1acd35a9d432ad122bf7824b16974eac7a" kindref="member">button</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="624" refid="struct_s_d_l___haptic_condition_1aafc182abea1078bed7e9cf5d0e713ea2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1aafc182abea1078bed7e9cf5d0e713ea2" kindref="member">interval</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="struct_s_d_l___haptic_condition_1a90427a1e0d464b4b53abc1d419c97b2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1a90427a1e0d464b4b53abc1d419c97b2e" kindref="member">right_sat</ref>[3];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="628" refid="struct_s_d_l___haptic_condition_1a953448774c40818a4f47c6efea21124d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1a953448774c40818a4f47c6efea21124d" kindref="member">left_sat</ref>[3];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="629" refid="struct_s_d_l___haptic_condition_1a3de7f164ef88841255535387d0f100b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1a3de7f164ef88841255535387d0f100b6" kindref="member">right_coeff</ref>[3];<sp/><sp/></highlight></codeline>
<codeline lineno="630" refid="struct_s_d_l___haptic_condition_1a2adf52c32f60f0b6826b1e3add2eae7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1a2adf52c32f60f0b6826b1e3add2eae7a" kindref="member">left_coeff</ref>[3];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="631" refid="struct_s_d_l___haptic_condition_1af684c8eeeb719739a32723c00c5a2bbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1af684c8eeeb719739a32723c00c5a2bbd" kindref="member">deadband</ref>[3];<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="632" refid="struct_s_d_l___haptic_condition_1a8a71ec28ff5ab85246cbc59736aa2c53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref><sp/><ref refid="struct_s_d_l___haptic_condition_1a8a71ec28ff5ab85246cbc59736aa2c53" kindref="member">center</ref>[3];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633" refid="_s_d_l__haptic_8h_1af4d7e7825bf98ca5a5aa8194b77b0754" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__haptic_8h_1af4d7e7825bf98ca5a5aa8194b77b0754" kindref="member">SDL_HapticCondition</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="struct_s_d_l___haptic_ramp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___haptic_ramp" kindref="compound">SDL_HapticRamp</ref></highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651" refid="struct_s_d_l___haptic_ramp_1aca1c2349372433822ab62f60976640aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1aca1c2349372433822ab62f60976640aa" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="652" refid="struct_s_d_l___haptic_ramp_1a6fb6c67ccf262b8f3ec08bcdf08f9965" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1a6fb6c67ccf262b8f3ec08bcdf08f9965" kindref="member">direction</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Replay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="struct_s_d_l___haptic_ramp_1a57e75237507701405af2a3caf34cdb5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1a57e75237507701405af2a3caf34cdb5a" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="656" refid="struct_s_d_l___haptic_ramp_1ac9471016f41919b4a1c786bbd649a777" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1ac9471016f41919b4a1c786bbd649a777" kindref="member">delay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="struct_s_d_l___haptic_ramp_1a2027c6fd88f1ebe652c90c71410ee0bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1a2027c6fd88f1ebe652c90c71410ee0bf" kindref="member">button</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="660" refid="struct_s_d_l___haptic_ramp_1a4b89d108cfa7e96ea58b58771334c33d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1a4b89d108cfa7e96ea58b58771334c33d" kindref="member">interval</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ramp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="struct_s_d_l___haptic_ramp_1acc0e813ac6399290fd4a788d2471e8d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1acc0e813ac6399290fd4a788d2471e8d4" kindref="member">start</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="664" refid="struct_s_d_l___haptic_ramp_1a16dd3ee307795248e21ee45ba8fb4c6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1a16dd3ee307795248e21ee45ba8fb4c6c" kindref="member">end</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Envelope<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="struct_s_d_l___haptic_ramp_1adbcd7ffb05016d442c73e81cc0fcbbd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1adbcd7ffb05016d442c73e81cc0fcbbd2" kindref="member">attack_length</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="668" refid="struct_s_d_l___haptic_ramp_1a755933bbda14ae9b53c574b9fe6291a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1a755933bbda14ae9b53c574b9fe6291a0" kindref="member">attack_level</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="669" refid="struct_s_d_l___haptic_ramp_1ad58a8f7cfdf659b45f0503fc56db7436" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1ad58a8f7cfdf659b45f0503fc56db7436" kindref="member">fade_length</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="670" refid="struct_s_d_l___haptic_ramp_1a66b586f2e6a23a085a7b2854f61752c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_ramp_1a66b586f2e6a23a085a7b2854f61752c5" kindref="member">fade_level</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671" refid="_s_d_l__haptic_8h_1af967093786a8e460fc42c9b502472d85" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__haptic_8h_1af967093786a8e460fc42c9b502472d85" kindref="member">SDL_HapticRamp</ref>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="685" refid="struct_s_d_l___haptic_left_right" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___haptic_left_right" kindref="compound">SDL_HapticLeftRight</ref></highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="struct_s_d_l___haptic_left_right_1abef79eeb482a8e623e512f0c9635e1a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_left_right_1abef79eeb482a8e623e512f0c9635e1a1" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Replay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="struct_s_d_l___haptic_left_right_1a5b942fee53f1ec77d3fb91a6e89b0196" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l___haptic_left_right_1a5b942fee53f1ec77d3fb91a6e89b0196" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rumble<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="struct_s_d_l___haptic_left_right_1a8cd16fe2200ef10cc4f3b4209adef959" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_left_right_1a8cd16fe2200ef10cc4f3b4209adef959" kindref="member">large_magnitude</ref>;<sp/></highlight></codeline>
<codeline lineno="695" refid="struct_s_d_l___haptic_left_right_1aaa1f2c1e767a780e447d82efce6cd1cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_left_right_1aaa1f2c1e767a780e447d82efce6cd1cf" kindref="member">small_magnitude</ref>;<sp/></highlight></codeline>
<codeline lineno="696" refid="_s_d_l__haptic_8h_1adf5073b6a3b2129da7820e5506321542" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__haptic_8h_1adf5073b6a3b2129da7820e5506321542" kindref="member">SDL_HapticLeftRight</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="struct_s_d_l___haptic_custom" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___haptic_custom" kindref="compound">SDL_HapticCustom</ref></highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="struct_s_d_l___haptic_custom_1a98a8995c94492069dc007502ed97eed2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1a98a8995c94492069dc007502ed97eed2" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="717" refid="struct_s_d_l___haptic_custom_1ad7eb84f59404d9e0da07570b4b57dd43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_direction" kindref="compound">SDL_HapticDirection</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1ad7eb84f59404d9e0da07570b4b57dd43" kindref="member">direction</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Replay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="struct_s_d_l___haptic_custom_1ad70e8bc2cff74b99d704a757c16b363f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1ad70e8bc2cff74b99d704a757c16b363f" kindref="member">length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="721" refid="struct_s_d_l___haptic_custom_1a094229466ff4cf695860db664100a2b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1a094229466ff4cf695860db664100a2b0" kindref="member">delay</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Trigger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724" refid="struct_s_d_l___haptic_custom_1aa4fbaf7220f3197aa6631b3e64ad6562" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1aa4fbaf7220f3197aa6631b3e64ad6562" kindref="member">button</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="725" refid="struct_s_d_l___haptic_custom_1afdeb26b1709254545e00a59a0a6c360c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1afdeb26b1709254545e00a59a0a6c360c" kindref="member">interval</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Custom<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="struct_s_d_l___haptic_custom_1a560215762e9096d583d75867d9227cf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1a560215762e9096d583d75867d9227cf5" kindref="member">channels</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="729" refid="struct_s_d_l___haptic_custom_1aba7fafa808e90baddef25f009b8f4817" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1aba7fafa808e90baddef25f009b8f4817" kindref="member">period</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="730" refid="struct_s_d_l___haptic_custom_1a5905ea1b6182da846535ca8c80b4fa33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1a5905ea1b6182da846535ca8c80b4fa33" kindref="member">samples</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="731" refid="struct_s_d_l___haptic_custom_1ad5a034f97e1699eacbe3f478538537c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/>*<ref refid="struct_s_d_l___haptic_custom_1ad5a034f97e1699eacbe3f478538537c5" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Envelope<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="struct_s_d_l___haptic_custom_1a018b35d89398c26e10d1fb4315d1dda1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1a018b35d89398c26e10d1fb4315d1dda1" kindref="member">attack_length</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735" refid="struct_s_d_l___haptic_custom_1ad6e394e3775372af3eb9e02823987405" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1ad6e394e3775372af3eb9e02823987405" kindref="member">attack_level</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736" refid="struct_s_d_l___haptic_custom_1ab47fac94baeba28a3acd6c706e0b6a5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1ab47fac94baeba28a3acd6c706e0b6a5c" kindref="member">fade_length</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="737" refid="struct_s_d_l___haptic_custom_1a73a522581eb514d032e500ec6294fe50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="struct_s_d_l___haptic_custom_1a73a522581eb514d032e500ec6294fe50" kindref="member">fade_level</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="738" refid="_s_d_l__haptic_8h_1ace902fac5855f399ea16edbc2d28c8f1" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__haptic_8h_1ace902fac5855f399ea16edbc2d28c8f1" kindref="member">SDL_HapticCustom</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="union_s_d_l___haptic_effect" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref></highlight></codeline>
<codeline lineno="810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Common<sp/>for<sp/>all<sp/>force<sp/>feedback<sp/>effects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="union_s_d_l___haptic_effect_1a5ff6cfd8da91537091e9a6c2108cb179" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/><ref refid="union_s_d_l___haptic_effect_1a5ff6cfd8da91537091e9a6c2108cb179" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="813" refid="union_s_d_l___haptic_effect_1ac435275e9683d6cc5d65b9c7cc2ec659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_constant" kindref="compound">SDL_HapticConstant</ref><sp/><ref refid="union_s_d_l___haptic_effect_1ac435275e9683d6cc5d65b9c7cc2ec659" kindref="member">constant</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="814" refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_periodic" kindref="compound">SDL_HapticPeriodic</ref><sp/><ref refid="union_s_d_l___haptic_effect_1a8320ec4db6ec1dc1d30feb62ee2a2f04" kindref="member">periodic</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="815" refid="union_s_d_l___haptic_effect_1aa8fdd1ba202ccd7e61f48ef9977080d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_condition" kindref="compound">SDL_HapticCondition</ref><sp/><ref refid="union_s_d_l___haptic_effect_1aa8fdd1ba202ccd7e61f48ef9977080d2" kindref="member">condition</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="816" refid="union_s_d_l___haptic_effect_1a1d32ef4c2d1cc89dc938b392f6ad81bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_ramp" kindref="compound">SDL_HapticRamp</ref><sp/><ref refid="union_s_d_l___haptic_effect_1a1d32ef4c2d1cc89dc938b392f6ad81bd" kindref="member">ramp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="817" refid="union_s_d_l___haptic_effect_1a3c254b81c1ff41c7888eee0cd0076a12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_left_right" kindref="compound">SDL_HapticLeftRight</ref><sp/><ref refid="union_s_d_l___haptic_effect_1a3c254b81c1ff41c7888eee0cd0076a12" kindref="member">leftright</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="818" refid="union_s_d_l___haptic_effect_1a0b2d2af28c515cc39896b2b7c23019d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___haptic_custom" kindref="compound">SDL_HapticCustom</ref><sp/><ref refid="union_s_d_l___haptic_effect_1a0b2d2af28c515cc39896b2b7c23019d2" kindref="member">custom</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="819" refid="_s_d_l__haptic_8h_1a7a4688cc52c09110c97e65c2f11072ee" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__haptic_8h_1a7a4688cc52c09110c97e65c2f11072ee" kindref="member">SDL_HapticEffect</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="834" refid="_s_d_l__haptic_8h_1a6f538063a9f1d790882c0d3a81c302cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a6f538063a9f1d790882c0d3a81c302cd" kindref="member">SDL_NumHaptics</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="_s_d_l__haptic_8h_1ac471a69170328585193066cc9d9ff482" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1ac471a69170328585193066cc9d9ff482" kindref="member">SDL_HapticName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="877" refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1aa075e2777c811ecdd2ca53d49288555e" kindref="member">SDL_HapticOpen</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="_s_d_l__haptic_8h_1a24d8f221d4b2eae5c3c663752fc0d66a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a24d8f221d4b2eae5c3c663752fc0d66a" kindref="member">SDL_HapticOpened</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_index);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="905" refid="_s_d_l__haptic_8h_1aacee621c474cda53e56f4a2233c65407" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1aacee621c474cda53e56f4a2233c65407" kindref="member">SDL_HapticIndex</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="916" refid="_s_d_l__haptic_8h_1a8fcc0fb333baed629004bd8c0c66bd76" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a8fcc0fb333baed629004bd8c0c66bd76" kindref="member">SDL_MouseIsHaptic</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="_s_d_l__haptic_8h_1a303d13b149b6dc4cabe07fb799333581" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a303d13b149b6dc4cabe07fb799333581" kindref="member">SDL_HapticOpenFromMouse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="943" refid="_s_d_l__haptic_8h_1a8a2966d363cba55ffdfeff42e4204ef1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a8a2966d363cba55ffdfeff42e4204ef1" kindref="member">SDL_JoystickIsHaptic</ref>(<ref refid="_s_d_l__joystick_8h_1a1246a982e91df301042a77e65c694987" kindref="member">SDL_Joystick</ref><sp/>*<sp/>joystick);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="_s_d_l__haptic_8h_1a865ecbbf4869868e401c182952994ea0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a865ecbbf4869868e401c182952994ea0" kindref="member">SDL_HapticOpenFromJoystick</ref>(<ref refid="_s_d_l__joystick_8h_1a1246a982e91df301042a77e65c694987" kindref="member">SDL_Joystick</ref><sp/>*</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joystick);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a671599fd69f5a08cdd2ba7e3f1ae456a" kindref="member">SDL_HapticClose</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="996" refid="_s_d_l__haptic_8h_1afc6e5a5701fe80004d529d762132ad6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1afc6e5a5701fe80004d529d762132ad6b" kindref="member">SDL_HapticNumEffects</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013" refid="_s_d_l__haptic_8h_1a255e1e6fc27489080bcbbd3c7fadc6db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a255e1e6fc27489080bcbbd3c7fadc6db" kindref="member">SDL_HapticNumEffectsPlaying</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027" refid="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a8192e1220a834e708959539fa1c3f490" kindref="member">SDL_HapticQuery</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042" refid="_s_d_l__haptic_8h_1ad6705645197f6df4eeeea32392462483" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1ad6705645197f6df4eeeea32392462483" kindref="member">SDL_HapticNumAxes</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="_s_d_l__haptic_8h_1ae333ef77753ba700875fa20858b9021d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1ae333ef77753ba700875fa20858b9021d" kindref="member">SDL_HapticEffectSupported</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref><sp/>*</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>effect);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077" refid="_s_d_l__haptic_8h_1a176c52ff4b77b63cb94ea83f8f4183ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a176c52ff4b77b63cb94ea83f8f4183ad" kindref="member">SDL_HapticNewEffect</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref><sp/>*<sp/>effect);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101" refid="_s_d_l__haptic_8h_1a4c212cbdb3487dd8d72882d355a19472" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a4c212cbdb3487dd8d72882d355a19472" kindref="member">SDL_HapticUpdateEffect</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effect,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_s_d_l___haptic_effect" kindref="compound">SDL_HapticEffect</ref><sp/>*<sp/><ref refid="_s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127" refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a1cd1294768bb00f35b77f67031a8a9cb" kindref="member">SDL_HapticRunEffect</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effect,</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/>iterations);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146" refid="_s_d_l__haptic_8h_1a27b35e361aaafa830561e98328c98c8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a27b35e361aaafa830561e98328c98c8e" kindref="member">SDL_HapticStopEffect</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effect);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162" refid="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a0bb35fea7c4c08c9bcb80e0bcfa1799f" kindref="member">SDL_HapticDestroyEffect</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effect);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180" refid="_s_d_l__haptic_8h_1ae2185c0814f107dd5851dd743e9ea71c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1ae2185c0814f107dd5851dd743e9ea71c" kindref="member">SDL_HapticGetEffectStatus</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>effect);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202" refid="_s_d_l__haptic_8h_1a2a90e7cefab3fdecf37e2f1b956a9e73" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a2a90e7cefab3fdecf37e2f1b956a9e73" kindref="member">SDL_HapticSetGain</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gain);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221" refid="_s_d_l__haptic_8h_1a0b0d63aa4513fc1b12939500cb3f8a76" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a0b0d63aa4513fc1b12939500cb3f8a76" kindref="member">SDL_HapticSetAutocenter</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>autocenter);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241" refid="_s_d_l__haptic_8h_1af0181e59ecd14c6aecd1fd3c5099330a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1af0181e59ecd14c6aecd1fd3c5099330a" kindref="member">SDL_HapticPause</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256" refid="_s_d_l__haptic_8h_1a3593eed87aee3b9caa1c25927002c5ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a3593eed87aee3b9caa1c25927002c5ae" kindref="member">SDL_HapticUnpause</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267" refid="_s_d_l__haptic_8h_1aad427170295d6b88a5a94cd6a491797a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1aad427170295d6b88a5a94cd6a491797a" kindref="member">SDL_HapticStopAll</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283" refid="_s_d_l__haptic_8h_1aa0754b11e2aed38bc955750c7a6a6c73" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1aa0754b11e2aed38bc955750c7a6a6c73" kindref="member">SDL_HapticRumbleSupported</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299" refid="_s_d_l__haptic_8h_1af44cbecefe14da5a7476013ce06f38b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1af44cbecefe14da5a7476013ce06f38b9" kindref="member">SDL_HapticRumbleInit</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316" refid="_s_d_l__haptic_8h_1a971b5651414202f89a8c6eed640e990d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a971b5651414202f89a8c6eed640e990d" kindref="member">SDL_HapticRumblePlay</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>strength,<sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1ab9c919755bde3b34349e23a32b4e0fa7" kindref="member">length</ref><sp/>);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331" refid="_s_d_l__haptic_8h_1a9e11ff3ae40f59c04be3bae98d8d05ba" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__haptic_8h_1a9e11ff3ae40f59c04be3bae98d8d05ba" kindref="member">SDL_HapticRumbleStop</ref>(<ref refid="_s_d_l__haptic_8h_1a79db098a0e8cb102db6c2339a2422e29" kindref="member">SDL_Haptic</ref><sp/>*<sp/>haptic);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_haptic_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_haptic.h"/>
  </compounddef>
</doxygen>
