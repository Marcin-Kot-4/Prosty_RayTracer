<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_r_t_1_1_simple_refractive" kind="class" language="C++" prot="public">
    <compoundname>RT::SimpleRefractive</compoundname>
    <basecompoundref refid="class_r_t_1_1_material_base" prot="public" virt="non-virtual">RT::MaterialBase</basecompoundref>
    <includes refid="simplerefractive_8h" local="no">simplerefractive.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_r_t_1_1_simple_refractive_1a6f9238bb78392356c462686dd7abe34d" prot="public" static="no" mutable="no">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt;</type>
        <definition>qbVector&lt;double&gt; RT::SimpleRefractive::m_baseColor</definition>
        <argsstring></argsstring>
        <name>m_baseColor</name>
        <qualifiedname>RT::SimpleRefractive::m_baseColor</qualifiedname>
        <initializer>{std::vector &lt; double &gt; {1.0, 0.0, 1.0}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="39" column="18" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_t_1_1_simple_refractive_1ac34ea618840abeaeebc8db3c7026893a" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double RT::SimpleRefractive::m_reflectivity</definition>
        <argsstring></argsstring>
        <name>m_reflectivity</name>
        <qualifiedname>RT::SimpleRefractive::m_reflectivity</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="40" column="16" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_t_1_1_simple_refractive_1adc4c409f615d47f4685da63ff81be3e7" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double RT::SimpleRefractive::m_shininess</definition>
        <argsstring></argsstring>
        <name>m_shininess</name>
        <qualifiedname>RT::SimpleRefractive::m_shininess</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="41" column="16" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_t_1_1_simple_refractive_1a89bcff2b1ad242c6c38e97c702ad6500" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double RT::SimpleRefractive::m_translucency</definition>
        <argsstring></argsstring>
        <name>m_translucency</name>
        <qualifiedname>RT::SimpleRefractive::m_translucency</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="42" column="16" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_r_t_1_1_simple_refractive_1a64d4ca05e7d5f500baebef4f094d580a" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double RT::SimpleRefractive::m_ior</definition>
        <argsstring></argsstring>
        <name>m_ior</name>
        <qualifiedname>RT::SimpleRefractive::m_ior</qualifiedname>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="44" column="16" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_r_t_1_1_simple_refractive_1aac5b29fd159aa8a7dc0ccef01509f5c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RT::SimpleRefractive::SimpleRefractive</definition>
        <argsstring>()</argsstring>
        <name>SimpleRefractive</name>
        <qualifiedname>RT::SimpleRefractive::SimpleRefractive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="13" column="9" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.cpp" bodystart="4" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="class_r_t_1_1_simple_refractive_1a8d59f1bd70c33c5144ae5f90d839a40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>RT::SimpleRefractive::~SimpleRefractive</definition>
        <argsstring>() override</argsstring>
        <name>~SimpleRefractive</name>
        <qualifiedname>RT::SimpleRefractive::~SimpleRefractive</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="16" column="17" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_r_t_1_1_simple_refractive_1a988530ca94a0cf72b9035f74c4527f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt;</type>
        <definition>qbVector&lt; double &gt; RT::SimpleRefractive::ComputeColor</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; RT::ObjectBase &gt; &gt; &amp;objectList, const std::vector&lt; std::shared_ptr&lt; RT::LightBase &gt; &gt; &amp;lightList, const std::shared_ptr&lt; RT::ObjectBase &gt; &amp;currentObject, const qbVector&lt; double &gt; &amp;intPoint, const qbVector&lt; double &gt; &amp;localNormal, const RT::Ray &amp;cameraRay) override</argsstring>
        <name>ComputeColor</name>
        <qualifiedname>RT::SimpleRefractive::ComputeColor</qualifiedname>
        <reimplements refid="class_r_t_1_1_material_base_1aa8b05496fa1fed6988efd524eb5dbe48">ComputeColor</reimplements>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="class_r_t_1_1_object_base" kindref="compound">RT::ObjectBase</ref> &gt; &gt; &amp;</type>
          <declname>objectList</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="class_r_t_1_1_light_base" kindref="compound">RT::LightBase</ref> &gt; &gt; &amp;</type>
          <declname>lightList</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_r_t_1_1_object_base" kindref="compound">RT::ObjectBase</ref> &gt; &amp;</type>
          <declname>currentObject</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt; &amp;</type>
          <declname>intPoint</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt; &amp;</type>
          <declname>localNormal</declname>
        </param>
        <param>
          <type>const <ref refid="class_r_t_1_1_ray" kindref="compound">RT::Ray</ref> &amp;</type>
          <declname>cameraRay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="19" column="26" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.cpp" bodystart="14" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_r_t_1_1_simple_refractive_1a9f62cb48d9ca6bba4425ad0b9a6a570d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt;</type>
        <definition>qbVector&lt; double &gt; RT::SimpleRefractive::ComputeSpecular</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; RT::ObjectBase &gt; &gt; &amp;objectList, const std::vector&lt; std::shared_ptr&lt; RT::LightBase &gt; &gt; &amp;lightList, const qbVector&lt; double &gt; &amp;intPoint, const qbVector&lt; double &gt; &amp;localNormal, const RT::Ray &amp;cameraRay)</argsstring>
        <name>ComputeSpecular</name>
        <qualifiedname>RT::SimpleRefractive::ComputeSpecular</qualifiedname>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="class_r_t_1_1_object_base" kindref="compound">RT::ObjectBase</ref> &gt; &gt; &amp;</type>
          <declname>objectList</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="class_r_t_1_1_light_base" kindref="compound">RT::LightBase</ref> &gt; &gt; &amp;</type>
          <declname>lightList</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt; &amp;</type>
          <declname>intPoint</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt; &amp;</type>
          <declname>localNormal</declname>
        </param>
        <param>
          <type>const <ref refid="class_r_t_1_1_ray" kindref="compound">RT::Ray</ref> &amp;</type>
          <declname>cameraRay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="26" column="18" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.cpp" bodystart="146" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_r_t_1_1_simple_refractive_1a37c12415266512f2872cda06d371a5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt;</type>
        <definition>qbVector&lt; double &gt; RT::SimpleRefractive::ComputeTranslucency</definition>
        <argsstring>(const std::vector&lt; std::shared_ptr&lt; RT::ObjectBase &gt; &gt; &amp;objectList, const std::vector&lt; std::shared_ptr&lt; RT::LightBase &gt; &gt; &amp;lightList, const std::shared_ptr&lt; RT::ObjectBase &gt; &amp;currentObject, const qbVector&lt; double &gt; &amp;intPoint, const qbVector&lt; double &gt; &amp;localNormal, const RT::Ray &amp;incidentRay)</argsstring>
        <name>ComputeTranslucency</name>
        <qualifiedname>RT::SimpleRefractive::ComputeTranslucency</qualifiedname>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="class_r_t_1_1_object_base" kindref="compound">RT::ObjectBase</ref> &gt; &gt; &amp;</type>
          <declname>objectList</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="class_r_t_1_1_light_base" kindref="compound">RT::LightBase</ref> &gt; &gt; &amp;</type>
          <declname>lightList</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_r_t_1_1_object_base" kindref="compound">RT::ObjectBase</ref> &gt; &amp;</type>
          <declname>currentObject</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt; &amp;</type>
          <declname>intPoint</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; double &gt; &amp;</type>
          <declname>localNormal</declname>
        </param>
        <param>
          <type>const <ref refid="class_r_t_1_1_ray" kindref="compound">RT::Ray</ref> &amp;</type>
          <declname>incidentRay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="32" column="18" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.cpp" bodystart="60" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>RT::MaterialBase</label>
        <link refid="class_r_t_1_1_material_base"/>
      </node>
      <node id="1">
        <label>RT::SimpleRefractive</label>
        <link refid="class_r_t_1_1_simple_refractive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>RT::MaterialBase</label>
        <link refid="class_r_t_1_1_material_base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_ambientColor</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>RT::SimpleRefractive</label>
        <link refid="class_r_t_1_1_simple_refractive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_baseColor</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>qbVector&lt; double &gt;</label>
        <link refid="classqb_vector"/>
      </node>
    </collaborationgraph>
    <location file="D:/RayTracing/RayTrace/Materials/simplerefractive.h" line="10" column="5" bodyfile="D:/RayTracing/RayTrace/Materials/simplerefractive.h" bodystart="10" bodyend="46"/>
    <listofallmembers>
      <member refid="class_r_t_1_1_material_base_1a6a1070eefc722456176a821f447e6ef2" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>AssignTexture</name></member>
      <member refid="class_r_t_1_1_material_base_1ac7549ffbbac551a9e343a3d1a29c30b4" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>CastRay</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1a988530ca94a0cf72b9035f74c4527f96" prot="public" virt="virtual"><scope>RT::SimpleRefractive</scope><name>ComputeColor</name></member>
      <member refid="class_r_t_1_1_material_base_1a2a8f6d812302097b550388ed3deed6b7" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>ComputeDiffuseColor</name></member>
      <member refid="class_r_t_1_1_material_base_1a5981b94c2858393d5d3308e4fe047768" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>ComputeReflectionColor</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1a9f62cb48d9ca6bba4425ad0b9a6a570d" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>ComputeSpecular</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1a37c12415266512f2872cda06d371a5ef" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>ComputeTranslucency</name></member>
      <member refid="class_r_t_1_1_material_base_1a97579f592fb17d8077e16e2b48d6e826" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_ambientColor</name></member>
      <member refid="class_r_t_1_1_material_base_1a6297b836279524bc2772b3a066f1a5d8" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_ambientIntensity</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1a6f9238bb78392356c462686dd7abe34d" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_baseColor</name></member>
      <member refid="class_r_t_1_1_material_base_1acbde6abdad78b526022475a8e2b39d2a" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_hasTexture</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1a64d4ca05e7d5f500baebef4f094d580a" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_ior</name></member>
      <member refid="class_r_t_1_1_material_base_1a2e2661a371b1689d72d929ca21f8e8eb" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_maxReflectionRays</name></member>
      <member refid="class_r_t_1_1_material_base_1acb27faf3834b1db091139c8a970ea4bc" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_reflectionRayCount</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1ac34ea618840abeaeebc8db3c7026893a" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_reflectivity</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1adc4c409f615d47f4685da63ff81be3e7" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_shininess</name></member>
      <member refid="class_r_t_1_1_material_base_1a22c94fe436f4b7944381238983ec0472" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_textureList</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1a89bcff2b1ad242c6c38e97c702ad6500" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>m_translucency</name></member>
      <member refid="class_r_t_1_1_material_base_1afc66df6eff4e978f498e541b1750221c" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>MaterialBase</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1aac5b29fd159aa8a7dc0ccef01509f5c5" prot="public" virt="non-virtual"><scope>RT::SimpleRefractive</scope><name>SimpleRefractive</name></member>
      <member refid="class_r_t_1_1_material_base_1a68eb6a4d3a0c5fd01f858c4a217e6187" prot="public" virt="virtual"><scope>RT::SimpleRefractive</scope><name>~MaterialBase</name></member>
      <member refid="class_r_t_1_1_simple_refractive_1a8d59f1bd70c33c5144ae5f90d839a40c" prot="public" virt="virtual"><scope>RT::SimpleRefractive</scope><name>~SimpleRefractive</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
