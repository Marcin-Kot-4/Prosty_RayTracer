<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__version_8h" kind="file" language="C++">
    <compoundname>SDL_version.h</compoundname>
    <includes refid="_s_d_l__stdinc_8h" local="yes">SDL_stdinc.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l_8h" local="yes">D:/RayTracing/include/SDL.h</includedby>
    <includedby refid="_s_d_l__syswm_8h" local="yes">D:/RayTracing/include/SDL_syswm.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_version.h</label>
        <link refid="_s_d_l__version_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="6">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="3">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="6">
        <label>D:/RayTracing/RayTrace/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/include/SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>D:/RayTracing/include/SDL_syswm.h</label>
        <link refid="_s_d_l__syswm_8h"/>
      </node>
      <node id="12">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="13">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/RayTracing/include/SDL_test_compare.h</label>
        <link refid="_s_d_l__test__compare_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>D:/RayTracing/include/SDL_test_images.h</label>
        <link refid="_s_d_l__test__images_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_version.h</label>
        <link refid="_s_d_l__version_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_s_d_l__version" prot="public">SDL_version</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_l__version_8h_1a8fc808626be61507ade364b399f81468" prot="public" static="no">
        <name>SDL_MAJOR_VERSION</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="60" column="9" bodyfile="D:/RayTracing/include/SDL_version.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__version_8h_1a2dd98e1cec119d54322cd9c8ea685c5c" prot="public" static="no">
        <name>SDL_MINOR_VERSION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="61" column="9" bodyfile="D:/RayTracing/include/SDL_version.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__version_8h_1a84a0602cb43e6d9cefbdc119336019d5" prot="public" static="no">
        <name>SDL_PATCHLEVEL</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="62" column="9" bodyfile="D:/RayTracing/include/SDL_version.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__version_8h_1a7154bc5c2a95a644b5187e4225cdcbd0" prot="public" static="no">
        <name>SDL_VERSION</name>
        <param><defname>x</defname></param>
        <initializer>{                                   \
    (<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>)-&gt;major = <ref refid="_s_d_l__version_8h_1a8fc808626be61507ade364b399f81468" kindref="member">SDL_MAJOR_VERSION</ref>;                 \
    (<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>)-&gt;minor = <ref refid="_s_d_l__version_8h_1a2dd98e1cec119d54322cd9c8ea685c5c" kindref="member">SDL_MINOR_VERSION</ref>;                 \
    (<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>)-&gt;patch = <ref refid="_s_d_l__version_8h_1a84a0602cb43e6d9cefbdc119336019d5" kindref="member">SDL_PATCHLEVEL</ref>;                    \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro to determine SDL version program was compiled against.</para>
<para>This macro fills in a <ref refid="struct_s_d_l__version" kindref="compound">SDL_version</ref> structure with the version of the library you compiled against. This is determined by what header the compiler uses. Note that if you dynamically linked the library, you might have a slightly newer or older version at runtime. That version can be determined with <ref refid="_s_d_l__version_8h_1a4204ecbb600f51ee50515979e60bf8f3" kindref="member">SDL_GetVersion()</ref>, which, unlike <ref refid="_s_d_l__version_8h_1a7154bc5c2a95a644b5187e4225cdcbd0" kindref="member">SDL_VERSION()</ref>, is not a macro.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_s_d_l__version" kindref="compound">SDL_version</ref> struct to initialize.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="struct_s_d_l__version" kindref="compound">SDL_version</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__version_8h_1a4204ecbb600f51ee50515979e60bf8f3" kindref="member">SDL_GetVersion</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="79" column="9" bodyfile="D:/RayTracing/include/SDL_version.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__version_8h_1af77ec4d486c3401e48689a016d304e73" prot="public" static="no">
        <name>SDL_VERSIONNUM</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <param><defname>Z</defname></param>
        <initializer>    ((X)*1000 + (Y)*100 + (Z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This macro turns the version numbers into a numeric value: <verbatim>(1,2,3) -&gt; (1203)
</verbatim></para>
<para>This assumes that there will never be more than 100 patchlevels. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="94" column="9" bodyfile="D:/RayTracing/include/SDL_version.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__version_8h_1a75227c9b9ca2b4015e4697971712f16c" prot="public" static="no">
        <name>SDL_COMPILEDVERSION</name>
        <initializer>    <ref refid="_s_d_l__version_8h_1af77ec4d486c3401e48689a016d304e73" kindref="member">SDL_VERSIONNUM</ref>(<ref refid="_s_d_l__version_8h_1a8fc808626be61507ade364b399f81468" kindref="member">SDL_MAJOR_VERSION</ref>, <ref refid="_s_d_l__version_8h_1a2dd98e1cec119d54322cd9c8ea685c5c" kindref="member">SDL_MINOR_VERSION</ref>, <ref refid="_s_d_l__version_8h_1a84a0602cb43e6d9cefbdc119336019d5" kindref="member">SDL_PATCHLEVEL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the version number macro for the current SDL version. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="100" column="9" bodyfile="D:/RayTracing/include/SDL_version.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__version_8h_1a44836f955b961ba74c8c5125af4c9b91" prot="public" static="no">
        <name>SDL_VERSION_ATLEAST</name>
        <param><defname>X</defname></param>
        <param><defname>Y</defname></param>
        <param><defname>Z</defname></param>
        <initializer>    (<ref refid="_s_d_l__version_8h_1a75227c9b9ca2b4015e4697971712f16c" kindref="member">SDL_COMPILEDVERSION</ref> &gt;= <ref refid="_s_d_l__version_8h_1af77ec4d486c3401e48689a016d304e73" kindref="member">SDL_VERSIONNUM</ref>(X, Y, Z))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This macro will evaluate to true if compiled with SDL at least X.Y.Z. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="106" column="9" bodyfile="D:/RayTracing/include/SDL_version.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_d_l__version_8h_1ab9a870099fb4c3c2ffc926a067b5243e" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l__version" kindref="compound">SDL_version</ref></type>
        <definition>typedef struct SDL_version SDL_version</definition>
        <argsstring></argsstring>
        <name>SDL_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Information about the version of SDL in use.</para>
<para>Represents the library&apos;s version as three levels: major revision (increments with massive changes, additions, and enhancements), minor revision (increments with backwards-compatible changes to the major revision), and patchlevel (increments with fixes to the minor revision).</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__version_8h_1a7154bc5c2a95a644b5187e4225cdcbd0" kindref="member">SDL_VERSION</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__version_8h_1a4204ecbb600f51ee50515979e60bf8f3" kindref="member">SDL_GetVersion</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="56" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_l__version_8h_1a4204ecbb600f51ee50515979e60bf8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GetVersion</definition>
        <argsstring>(SDL_version *ver)</argsstring>
        <name>SDL_GetVersion</name>
        <param>
          <type><ref refid="struct_s_d_l__version" kindref="compound">SDL_version</ref> *</type>
          <declname>ver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the version of SDL that is linked against your program.</para>
<para>If you are linking to SDL dynamically, then it is possible that the current version will be different than the version you compiled against. This function returns the current version, while <ref refid="_s_d_l__version_8h_1a7154bc5c2a95a644b5187e4225cdcbd0" kindref="member">SDL_VERSION()</ref> is a macro that tells you what version you compiled with.</para>
<para>This function may be called safely at any time, even before <ref refid="_s_d_l_8h_1a8fc8d35348d7c74bad8392d776c937b8" kindref="member">SDL_Init()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ver</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_s_d_l__version" kindref="compound">SDL_version</ref> structure that contains the version information</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__version_8h_1a2bfe0579c07429a1090fdcc42a49460d" kindref="member">SDL_GetRevision</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="125" column="30" declfile="D:/RayTracing/include/SDL_version.h" declline="125" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__version_8h_1a2bfe0579c07429a1090fdcc42a49460d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_GetRevision</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetRevision</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the code revision of SDL that is linked against your program.</para>
<para>This value is the revision of the code you are linked with and may be different from the code you are compiling with, which is found in the constant SDL_REVISION.</para>
<para>The revision is arbitrary string (a hash value) uniquely identifying the exact revision of the SDL library in use, and is only useful in comparing against other revisions. It is NOT an incrementing number.</para>
<para>If SDL wasn&apos;t built from a git repository with the appropriate tools, this will return an empty string.</para>
<para>Prior to SDL 2.0.16, before development moved to GitHub, this returned a hash for a Mercurial repository.</para>
<para>You shouldn&apos;t use this function for anything but logging it for debugging purposes. The string is not intended to be reliable in any way.</para>
<para><simplesect kind="return"><para>an arbitrary string, uniquely identifying the exact revision of the SDL library in use.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__version_8h_1a4204ecbb600f51ee50515979e60bf8f3" kindref="member">SDL_GetVersion</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="154" column="36" declfile="D:/RayTracing/include/SDL_version.h" declline="154" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__version_8h_1a3aaf4a973a60915fd9a30de51b17c3e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1ace2a23221522c1222ee165136d2c316c" kindref="member">SDL_DEPRECATED</ref> <ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>SDL_DEPRECATED DECLSPEC int SDLCALL SDL_GetRevisionNumber</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetRevisionNumber</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obsolete function, do not use.</para>
<para>When SDL was hosted in a Mercurial repository, and was built carefully, this would return the revision number that the build was created from. This number was not reliable for several reasons, but more importantly, SDL is now hosted in a git repository, which does not offer numbers at all, only hashes. This function only ever returns zero now. Don&apos;t use it.</para>
<para>Before SDL 2.0.16, this might have returned an unreliable, but non-zero number.</para>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="_s_d_l__version_8h_1a2bfe0579c07429a1090fdcc42a49460d" kindref="member">SDL_GetRevision()</ref> instead; if SDL was carefully built, it will return a git hash.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>zero, always, in modern SDL releases.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__version_8h_1a2bfe0579c07429a1090fdcc42a49460d" kindref="member">SDL_GetRevision</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_version.h" line="177" column="44" declfile="D:/RayTracing/include/SDL_version.h" declline="177" declcolumn="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This header defines the current SDL version. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_version_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_version_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__stdinc_8h" kindref="compound">SDL_stdinc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_s_d_l__version" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l__version" kindref="compound">SDL_version</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="struct_s_d_l__version_1ad7d7674532073eed237b90f546c97cd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/><ref refid="struct_s_d_l__version_1ad7d7674532073eed237b90f546c97cd0" kindref="member">major</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="struct_s_d_l__version_1a6c35c7bf80245028d5970e6a504ecf57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/><ref refid="struct_s_d_l__version_1a6c35c7bf80245028d5970e6a504ecf57" kindref="member">minor</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="struct_s_d_l__version_1aa6dacff18edee8cd037c773b843be0f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/><ref refid="struct_s_d_l__version_1aa6dacff18edee8cd037c773b843be0f1" kindref="member">patch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="_s_d_l__version_8h_1ab9a870099fb4c3c2ffc926a067b5243e" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__version_8h_1ab9a870099fb4c3c2ffc926a067b5243e" kindref="member">SDL_version</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Printable<sp/>format:<sp/>&quot;%d.%d.%d&quot;,<sp/>MAJOR,<sp/>MINOR,<sp/>PATCHLEVEL</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_s_d_l__version_8h_1a8fc808626be61507ade364b399f81468" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAJOR_VERSION<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="_s_d_l__version_8h_1a2dd98e1cec119d54322cd9c8ea685c5c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MINOR_VERSION<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_s_d_l__version_8h_1a84a0602cb43e6d9cefbdc119336019d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PATCHLEVEL<sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="_s_d_l__version_8h_1a7154bc5c2a95a644b5187e4225cdcbd0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_VERSION(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(x)-&gt;major<sp/>=<sp/>SDL_MAJOR_VERSION;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(x)-&gt;minor<sp/>=<sp/>SDL_MINOR_VERSION;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(x)-&gt;patch<sp/>=<sp/>SDL_PATCHLEVEL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="_s_d_l__version_8h_1af77ec4d486c3401e48689a016d304e73" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_VERSIONNUM(X,<sp/>Y,<sp/>Z)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((X)*1000<sp/>+<sp/>(Y)*100<sp/>+<sp/>(Z))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="_s_d_l__version_8h_1a75227c9b9ca2b4015e4697971712f16c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_COMPILEDVERSION<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SDL_VERSIONNUM(SDL_MAJOR_VERSION,<sp/>SDL_MINOR_VERSION,<sp/>SDL_PATCHLEVEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="_s_d_l__version_8h_1a44836f955b961ba74c8c5125af4c9b91" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_VERSION_ATLEAST(X,<sp/>Y,<sp/>Z)<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(SDL_COMPILEDVERSION<sp/>&gt;=<sp/>SDL_VERSIONNUM(X,<sp/>Y,<sp/>Z))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="_s_d_l__version_8h_1a4204ecbb600f51ee50515979e60bf8f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__version_8h_1a4204ecbb600f51ee50515979e60bf8f3" kindref="member">SDL_GetVersion</ref>(<ref refid="struct_s_d_l__version" kindref="compound">SDL_version</ref><sp/>*<sp/>ver);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="_s_d_l__version_8h_1a2bfe0579c07429a1090fdcc42a49460d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__version_8h_1a2bfe0579c07429a1090fdcc42a49460d" kindref="member">SDL_GetRevision</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="_s_d_l__version_8h_1a3aaf4a973a60915fd9a30de51b17c3e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1ace2a23221522c1222ee165136d2c316c" kindref="member">SDL_DEPRECATED</ref><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__version_8h_1a3aaf4a973a60915fd9a30de51b17c3e4" kindref="member">SDL_GetRevisionNumber</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_version_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_version.h"/>
  </compounddef>
</doxygen>
