<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="qb_e_i_g_8h" kind="file" language="C++">
    <compoundname>qbEIG.h</compoundname>
    <includes local="no">stdexcept</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">math.h</includes>
    <includes local="no">vector</includes>
    <includes refid="qb_matrix_8h" local="yes">qbMatrix.h</includes>
    <includes refid="qb_vector_8h" local="yes">qbVector.h</includes>
    <includes refid="qb_q_r_8h" local="yes">qbQR.h</includes>
    <includedby refid="qb_p_c_a_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbPCA.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h</label>
        <link refid="qb_e_i_g_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>qbMatrix.h</label>
        <link refid="qb_matrix_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>qbQR.h</label>
        <link refid="qb_q_r_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>qbVector.h</label>
        <link refid="qb_vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>exception</label>
      </node>
      <node id="4">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h</label>
        <link refid="qb_e_i_g_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbPCA.h</label>
        <link refid="qb_p_c_a_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="qb_e_i_g_8h_1a11d1d7426a4145998cfe6b22c42fb482" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int QBEIG_MATRIXNOTSQUARE</definition>
        <argsstring></argsstring>
        <name>QBEIG_MATRIXNOTSQUARE</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" line="19" column="15" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qb_e_i_g_8h_1abc41bacc5dd2ce027cd016cfab0fd284" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int QBEIG_MAXITERATIONSEXCEEDED</definition>
        <argsstring></argsstring>
        <name>QBEIG_MAXITERATIONSEXCEEDED</name>
        <initializer>= -2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" line="20" column="15" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="qb_e_i_g_8h_1a4be8e1e3b0be4c2a155cf84b83b78fca" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int QBEIG_MATRIXNOTSYMMETRIC</definition>
        <argsstring></argsstring>
        <name>QBEIG_MATRIXNOTSYMMETRIC</name>
        <initializer>= -3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" line="21" column="15" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="qb_e_i_g_8h_1a9212bbed3a221741a725494e8c7367d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int qbEigQR</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;inputMatrix, std::vector&lt; T &gt; &amp;eigenValues)</argsstring>
        <name>qbEigQR</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>inputMatrix</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>eigenValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" line="29" column="5" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" bodystart="29" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="qb_e_i_g_8h_1a947c6e89bfc37d51c19989d1d5db03b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int qbInvPIt</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;inputMatrix, const T &amp;eigenValue, qbVector&lt; T &gt; &amp;eigenVector)</argsstring>
        <name>qbInvPIt</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>inputMatrix</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>eigenValue</declname>
        </param>
        <param>
          <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>eigenVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" line="89" column="5" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" bodystart="89" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="qb_e_i_g_8h_1aecca96c88b78c9535eb65a9cebe3f5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int qbEIG_PIt</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;X, T &amp;eigenValue, qbVector&lt; T &gt; &amp;eigenVector)</argsstring>
        <name>qbEIG_PIt</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>eigenValue</declname>
        </param>
        <param>
          <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>eigenVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" line="155" column="5" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h" bodystart="155" bodyend="211"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>qbLinAlg<sp/>linear<sp/>algebra<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2021<sp/>Michael<sp/>Bennett</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIT<sp/>license</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QBEIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QBEIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qb_matrix_8h" kindref="compound">qbMatrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qb_vector_8h" kindref="compound">qbVector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qb_q_r_8h" kindref="compound">qbQR.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>error<sp/>codes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="qb_e_i_g_8h_1a11d1d7426a4145998cfe6b22c42fb482" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1a11d1d7426a4145998cfe6b22c42fb482" kindref="member">QBEIG_MATRIXNOTSQUARE</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="20" refid="qb_e_i_g_8h_1abc41bacc5dd2ce027cd016cfab0fd284" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1abc41bacc5dd2ce027cd016cfab0fd284" kindref="member">QBEIG_MAXITERATIONSEXCEEDED</ref><sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="21" refid="qb_e_i_g_8h_1a4be8e1e3b0be4c2a155cf84b83b78fca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1a4be8e1e3b0be4c2a155cf84b83b78fca" kindref="member">QBEIG_MATRIXNOTSYMMETRIC</ref><sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>estimate<sp/>(real)<sp/>eigenvalues<sp/>using<sp/>QR<sp/>decomposition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>this<sp/>is<sp/>only<sp/>valid<sp/>for<sp/>matrices<sp/>that<sp/>have<sp/>ALL<sp/>real</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>eigenvalues.<sp/>The<sp/>only<sp/>matrices<sp/>that<sp/>are<sp/>guaranteed<sp/>to<sp/>have<sp/>only</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>real<sp/>eigenvalues<sp/>are<sp/>symmetric<sp/>matrices.<sp/>Therefore,<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>only<sp/>guaranteed<sp/>to<sp/>work<sp/>with<sp/>symmetric<sp/>matrices.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="29" refid="qb_e_i_g_8h_1a9212bbed3a221741a725494e8c7367d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1a9212bbed3a221741a725494e8c7367d1" kindref="member">qbEigQR</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;inputMatrix,<sp/>std::vector&lt;T&gt;<sp/>&amp;eigenValues)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>input<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>A<sp/>=<sp/>inputMatrix;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>input<sp/>matrix<sp/>is<sp/>square.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!A.<ref refid="classqb_matrix2_1ae3e42b917e3127cab56b7a48faff25c3" kindref="member">IsSquare</ref>())</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1a11d1d7426a4145998cfe6b22c42fb482" kindref="member">QBEIG_MATRIXNOTSQUARE</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>matrix<sp/>is<sp/>symmetric.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!A.<ref refid="classqb_matrix2_1a38c5e541fec532600806ac4fd8afecb2" kindref="member">IsSymmetric</ref>())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1a4be8e1e3b0be4c2a155cf84b83b78fca" kindref="member">QBEIG_MATRIXNOTSYMMETRIC</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>eigenvalues<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>A.<ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">GetNumRows</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>identity<sp/>matrix<sp/>of<sp/>the<sp/>same<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>identityMatrix(numRows,<sp/>numRows);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>identityMatrix.<ref refid="classqb_matrix2_1af705ca91a707de5e75c6b074ad152f5e" kindref="member">SetToIdentity</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>matrices<sp/>to<sp/>store<sp/>Q<sp/>and<sp/>R.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>Q<sp/>(numRows,<sp/>numRows);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>R<sp/>(numRows,<sp/>numRows);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>each<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>10e3;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>continueFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((iterationCount<sp/>&lt;<sp/>maxIterations)<sp/>&amp;&amp;<sp/>continueFlag)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>QR<sp/>decomposition<sp/>of<sp/>A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returnValue<sp/>=<sp/>qbQR&lt;T&gt;(A,<sp/>Q,<sp/>R);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>next<sp/>value<sp/>of<sp/>A<sp/>as<sp/>the<sp/>product<sp/>of<sp/>R<sp/>and<sp/>Q.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>=<sp/>R<sp/>*<sp/>Q;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>A<sp/>is<sp/>now<sp/>close<sp/>enough<sp/>to<sp/>being<sp/>upper-triangular.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>can<sp/>do<sp/>this<sp/>using<sp/>the<sp/>IsRowEchelon()<sp/>function<sp/>from<sp/>the<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qbMatrix2<sp/>class.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(A.<ref refid="classqb_matrix2_1a44c85a2d4dcbd33b281ce417156d7431" kindref="member">IsRowEchelon</ref>())</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continueFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>iterationCount.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCount++;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point,<sp/>the<sp/>eigenvalues<sp/>should<sp/>be<sp/>the<sp/>diagonal<sp/>elements<sp/>of<sp/>A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numRows;<sp/>++i)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigenValues.push_back(A.<ref refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" kindref="member">GetElement</ref>(i,i));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>return<sp/>status<sp/>accordingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterationCount<sp/>==<sp/>maxIterations)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1abc41bacc5dd2ce027cd016cfab0fd284" kindref="member">QBEIG_MAXITERATIONSEXCEEDED</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>perform<sp/>inverse<sp/>power<sp/>iteration<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="89" refid="qb_e_i_g_8h_1a947c6e89bfc37d51c19989d1d5db03b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1a947c6e89bfc37d51c19989d1d5db03b9" kindref="member">qbInvPIt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;inputMatrix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;eigenValue,<sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;eigenVector)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>input<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>A<sp/>=<sp/>inputMatrix;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>input<sp/>matrix<sp/>is<sp/>square.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!A.<ref refid="classqb_matrix2_1ae3e42b917e3127cab56b7a48faff25c3" kindref="member">IsSquare</ref>())</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1a11d1d7426a4145998cfe6b22c42fb482" kindref="member">QBEIG_MATRIXNOTSQUARE</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>random<sp/>number<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::random_device<sp/>myRandomDevice;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>std::mt19937<sp/>myRandomGenerator(myRandomDevice());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uniform_int_distribution&lt;int&gt;<sp/>myDistribution(1.0,<sp/>10.0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>eigenvectors<sp/>and<sp/>eigenvalues<sp/>that<sp/>we<sp/>will<sp/>compute<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>the<sp/>input<sp/>matrix.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>A.<ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">GetNumRows</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>identity<sp/>matrix<sp/>of<sp/>the<sp/>same<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>identityMatrix(numRows,<sp/>numRows);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>identityMatrix.<ref refid="classqb_matrix2_1af705ca91a707de5e75c6b074ad152f5e" kindref="member">SetToIdentity</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>initial<sp/>vector,<sp/>v.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>(numRows);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numRows;<sp/>++i)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>.SetElement(i,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(myDistribution(myRandomGenerator)));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterationCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>deltaThreshold<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1e-9);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>delta<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(1e6);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>prevVector(numRows);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>tempMatrix(numRows,<sp/>numRows);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((iterationCount<sp/>&lt;<sp/>maxIterations)<sp/>&amp;&amp;<sp/>(delta<sp/>&gt;<sp/>deltaThreshold))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>current<sp/>working<sp/>vector<sp/>to<sp/>use<sp/>for<sp/>computing<sp/>delta.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevVector<sp/>=<sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>next<sp/>value<sp/>of<sp/>v.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempMatrix<sp/>=<sp/>A<sp/>-<sp/>(eigenValue<sp/>*<sp/>identityMatrix);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempMatrix.<ref refid="classqb_matrix2_1aaf71c5642111972501f43b1e225b8a2f" kindref="member">Inverse</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref><sp/>=<sp/>tempMatrix<sp/>*<sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>.Normalize();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>delta.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta<sp/>=<sp/>(<ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref><sp/>-<sp/>prevVector).norm();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>iteration<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCount++;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>estimated<sp/>eigenvector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector<sp/>=<sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>return<sp/>status<sp/>accordingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterationCount<sp/>==<sp/>maxIterations)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1abc41bacc5dd2ce027cd016cfab0fd284" kindref="member">QBEIG_MAXITERATIONSEXCEEDED</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>qbEIG<sp/>function<sp/>(power<sp/>iteration<sp/>method).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="155" refid="qb_e_i_g_8h_1aecca96c88b78c9535eb65a9cebe3f5d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1aecca96c88b78c9535eb65a9cebe3f5d2" kindref="member">qbEIG_PIt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;X,<sp/>T<sp/>&amp;eigenValue,<sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/>&amp;eigenVector)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>input<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>inputMatrix<sp/>=<sp/>X;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>input<sp/>matrix<sp/>is<sp/>square.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputMatrix.<ref refid="classqb_matrix2_1ae3e42b917e3127cab56b7a48faff25c3" kindref="member">IsSquare</ref>())</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="qb_e_i_g_8h_1a11d1d7426a4145998cfe6b22c42fb482" kindref="member">QBEIG_MATRIXNOTSQUARE</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>random<sp/>number<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::random_device<sp/>myRandomDevice;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>std::mt19937<sp/>myRandomGenerator(myRandomDevice());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uniform_int_distribution&lt;int&gt;<sp/>myDistribution(1.0,<sp/>10.0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>number<sp/>of<sp/>eigenvectors<sp/>and<sp/>eigenvalues<sp/>that<sp/>we<sp/>will<sp/>compute<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>the<sp/>input<sp/>matrix.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>inputMatrix.<ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">GetNumRows</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>identity<sp/>matrix<sp/>of<sp/>the<sp/>same<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>identityMatrix(numRows,<sp/>numRows);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>identityMatrix.<ref refid="classqb_matrix2_1af705ca91a707de5e75c6b074ad152f5e" kindref="member">SetToIdentity</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>**************************************************************</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compute<sp/>the<sp/>eigenvector.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/>**************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>initial<sp/>vector,<sp/>v.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>(numRows);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numRows;<sp/>++i)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>.SetElement(i,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(myDistribution(myRandomGenerator)));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>required<sp/>number<sp/>of<sp/>iterations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a435c176a02c061b43e19bdf7c86cceae" kindref="member">v1</ref>(numRows);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIterations<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numIterations;<sp/>++i)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl__glext_8h_1a435c176a02c061b43e19bdf7c86cceae" kindref="member">v1</ref><sp/>=<sp/>inputMatrix<sp/>*<sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl__glext_8h_1a435c176a02c061b43e19bdf7c86cceae" kindref="member">v1</ref>.Normalize();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl_8h_1a10a82eabcb59d2fcd74acee063775f90" kindref="member">v</ref><sp/>=<sp/><ref refid="_s_d_l__opengl__glext_8h_1a435c176a02c061b43e19bdf7c86cceae" kindref="member">v1</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>this<sp/>eigenvector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenVector<sp/>=<sp/><ref refid="_s_d_l__opengl__glext_8h_1a435c176a02c061b43e19bdf7c86cceae" kindref="member">v1</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>**************************************************************</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compute<sp/>the<sp/>eigenvalue<sp/>corresponding<sp/>to<sp/>this<sp/>eigenvector.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>**************************************************************<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>cumulative<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>cumulativeSum<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;numRows;<sp/>++i)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulativeSum<sp/>+=<sp/>inputMatrix.<ref refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" kindref="member">GetElement</ref>(0,i)<sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a435c176a02c061b43e19bdf7c86cceae" kindref="member">v1</ref>.GetElement(i);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>eigenValue<sp/>=<sp/>(cumulativeSum<sp/>/<sp/><ref refid="_s_d_l__opengl__glext_8h_1a435c176a02c061b43e19bdf7c86cceae" kindref="member">v1</ref>.GetElement(0))<sp/>+<sp/>inputMatrix.<ref refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" kindref="member">GetElement</ref>(0,0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h"/>
  </compounddef>
</doxygen>
