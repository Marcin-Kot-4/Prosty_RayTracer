<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="qb_matrix_8h" kind="file" language="C++">
    <compoundname>qbMatrix.h</compoundname>
    <includes local="no">stdexcept</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">math.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">exception</includes>
    <includes refid="qb_vector_8h" local="yes">qbVector.h</includes>
    <includedby refid="texturebase_8h" local="yes">D:/RayTracing/RayTrace/Textures/texturebase.h</includedby>
    <includedby refid="gtfm_8h" local="yes">D:/RayTracing/RayTrace/gtfm.h</includedby>
    <includedby refid="qb_e_i_g_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h</includedby>
    <includedby refid="qb_l_s_q_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbLSQ.h</includedby>
    <includedby refid="qb_lin_solve_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbLinSolve.h</includedby>
    <includedby refid="qb_p_c_a_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbPCA.h</includedby>
    <includedby refid="qb_q_r_8h" local="yes">D:/RayTracing/RayTrace/qbLinAlg/qbQR.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h</label>
        <link refid="qb_matrix_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>qbVector.h</label>
        <link refid="qb_vector_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>exception</label>
      </node>
      <node id="4">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="12">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="11">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>D:/RayTracing/RayTrace/Lights/lightbase.cpp</label>
        <link refid="lightbase_8cpp"/>
      </node>
      <node id="28">
        <label>D:/RayTracing/RayTrace/Lights/lightbase.h</label>
        <link refid="lightbase_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>D:/RayTracing/RayTrace/Lights/pointlight.cpp</label>
        <link refid="pointlight_8cpp"/>
      </node>
      <node id="29">
        <label>D:/RayTracing/RayTrace/Lights/pointlight.h</label>
        <link refid="pointlight_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>D:/RayTracing/RayTrace/Materials/materialbase.cpp</label>
        <link refid="materialbase_8cpp"/>
      </node>
      <node id="3">
        <label>D:/RayTracing/RayTrace/Materials/materialbase.h</label>
        <link refid="materialbase_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>D:/RayTracing/RayTrace/Materials/simplematerial.cpp</label>
        <link refid="simplematerial_8cpp"/>
      </node>
      <node id="5">
        <label>D:/RayTracing/RayTrace/Materials/simplematerial.h</label>
        <link refid="simplematerial_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Materials/simplerefractive.cpp</label>
        <link refid="simplerefractive_8cpp"/>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Materials/simplerefractive.h</label>
        <link refid="simplerefractive_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>D:/RayTracing/RayTrace/Primitives/cone.cpp</label>
        <link refid="cone_8cpp"/>
      </node>
      <node id="21">
        <label>D:/RayTracing/RayTrace/Primitives/cone.h</label>
        <link refid="cone_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>D:/RayTracing/RayTrace/Primitives/cylinder.cpp</label>
        <link refid="cylinder_8cpp"/>
      </node>
      <node id="24">
        <label>D:/RayTracing/RayTrace/Primitives/cylinder.h</label>
        <link refid="cylinder_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>D:/RayTracing/RayTrace/Primitives/objectbase.cpp</label>
        <link refid="objectbase_8cpp"/>
      </node>
      <node id="26">
        <label>D:/RayTracing/RayTrace/Primitives/objectbase.h</label>
        <link refid="objectbase_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>D:/RayTracing/RayTrace/Primitives/objplane.cpp</label>
        <link refid="objplane_8cpp"/>
      </node>
      <node id="32">
        <label>D:/RayTracing/RayTrace/Primitives/objplane.h</label>
        <link refid="objplane_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>D:/RayTracing/RayTrace/Primitives/objsphere.cpp</label>
        <link refid="objsphere_8cpp"/>
      </node>
      <node id="34">
        <label>D:/RayTracing/RayTrace/Primitives/objsphere.h</label>
        <link refid="objsphere_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="23">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/RayTracing/RayTrace/Textures/checker.cpp</label>
        <link refid="checker_8cpp"/>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Textures/checker.h</label>
        <link refid="checker_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>D:/RayTracing/RayTrace/Textures/flat.cpp</label>
        <link refid="flat_8cpp"/>
      </node>
      <node id="15">
        <label>D:/RayTracing/RayTrace/Textures/flat.h</label>
        <link refid="flat_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>D:/RayTracing/RayTrace/Textures/texturebase.cpp</label>
        <link refid="texturebase_8cpp"/>
      </node>
      <node id="2">
        <label>D:/RayTracing/RayTrace/Textures/texturebase.h</label>
        <link refid="texturebase_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="18">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>D:/RayTracing/RayTrace/gtfm.cpp</label>
        <link refid="gtfm_8cpp"/>
      </node>
      <node id="20">
        <label>D:/RayTracing/RayTrace/gtfm.h</label>
        <link refid="gtfm_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbEIG.h</label>
        <link refid="qb_e_i_g_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbLSQ.h</label>
        <link refid="qb_l_s_q_8h"/>
      </node>
      <node id="40">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbLinSolve.h</label>
        <link refid="qb_lin_solve_8h"/>
      </node>
      <node id="1">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h</label>
        <link refid="qb_matrix_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbPCA.h</label>
        <link refid="qb_p_c_a_8h"/>
      </node>
      <node id="41">
        <label>D:/RayTracing/RayTrace/qbLinAlg/qbQR.h</label>
        <link refid="qb_q_r_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classqb_matrix2" prot="public">qbMatrix2</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="qb_matrix_8h_1a3152cb3afeef9951ce6bd5a7b2e6467c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator+</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;lhs, const qbMatrix2&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="295" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="295" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1a4f573d4179a48f948392e0733d3e4d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator+</definition>
        <argsstring>(const T &amp;lhs, const qbMatrix2&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="311" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="311" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1af6d3a1b8751b210ff67a6397673401bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator+</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;lhs, const T &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="327" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="327" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1aeb426ac1d5ca8a22e8d0d16c5ff80e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator-</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;lhs, const qbMatrix2&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="346" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="346" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1ab0ef0e952a0e8a1790ca863e973a9518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator-</definition>
        <argsstring>(const T &amp;lhs, const qbMatrix2&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="362" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="362" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1ac93d7d43bf149b959542f46d7ceb1a6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator-</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;lhs, const T &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="378" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="378" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1a8a8867562937ce308beeef8be2fd0524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt;</type>
        <definition>qbVector&lt; T &gt; operator*</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;lhs, const qbVector&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_vector" kindref="compound">qbVector</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="397" column="10" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="397" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1a97cc0a26e93803d5719fe10050c162a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator*</definition>
        <argsstring>(const T &amp;lhs, const qbMatrix2&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const T &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="422" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="422" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1adfdd073dbdcab00425a007aa5b4706cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator*</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;lhs, const T &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="438" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="438" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="qb_matrix_8h_1a5335ed95041e071f5a1b5bad1263215a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt;</type>
        <definition>qbMatrix2&lt; T &gt; operator*</definition>
        <argsstring>(const qbMatrix2&lt; T &gt; &amp;lhs, const qbMatrix2&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" line="454" column="11" bodyfile="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h" bodystart="454" bodyend="502"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>qbLinAlg<sp/>linear<sp/>algebra<sp/>library.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>QBMATRIX2_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QBMATRIX2_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*************************************************************************************************</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>qbMatrix2</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>Class<sp/>to<sp/>provide<sp/>capability<sp/>to<sp/>handle<sp/>two-dimensional<sp/>matrices.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">*************************************************************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qb_vector_8h" kindref="compound">qbVector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22" refid="classqb_matrix2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>various<sp/>constructors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classqb_matrix2_1a43751c898aa61a8544b4c65788be72b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2_1a43751c898aa61a8544b4c65788be72b8" kindref="member">qbMatrix2</ref>();</highlight></codeline>
<codeline lineno="27" refid="classqb_matrix2_1a099d5b0ce60f5ba5a1a9be44050240ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2_1a099d5b0ce60f5ba5a1a9be44050240ba" kindref="member">qbMatrix2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols);</highlight></codeline>
<codeline lineno="28" refid="classqb_matrix2_1ab247062b9aa26dfadcb1f3af49cdc30d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2_1ab247062b9aa26dfadcb1f3af49cdc30d" kindref="member">qbMatrix2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*inputData);</highlight></codeline>
<codeline lineno="29" refid="classqb_matrix2_1a9c65f821ae157be87c09c9515cad1b20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2_1a9c65f821ae157be87c09c9515cad1b20" kindref="member">qbMatrix2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;inputMatrix);</highlight></codeline>
<codeline lineno="30" refid="classqb_matrix2_1a0e413d7c719f15f2575cd86f927960ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2_1a0e413d7c719f15f2575cd86f927960ed" kindref="member">qbMatrix2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;inputData);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>the<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classqb_matrix2_1ab05e67188c6ae2eebdbffe8682cb0890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2_1ab05e67188c6ae2eebdbffe8682cb0890" kindref="member">~qbMatrix2</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configuration<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classqb_matrix2_1aba216f400dda55542b3c06df43cd7c35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aba216f400dda55542b3c06df43cd7c35" kindref="member">Resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols);</highlight></codeline>
<codeline lineno="37" refid="classqb_matrix2_1af705ca91a707de5e75c6b074ad152f5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1af705ca91a707de5e75c6b074ad152f5e" kindref="member">SetToIdentity</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Element<sp/>access<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" kindref="member">GetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41" refid="classqb_matrix2_1a1c6693503483942d5a619a0cf470e8b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a1c6693503483942d5a619a0cf470e8b5" kindref="member">SetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/>T<sp/>elementValue);</highlight></codeline>
<codeline lineno="42" refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">GetNumRows</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43" refid="classqb_matrix2_1ab20362d8fc58a4b8da0910f94c3de2c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1ab20362d8fc58a4b8da0910f94c3de2c3" kindref="member">GetNumCols</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Manipulation<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>matrix<sp/>inverse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classqb_matrix2_1aaf71c5642111972501f43b1e225b8a2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aaf71c5642111972501f43b1e225b8a2f" kindref="member">Inverse</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>row<sp/>echelon<sp/>form.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classqb_matrix2_1a803f108eff983ea5f97cc752c44c1da2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="classqb_matrix2_1a803f108eff983ea5f97cc752c44c1da2" kindref="member">RowEchelon</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>transpose.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classqb_matrix2_1a6235a35daf5fa20a9ebc7ed91d8a94a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="classqb_matrix2_1a6235a35daf5fa20a9ebc7ed91d8a94a3" kindref="member">Transpose</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>determinant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classqb_matrix2_1aeebab890f8c38f112972ffbcaaba422f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classqb_matrix2_1aeebab890f8c38f112972ffbcaaba422f" kindref="member">Determinant</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overload<sp/>==<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classqb_matrix2_1aab23890007a5a410c57d43d69a347ea1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aab23890007a5a410c57d43d69a347ea1" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="58" refid="classqb_matrix2_1ae9049dba8525b2c3b4f7db1c5a29d06e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1ae9049dba8525b2c3b4f7db1c5a29d06e" kindref="member">Compare</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>matrix1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overload<sp/>the<sp/>assignment<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classqb_matrix2_1ac6cc3fedd08e2a1bb2ceb097ef4c8e47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="classqb_matrix2_1ac6cc3fedd08e2a1bb2ceb097ef4c8e47" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;rhs);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overload<sp/>+,<sp/>-<sp/>and<sp/>*<sp/>operators<sp/>(friends).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classqb_matrix2_1a1d4315f8c2f967cbf2b25a56201b3591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a1d4315f8c2f967cbf2b25a56201b3591" kindref="member">operator+ </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="65" refid="classqb_matrix2_1ae4237cd5e71fbba4d7dfed269d1b8bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a1d4315f8c2f967cbf2b25a56201b3591" kindref="member">operator+ </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="66" refid="classqb_matrix2_1a1fa6bd482a926d7cc7e176ebb9a23b90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a1d4315f8c2f967cbf2b25a56201b3591" kindref="member">operator+ </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classqb_matrix2_1a0aee7d5dd114c8f8b44438668dc81f8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a0aee7d5dd114c8f8b44438668dc81f8b" kindref="member">operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="69" refid="classqb_matrix2_1adad8a02fdde388de34f6f8a956f542d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a0aee7d5dd114c8f8b44438668dc81f8b" kindref="member">operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="70" refid="classqb_matrix2_1a8d760cfe3cac7fbc1c21191eadd21ae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a0aee7d5dd114c8f8b44438668dc81f8b" kindref="member">operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classqb_matrix2_1a8a110a74e2674e2b57d9f651d7a863e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a8a110a74e2674e2b57d9f651d7a863e6" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="73" refid="classqb_matrix2_1a9481b608768e06cbe526a8c0707265be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a8a110a74e2674e2b57d9f651d7a863e6" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="74" refid="classqb_matrix2_1ace6e56a218dfa2172dc99f5e04105827" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a8a110a74e2674e2b57d9f651d7a863e6" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>qbMatrix2<sp/>*<sp/>qbVector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classqb_matrix2_1adefd905b49bf38d14fdb9cf8d940d3fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;U&gt;</ref><sp/><ref refid="classqb_matrix2_1a8a110a74e2674e2b57d9f651d7a863e6" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;U&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;U&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classqb_matrix2_1a3c37c24ae0d265ebf04a8c55a9753ac9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a3c37c24ae0d265ebf04a8c55a9753ac9" kindref="member">Separate</ref>(<ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;matrix1,<sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;matrix2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colNum);</highlight></codeline>
<codeline lineno="80" refid="classqb_matrix2_1a9ba8140ee2c217ffce544657a1f269b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a9ba8140ee2c217ffce544657a1f269b8" kindref="member">Join</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>matrix2);</highlight></codeline>
<codeline lineno="81" refid="classqb_matrix2_1a1c913b15492558472b2e271f5a856f3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="classqb_matrix2_1a1c913b15492558472b2e271f5a856f3b" kindref="member">FindSubMatrix</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowNum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colNum);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>return<sp/>the<sp/>rank<sp/>of<sp/>the<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classqb_matrix2_1aa41b896d3d520de3096530845cbbc9b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aa41b896d3d520de3096530845cbbc9b4" kindref="member">Rank</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classqb_matrix2_1ae3e42b917e3127cab56b7a48faff25c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1ae3e42b917e3127cab56b7a48faff25c3" kindref="member">IsSquare</ref>();</highlight></codeline>
<codeline lineno="87" refid="classqb_matrix2_1a44c85a2d4dcbd33b281ce417156d7431" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a44c85a2d4dcbd33b281ce417156d7431" kindref="member">IsRowEchelon</ref>();</highlight></codeline>
<codeline lineno="88" refid="classqb_matrix2_1a6a9aab698ac6362495a4421f859b3658" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a6a9aab698ac6362495a4421f859b3658" kindref="member">IsNonZero</ref>();</highlight></codeline>
<codeline lineno="89" refid="classqb_matrix2_1a38c5e541fec532600806ac4fd8afecb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a38c5e541fec532600806ac4fd8afecb2" kindref="member">IsSymmetric</ref>();</highlight></codeline>
<codeline lineno="90" refid="classqb_matrix2_1a4bd6d0afe13739e2f7566cbd66b006e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a4bd6d0afe13739e2f7566cbd66b006e5" kindref="member">PrintMatrix</ref>();</highlight></codeline>
<codeline lineno="91" refid="classqb_matrix2_1aaefe2a08fdad8e89690dd1bddcc154d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aaefe2a08fdad8e89690dd1bddcc154d0" kindref="member">PrintMatrix</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1ae6165268264b393d031f89082216499d" kindref="member">precision</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Sub2Ind(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CloseEnough(T<sp/>f1,<sp/>T<sp/>f2);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SwapRow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MultAdd(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>T<sp/>multFactor);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MultRow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>T<sp/>multFactor);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FindRowWithMaxElement(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startingRow);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*m_matrixData;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nRows,<sp/>m_nCols,<sp/>m_nElements;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="107"><highlight class="comment">CONSTRUCTOR<sp/>/<sp/>DESTRUCTOR<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="108"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="111" refid="classqb_matrix2_1a43751c898aa61a8544b4c65788be72b8" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2_1a43751c898aa61a8544b4c65788be72b8" kindref="member">qbMatrix2&lt;T&gt;::qbMatrix2</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nRows<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>empty<sp/>matrix<sp/>(all<sp/>elements<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="121" refid="classqb_matrix2_1a099d5b0ce60f5ba5a1a9be44050240ba" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2_1a43751c898aa61a8544b4c65788be72b8" kindref="member">qbMatrix2&lt;T&gt;::qbMatrix2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nRows<sp/>=<sp/>nRows;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>nCols;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>m_nRows<sp/>*<sp/>m_nCols;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nElements];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>i++)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>from<sp/>const<sp/>linear<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="133" refid="classqb_matrix2_1ab247062b9aa26dfadcb1f3af49cdc30d" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2_1a43751c898aa61a8544b4c65788be72b8" kindref="member">qbMatrix2&lt;T&gt;::qbMatrix2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*inputData)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nRows<sp/>=<sp/>nRows;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>nCols;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>m_nRows<sp/>*<sp/>m_nCols;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nElements];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>i++)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>inputData[i];</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>copy<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="145" refid="classqb_matrix2_1a9c65f821ae157be87c09c9515cad1b20" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2_1a43751c898aa61a8544b4c65788be72b8" kindref="member">qbMatrix2&lt;T&gt;::qbMatrix2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;inputMatrix)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nRows<sp/>=<sp/>inputMatrix.m_nRows;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>inputMatrix.m_nCols;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>inputMatrix.m_nElements;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nElements];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>i++)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>inputMatrix.m_matrixData[i];</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>from<sp/>std::vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="158" refid="classqb_matrix2_1a0e413d7c719f15f2575cd86f927960ed" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2_1a43751c898aa61a8544b4c65788be72b8" kindref="member">qbMatrix2&lt;T&gt;::qbMatrix2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/>&amp;inputData)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nRows<sp/>=<sp/>nRows;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>nCols;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>m_nRows<sp/>*<sp/>m_nCols;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nElements];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>++i)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>inputData.at(i);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="169" refid="classqb_matrix2_1ab05e67188c6ae2eebdbffe8682cb0890" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2_1ab05e67188c6ae2eebdbffe8682cb0890" kindref="member">qbMatrix2&lt;T&gt;::~qbMatrix2</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_matrixData)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_matrixData;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="179"><highlight class="comment">CONFIGURATION<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="180"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="182" refid="classqb_matrix2_1aba216f400dda55542b3c06df43cd7c35" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aba216f400dda55542b3c06df43cd7c35" kindref="member">qbMatrix2&lt;T&gt;::Resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nRows<sp/>=<sp/>numRows;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>numCols;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>(m_nRows<sp/>*<sp/>m_nCols);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_matrixData;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nElements];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_matrixData<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>i++)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>convert<sp/>the<sp/>existing<sp/>matrix<sp/>into<sp/>an<sp/>identity<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="204" refid="classqb_matrix2_1af705ca91a707de5e75c6b074ad152f5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1af705ca91a707de5e75c6b074ad152f5e" kindref="member">qbMatrix2&lt;T&gt;::SetToIdentity</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsSquare())</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>form<sp/>an<sp/>identity<sp/>matrix<sp/>that<sp/>is<sp/>not<sp/>square.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>=0;<sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>&lt;m_nRows;<sp/>++<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;m_nCols;<sp/>++col)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[Sub2Ind(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,col)]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[Sub2Ind(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,col)]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="222"><highlight class="comment">ELEMENT<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="223"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="225" refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" refkind="member"><highlight class="normal">T<sp/><ref refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" kindref="member">qbMatrix2&lt;T&gt;::GetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="226"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linearIndex<sp/>=<sp/>Sub2Ind(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>col);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearIndex<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_matrixData[linearIndex];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="236" refid="classqb_matrix2_1a1c6693503483942d5a619a0cf470e8b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a1c6693503483942d5a619a0cf470e8b5" kindref="member">qbMatrix2&lt;T&gt;::SetElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/>T<sp/>elementValue)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linearIndex<sp/>=<sp/>Sub2Ind(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>col);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linearIndex<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[linearIndex]<sp/>=<sp/>elementValue;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="251" refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">qbMatrix2&lt;T&gt;::GetNumRows</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="252"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nRows;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="257" refid="classqb_matrix2_1ab20362d8fc58a4b8da0910f94c3de2c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1ab20362d8fc58a4b8da0910f94c3de2c3" kindref="member">qbMatrix2&lt;T&gt;::GetNumCols</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="258"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nCols;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="263" refid="classqb_matrix2_1ae9049dba8525b2c3b4f7db1c5a29d06e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1ae9049dba8525b2c3b4f7db1c5a29d06e" kindref="member">qbMatrix2&lt;T&gt;::Compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>matrix1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>check<sp/>that<sp/>the<sp/>matrices<sp/>have<sp/>the<sp/>same<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows1<sp/>=<sp/>matrix1.m_nRows;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols1<sp/>=<sp/>matrix1.m_nCols;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((numRows1<sp/>!=<sp/>m_nRows)<sp/>||<sp/>(numCols1<sp/>!=<sp/>m_nCols))</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>all<sp/>the<sp/>elements<sp/>and<sp/>compute<sp/>the<sp/>sum-of-squared-differences.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cumulativeSum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>++i)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>element1<sp/>=<sp/>matrix1.m_matrixData[i];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>element2<sp/>=<sp/>m_matrixData[i];</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulativeSum<sp/>+=<sp/>((element1<sp/>-<sp/>element2)<sp/>*<sp/>(element1<sp/>-<sp/>element2));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>finalValue<sp/>=<sp/>sqrt(cumulativeSum<sp/>/<sp/>((numRows1<sp/>*<sp/>numCols1)-1));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(finalValue<sp/>&lt;<sp/>tolerance)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="287"><highlight class="comment">OVERLOADED<sp/>OPERATOR<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="288"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="291"><highlight class="comment">THE<sp/>+<sp/>OPERATOR</highlight></codeline>
<codeline lineno="292"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>+<sp/>matrx.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="295" refid="qb_matrix_8h_1a3152cb3afeef9951ce6bd5a7b2e6467c" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1a3152cb3afeef9951ce6bd5a7b2e6467c" kindref="member">operator+ </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>lhs.m_nRows;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols<sp/>=<sp/>lhs.m_nCols;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numElements<sp/>=<sp/>numRows<sp/>*<sp/>numCols;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numElements];</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numElements;<sp/>i++)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[i]<sp/>=<sp/>lhs.m_matrixData[i]<sp/>+<sp/>rhs.m_matrixData[i];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(numRows,<sp/>numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scaler<sp/>+<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="311" refid="qb_matrix_8h_1a4f573d4179a48f948392e0733d3e4d8a" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1a3152cb3afeef9951ce6bd5a7b2e6467c" kindref="member">operator+ </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>rhs.m_nRows;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols<sp/>=<sp/>rhs.m_nCols;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numElements<sp/>=<sp/>numRows<sp/>*<sp/>numCols;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numElements];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numElements;<sp/>++i)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[i]<sp/>=<sp/>lhs<sp/>+<sp/>rhs.m_matrixData[i];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(numRows,<sp/>numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>+<sp/>scaler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="327" refid="qb_matrix_8h_1af6d3a1b8751b210ff67a6397673401bc" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1a3152cb3afeef9951ce6bd5a7b2e6467c" kindref="member">operator+ </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>lhs.m_nRows;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols<sp/>=<sp/>lhs.m_nCols;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numElements<sp/>=<sp/>numRows<sp/>*<sp/>numCols;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numElements];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numElements;<sp/>++i)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[i]<sp/>=<sp/>lhs.m_matrixData[i]<sp/>+<sp/>rhs;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(numRows,<sp/>numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="342"><highlight class="comment">THE<sp/>-<sp/>OPERATOR</highlight></codeline>
<codeline lineno="343"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>-<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="346" refid="qb_matrix_8h_1aeb426ac1d5ca8a22e8d0d16c5ff80e05" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1aeb426ac1d5ca8a22e8d0d16c5ff80e05" kindref="member">operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>lhs.m_nRows;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols<sp/>=<sp/>lhs.m_nCols;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numElements<sp/>=<sp/>numRows<sp/>*<sp/>numCols;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numElements];</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numElements;<sp/>i++)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[i]<sp/>=<sp/>lhs.m_matrixData[i]<sp/>-<sp/>rhs.m_matrixData[i];</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(numRows,<sp/>numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scaler<sp/>-<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="362" refid="qb_matrix_8h_1ab0ef0e952a0e8a1790ca863e973a9518" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1aeb426ac1d5ca8a22e8d0d16c5ff80e05" kindref="member">operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>rhs.m_nRows;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols<sp/>=<sp/>rhs.m_nCols;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numElements<sp/>=<sp/>numRows<sp/>*<sp/>numCols;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numElements];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numElements;<sp/>++i)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[i]<sp/>=<sp/>lhs<sp/>-<sp/>rhs.m_matrixData[i];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(numRows,<sp/>numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>-<sp/>scaler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="378" refid="qb_matrix_8h_1ac93d7d43bf149b959542f46d7ceb1a6f" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1aeb426ac1d5ca8a22e8d0d16c5ff80e05" kindref="member">operator- </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>lhs.m_nRows;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols<sp/>=<sp/>lhs.m_nCols;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numElements<sp/>=<sp/>numRows<sp/>*<sp/>numCols;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numElements];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numElements;<sp/>++i)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[i]<sp/>=<sp/>lhs.m_matrixData[i]<sp/>-<sp/>rhs;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(numRows,<sp/>numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="393"><highlight class="comment">THE<sp/>*<sp/>OPERATOR</highlight></codeline>
<codeline lineno="394"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>*<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="397" refid="qb_matrix_8h_1a8a8867562937ce308beeef8be2fd0524" refkind="member"><highlight class="normal"><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1a8a8867562937ce308beeef8be2fd0524" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>inputs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lhs.m_nCols<sp/>!=<sp/>rhs.<ref refid="classqb_vector_1a4b1f24a8ae47ef9019109c23c56fc9c4" kindref="member">GetNumDims</ref>())</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>columns<sp/>in<sp/>matrix<sp/>must<sp/>equal<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>vector.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>vector<sp/>for<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_vector" kindref="compound">qbVector&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(lhs.m_nRows);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>rows<sp/>and<sp/>columns<sp/>and<sp/>perform<sp/>the<sp/>multiplication<sp/>operation<sp/>element-by-element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>=0;<sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>&lt;lhs.m_nRows;<sp/>++<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>cumulativeSum<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;lhs.m_nCols;<sp/>++col)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulativeSum<sp/>+=<sp/>(lhs.<ref refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" kindref="member">GetElement</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,col)<sp/>*<sp/>rhs.<ref refid="classqb_vector_1adadd6ca87273a15f57a5e1d6ae15583b" kindref="member">GetElement</ref>(col));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>.SetElement(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>cumulativeSum);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scaler<sp/>*<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="422" refid="qb_matrix_8h_1a97cc0a26e93803d5719fe10050c162a1" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1a8a8867562937ce308beeef8be2fd0524" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>rhs.m_nRows;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols<sp/>=<sp/>rhs.m_nCols;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numElements<sp/>=<sp/>numRows<sp/>*<sp/>numCols;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numElements];</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numElements;<sp/>++i)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[i]<sp/>=<sp/>lhs<sp/>*<sp/>rhs.m_matrixData[i];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(numRows,<sp/>numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>*<sp/>scaler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="438" refid="qb_matrix_8h_1adfdd073dbdcab00425a007aa5b4706cb" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1a8a8867562937ce308beeef8be2fd0524" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>lhs.m_nRows;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols<sp/>=<sp/>lhs.m_nCols;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numElements<sp/>=<sp/>numRows<sp/>*<sp/>numCols;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numElements];</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numElements;<sp/>++i)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[i]<sp/>=<sp/>lhs.m_matrixData[i]<sp/>*<sp/>rhs;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(numRows,<sp/>numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>*<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="454" refid="qb_matrix_8h_1a5335ed95041e071f5a1b5bad1263215a" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="qb_matrix_8h_1a8a8867562937ce308beeef8be2fd0524" kindref="member">operator* </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_numRows<sp/>=<sp/>rhs.m_nRows;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r_numCols<sp/>=<sp/>rhs.m_nCols;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_numRows<sp/>=<sp/>lhs.m_nRows;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l_numCols<sp/>=<sp/>lhs.m_nCols;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l_numCols<sp/>==<sp/>r_numRows)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>standard<sp/>matrix<sp/>multiplication<sp/>condition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>will<sp/>be<sp/>the<sp/>same<sp/>size<sp/>as<sp/>the<sp/>RHS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*tempResult<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[lhs.m_nRows<sp/>*<sp/>rhs.m_nCols];</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>each<sp/>row<sp/>of<sp/>the<sp/>LHS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lhsRow=0;<sp/>lhsRow&lt;l_numRows;<sp/>lhsRow++)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>each<sp/>column<sp/>on<sp/>the<sp/>RHS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rhsCol=0;<sp/>rhsCol&lt;r_numCols;<sp/>rhsCol++)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>elementResult<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>each<sp/>element<sp/>of<sp/>this<sp/>LHS<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lhsCol=0;<sp/>lhsCol&lt;l_numCols;<sp/>lhsCol++)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>LHS<sp/>linear<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lhsLinearIndex<sp/>=<sp/>(lhsRow<sp/>*<sp/>l_numCols)<sp/>+<sp/>lhsCol;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>RHS<sp/>linear<sp/>index<sp/>(based<sp/>on<sp/>LHS<sp/>col).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rhs<sp/>row<sp/>number<sp/>equal<sp/>to<sp/>lhs<sp/>column<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rhsLinearIndex<sp/>=<sp/>(lhsCol<sp/>*<sp/>r_numCols)<sp/>+<sp/>rhsCol;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>calculation<sp/>on<sp/>these<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementResult<sp/>+=<sp/>(lhs.m_matrixData[lhsLinearIndex]<sp/>*<sp/>rhs.m_matrixData[rhsLinearIndex]);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resultLinearIndex<sp/>=<sp/>(lhsRow<sp/>*<sp/>r_numCols)<sp/>+<sp/>rhsCol;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempResult[resultLinearIndex]<sp/>=<sp/>elementResult;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(l_numRows,<sp/>r_numCols,<sp/>tempResult);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempResult;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a321ff419cd5252e54cf95e64dc6687ee" kindref="member">result</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="505"><highlight class="comment">THE<sp/>==<sp/>OPERATOR</highlight></codeline>
<codeline lineno="506"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="508" refid="classqb_matrix2_1aab23890007a5a410c57d43d69a347ea1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aab23890007a5a410c57d43d69a347ea1" kindref="member">qbMatrix2&lt;T&gt;::operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>matricies<sp/>are<sp/>the<sp/>same<sp/>size,<sp/>if<sp/>not<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((this-&gt;m_nRows<sp/>!=<sp/>rhs.m_nRows)<sp/>&amp;&amp;<sp/>(this-&gt;m_nCols<sp/>!=<sp/>rhs.m_nCols))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>elements<sp/>are<sp/>equal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;this-&gt;m_nElements;<sp/>++i)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(this-&gt;m_matrixData[i]<sp/>!=<sp/>rhs.m_matrixData[i])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(this-&gt;m_matrixData[i],<sp/>rhs.m_matrixData[i]))</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flag;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="526"><highlight class="comment">THE<sp/>ASSIGNMENT<sp/>(=)<sp/>OPERATOR</highlight></codeline>
<codeline lineno="527"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="529" refid="classqb_matrix2_1ac6cc3fedd08e2a1bb2ceb097ef4c8e47" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="classqb_matrix2_1ac6cc3fedd08e2a1bb2ceb097ef4c8e47" kindref="member">qbMatrix2&lt;T&gt;::operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we&apos;re<sp/>not<sp/>assigning<sp/>to<sp/>ourself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nRows<sp/>=<sp/>rhs.m_nRows;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>rhs.m_nCols;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>rhs.m_nElements;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_matrixData)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_matrixData;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nElements];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>i++)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>rhs.m_matrixData[i];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="550"><highlight class="comment">SEPARATE<sp/>THE<sp/>MATRIX<sp/>INTO<sp/>TWO<sp/>PARTS,<sp/>AROUND<sp/>THE<sp/>COLUMN<sp/>NUMBER<sp/>PROVIDED</highlight></codeline>
<codeline lineno="551"><highlight class="comment">(Note<sp/>that<sp/>the<sp/>output<sp/>is<sp/>returned<sp/>into<sp/>the<sp/>two<sp/>qbMatrix2&lt;T&gt;<sp/>pointers<sp/>in<sp/>the<sp/>input<sp/>argument<sp/>list)</highlight></codeline>
<codeline lineno="552"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="554" refid="classqb_matrix2_1a3c37c24ae0d265ebf04a8c55a9753ac9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a3c37c24ae0d265ebf04a8c55a9753ac9" kindref="member">qbMatrix2&lt;T&gt;::Separate</ref>(<ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;matrix1,<sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>&amp;matrix2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colNum)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>sizes<sp/>of<sp/>the<sp/>new<sp/>matrices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows<sp/>=<sp/>m_nRows;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols1<sp/>=<sp/>colNum;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols2<sp/>=<sp/>m_nCols<sp/>-<sp/>colNum;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resize<sp/>the<sp/>two<sp/>matrices<sp/>to<sp/>the<sp/>proper<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix1.<ref refid="classqb_matrix2_1aba216f400dda55542b3c06df43cd7c35" kindref="member">Resize</ref>(numRows,<sp/>numCols1);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix2.<ref refid="classqb_matrix2_1aba216f400dda55542b3c06df43cd7c35" kindref="member">Resize</ref>(numRows,<sp/>numCols1);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>original<sp/>matrix<sp/>and<sp/>store<sp/>data<sp/>into<sp/>the<sp/>appropriate<sp/>elements<sp/>of<sp/>the<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>matrices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>=0;<sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>&lt;m_nRows;<sp/>++<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col=0;<sp/>col&lt;m_nCols;<sp/>++col)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>&lt;<sp/>colNum)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix1.<ref refid="classqb_matrix2_1a1c6693503483942d5a619a0cf470e8b5" kindref="member">SetElement</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>col,<sp/>this-&gt;GetElement(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>col));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix2.<ref refid="classqb_matrix2_1a1c6693503483942d5a619a0cf470e8b5" kindref="member">SetElement</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>col-colNum,<sp/>this-&gt;GetElement(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>col));</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="585"><highlight class="comment">JOIN<sp/>TwO<sp/>MATRICES<sp/>TOGETHER</highlight></codeline>
<codeline lineno="586"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="588" refid="classqb_matrix2_1a9ba8140ee2c217ffce544657a1f269b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a9ba8140ee2c217ffce544657a1f269b8" kindref="member">qbMatrix2&lt;T&gt;::Join</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref>&amp;<sp/>matrix2)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>information<sp/>that<sp/>we<sp/>need<sp/>from<sp/>both<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows1<sp/>=<sp/>m_nRows;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRows2<sp/>=<sp/>matrix2.m_nRows;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols1<sp/>=<sp/>m_nCols;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCols2<sp/>=<sp/>matrix2.m_nCols;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>matrices<sp/>have<sp/>different<sp/>numbers<sp/>of<sp/>rows,<sp/>then<sp/>this<sp/>operation<sp/>makes<sp/>no<sp/>sense.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numRows1<sp/>!=<sp/>numRows2)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>join<sp/>matrices<sp/>with<sp/>different<sp/>numbers<sp/>of<sp/>rows<sp/>is<sp/>invalid.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>only<sp/>the<sp/>number<sp/>of<sp/>columns<sp/>increases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>newMatrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[numRows1*(numCols1+numCols2)];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>two<sp/>matrices<sp/>into<sp/>the<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linearIndex,<sp/>resultLinearIndex;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numRows1;<sp/>++i)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;(numCols1+numCols2);<sp/>++j)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultLinearIndex<sp/>=<sp/>(i<sp/>*<sp/>(numCols1+numCols2))<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>j<sp/>is<sp/>in<sp/>the<sp/>left<sp/>hand<sp/>matrix,<sp/>we<sp/>get<sp/>data<sp/>from<sp/>there...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>numCols1)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearIndex<sp/>=<sp/>(i<sp/>*<sp/>numCols1)<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMatrixData[resultLinearIndex]<sp/>=<sp/>m_matrixData[linearIndex];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>j<sp/>must<sp/>be<sp/>in<sp/>the<sp/>right<sp/>hand<sp/>matrix,<sp/>so<sp/>we<sp/>get<sp/>data<sp/>from<sp/>there...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearIndex<sp/>=<sp/>(i<sp/>*<sp/>numCols2)<sp/>+<sp/>(j<sp/>-<sp/>numCols1);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMatrixData[resultLinearIndex]<sp/>=<sp/>matrix2.m_matrixData[linearIndex];</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>stored<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>numCols1+numCols2;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>m_nRows<sp/>*<sp/>m_nCols;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_matrixData;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nElements];</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>++i)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>newMatrixData[i];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>newMatrixData;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="640"><highlight class="comment">COMPUTE<sp/>MATRIX<sp/>DETERMINANT</highlight></codeline>
<codeline lineno="641"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="643" refid="classqb_matrix2_1aeebab890f8c38f112972ffbcaaba422f" refkind="member"><highlight class="normal">T<sp/><ref refid="classqb_matrix2_1aeebab890f8c38f112972ffbcaaba422f" kindref="member">qbMatrix2&lt;T&gt;::Determinant</ref>()</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>matrix<sp/>is<sp/>square.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsSquare())</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>compute<sp/>the<sp/>determinant<sp/>of<sp/>a<sp/>matrix<sp/>that<sp/>is<sp/>not<sp/>square.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>matrix<sp/>is<sp/>2x2,<sp/>we<sp/>can<sp/>just<sp/>compute<sp/>the<sp/>determinant<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>determinant;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nRows<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>determinant<sp/>=<sp/>(m_matrixData[0]<sp/>*<sp/>m_matrixData[3])<sp/>-<sp/>(m_matrixData[1]<sp/>*<sp/>m_matrixData[2]);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>we<sp/>extract<sp/>the<sp/>sub-matrices<sp/>and<sp/>then<sp/>recursively<sp/>call<sp/>this<sp/>function</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>until<sp/>we<sp/>get<sp/>to<sp/>2x2<sp/>matrices.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>find<sp/>the<sp/>sub-matrices<sp/>for<sp/>row<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So,<sp/>loop<sp/>over<sp/>each<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>cumulativeSum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>sign<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;m_nCols;<sp/>++j)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>find<sp/>the<sp/>sub-matrix<sp/>for<sp/>each<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>subMatrix<sp/>=<sp/>this-&gt;FindSubMatrix(0,<sp/>j);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Cumulatively<sp/>multiply<sp/>the<sp/>determinant<sp/>of<sp/>the<sp/>sub-matrix<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>element<sp/>of<sp/>this<sp/>matrix<sp/>and<sp/>the<sp/>sign<sp/>variable<sp/>(note<sp/>the</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recursive<sp/>calling<sp/>of<sp/>the<sp/>Determinant()<sp/>method).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulativeSum<sp/>+=<sp/>this-&gt;GetElement(0,<sp/>j)<sp/>*<sp/>subMatrix.<ref refid="classqb_matrix2_1aeebab890f8c38f112972ffbcaaba422f" kindref="member">Determinant</ref>()<sp/>*<sp/>sign;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sign<sp/>=<sp/>-sign;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>determinant<sp/>=<sp/>cumulativeSum;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>determinant;</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="682"><highlight class="comment">COMPUTE<sp/>MATRIX<sp/>INVERSE<sp/>(USING<sp/>GAUSS-JORDAN<sp/>ELIMINATION)</highlight></codeline>
<codeline lineno="683"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="685" refid="classqb_matrix2_1aaf71c5642111972501f43b1e225b8a2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aaf71c5642111972501f43b1e225b8a2f" kindref="member">qbMatrix2&lt;T&gt;::Inverse</ref>()</highlight></codeline>
<codeline lineno="686"><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>matrix<sp/>is<sp/>square<sp/>(we<sp/>cannot<sp/>compute<sp/>the<sp/>inverse<sp/>if<sp/>it<sp/>isn&apos;t).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsSquare())</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>compute<sp/>the<sp/>inverse<sp/>of<sp/>a<sp/>matrix<sp/>that<sp/>is<sp/>not<sp/>square.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>to<sp/>here,<sp/>the<sp/>matrix<sp/>is<sp/>square<sp/>so<sp/>we<sp/>can<sp/>continue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Form<sp/>an<sp/>identity<sp/>matrix<sp/>with<sp/>the<sp/>same<sp/>dimensions<sp/>as<sp/>the<sp/>matrix<sp/>we<sp/>wish<sp/>to<sp/>invert.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>identityMatrix(m_nRows,<sp/>m_nCols);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>identityMatrix.<ref refid="classqb_matrix2_1af705ca91a707de5e75c6b074ad152f5e" kindref="member">SetToIdentity</ref>();</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Join<sp/>the<sp/>identity<sp/>matrix<sp/>to<sp/>the<sp/>existing<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>originalNumCols<sp/>=<sp/>m_nCols;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>Join(identityMatrix);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin<sp/>the<sp/>main<sp/>part<sp/>of<sp/>the<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cRow,<sp/>cCol;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a76b486a23d5da07752f89495cdaedcf4" kindref="member">maxCount</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>completeFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((!completeFlag)<sp/>&amp;&amp;<sp/>(<ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref><sp/>&lt;<sp/><ref refid="_s_d_l__opengl__glext_8h_1a76b486a23d5da07752f89495cdaedcf4" kindref="member">maxCount</ref>))</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diagIndex=0;<sp/>diagIndex&lt;m_nRows;<sp/>++diagIndex)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>diagonal<sp/>of<sp/>the<sp/>matrix<sp/>and<sp/>ensure<sp/>all<sp/>diagonal<sp/>elements<sp/>are<sp/>equal<sp/>to<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cRow<sp/>=<sp/>diagIndex;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cCol<sp/>=<sp/>diagIndex;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>index<sp/>of<sp/>the<sp/>maximum<sp/>element<sp/>in<sp/>the<sp/>current<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIndex<sp/>=<sp/>FindRowWithMaxElement(cCol,<sp/>cRow);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>isn&apos;t<sp/>the<sp/>current<sp/>row,<sp/>then<sp/>swap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxIndex<sp/>!=<sp/>cRow)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Swap<sp/>rows<sp/>&quot;<sp/>&lt;&lt;<sp/>cRow<sp/>&lt;&lt;<sp/>&quot;<sp/>and<sp/>&quot;<sp/>&lt;&lt;<sp/>maxIndex<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SwapRow(cRow,<sp/>maxIndex);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>value<sp/>at<sp/>(cRow,cCol)<sp/>is<sp/>equal<sp/>to<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_matrixData[Sub2Ind(cRow,cCol)]<sp/>!=<sp/>1.0)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>multFactor<sp/>=<sp/>1.0<sp/>/<sp/>m_matrixData[Sub2Ind(cRow,cCol)];</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultRow(cRow,<sp/>multFactor);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Multiply<sp/>row<sp/>&quot;<sp/>&lt;&lt;<sp/>cRow<sp/>&lt;&lt;<sp/>&quot;<sp/>by<sp/>&quot;<sp/>&lt;&lt;<sp/>multFactor<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consider<sp/>the<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex=cRow+1;<sp/>rowIndex&lt;m_nRows;<sp/>++rowIndex)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>element<sp/>is<sp/>already<sp/>zero,<sp/>move<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(m_matrixData[Sub2Ind(rowIndex,<sp/>cCol)],<sp/>0.0))</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Obtain<sp/>the<sp/>element<sp/>to<sp/>work<sp/>with<sp/>from<sp/>the<sp/>matrix<sp/>diagonal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>we<sp/>aim<sp/>to<sp/>set<sp/>all<sp/>the<sp/>diagonal<sp/>elements<sp/>to<sp/>one,<sp/>this<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>be<sp/>valid<sp/>for<sp/>a<sp/>matrix<sp/>that<sp/>can<sp/>be<sp/>inverted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowOneIndex<sp/>=<sp/>cCol;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>value<sp/>stored<sp/>at<sp/>the<sp/>current<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>currentElementValue<sp/>=<sp/>m_matrixData[Sub2Ind(rowIndex,<sp/>cCol)];</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>value<sp/>stored<sp/>at<sp/>(rowOneIndex,<sp/>cCol)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>rowOneValue<sp/>=<sp/>m_matrixData[Sub2Ind(rowOneIndex,<sp/>cCol)];</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>equal<sp/>to<sp/>zero,<sp/>then<sp/>just<sp/>move<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(rowOneValue,<sp/>0.0))</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>correction<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(required<sp/>to<sp/>reduce<sp/>the<sp/>element<sp/>at<sp/>(rowIndex,<sp/>cCol)<sp/>to<sp/>zero).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>correctionFactor<sp/>=<sp/>-(currentElementValue<sp/>/<sp/>rowOneValue);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultAdd(rowIndex,<sp/>rowOneIndex,<sp/>correctionFactor);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Multiply<sp/>row<sp/>&quot;<sp/>&lt;&lt;<sp/>rowOneIndex<sp/>&lt;&lt;<sp/>&quot;<sp/>by<sp/>&quot;<sp/>&lt;&lt;<sp/>correctionFactor<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&quot;<sp/>and<sp/>add<sp/>to<sp/>row<sp/>&quot;<sp/>&lt;&lt;<sp/>rowIndex<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Consider<sp/>the<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colIndex=cCol+1;<sp/>colIndex&lt;originalNumCols;<sp/>++colIndex)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>element<sp/>is<sp/>already<sp/>zero,<sp/>move<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(m_matrixData[Sub2Ind(cRow,<sp/>colIndex)],<sp/>0.0))</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Obtain<sp/>the<sp/>element<sp/>to<sp/>work<sp/>with<sp/>from<sp/>the<sp/>matrix<sp/>diagonal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>we<sp/>aim<sp/>to<sp/>set<sp/>all<sp/>the<sp/>diagonal<sp/>elements<sp/>to<sp/>one,<sp/>this<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>be<sp/>valid<sp/>for<sp/>a<sp/>matrix<sp/>that<sp/>can<sp/>be<sp/>inverted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowOneIndex<sp/>=<sp/>colIndex;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>value<sp/>stored<sp/>at<sp/>the<sp/>current<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>currentElementValue<sp/>=<sp/>m_matrixData[Sub2Ind(cRow,<sp/>colIndex)];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>value<sp/>stored<sp/>at<sp/>(rowOneIndex,<sp/>colIndex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>rowOneValue<sp/>=<sp/>m_matrixData[Sub2Ind(rowOneIndex,<sp/>colIndex)];</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>equal<sp/>to<sp/>zero,<sp/>then<sp/>just<sp/>move<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(rowOneValue,<sp/>0.0))</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>correction<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(required<sp/>to<sp/>reduce<sp/>the<sp/>element<sp/>at<sp/>(cRow,<sp/>colIndex)<sp/>to<sp/>zero).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>correctionFactor<sp/>=<sp/>-(currentElementValue<sp/>/<sp/>rowOneValue);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>make<sp/>this<sp/>equal<sp/>to<sp/>zero,<sp/>we<sp/>need<sp/>to<sp/>add<sp/>-currentElementValue<sp/>multiplied<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>row<sp/>at<sp/>rowOneIndex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultAdd(cRow,<sp/>rowOneIndex,<sp/>correctionFactor);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Multiply<sp/>row<sp/>&quot;<sp/>&lt;&lt;<sp/>rowOneIndex<sp/>&lt;&lt;<sp/>&quot;<sp/>by<sp/>&quot;<sp/>&lt;&lt;<sp/>correctionFactor<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&quot;<sp/>and<sp/>add<sp/>to<sp/>row<sp/>&quot;<sp/>&lt;&lt;<sp/>cRow<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Separate<sp/>the<sp/>result<sp/>into<sp/>the<sp/>left<sp/>and<sp/>right<sp/>halves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>leftHalf;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>rightHalf;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;Separate(leftHalf,<sp/>rightHalf,<sp/>originalNumCols);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>process<sp/>is<sp/>complete,<sp/>the<sp/>left<sp/>half<sp/>should<sp/>be<sp/>the<sp/>identity<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftHalf<sp/>==<sp/>identityMatrix)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>completedFlag<sp/>to<sp/>true<sp/>to<sp/>indicate<sp/>that<sp/>the<sp/>process<sp/>has<sp/>completed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>completeFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rebuild<sp/>the<sp/>matrix<sp/>with<sp/>just<sp/>the<sp/>right<sp/>half,<sp/>which<sp/>now<sp/>contains<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nCols<sp/>=<sp/>originalNumCols;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_nElements<sp/>=<sp/>m_nRows<sp/>*<sp/>m_nCols;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>m_matrixData;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nElements];</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>++i)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>rightHalf.m_matrixData[i];</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>process<sp/>succeeded<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>completeFlag;</highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="828"><highlight class="comment">COMPUTE<sp/>AND<sp/>RETURN<sp/>THE<sp/>TRANSPOSE</highlight></codeline>
<codeline lineno="829"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="831" refid="classqb_matrix2_1a6235a35daf5fa20a9ebc7ed91d8a94a3" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="classqb_matrix2_1a6235a35daf5fa20a9ebc7ed91d8a94a3" kindref="member">qbMatrix2&lt;T&gt;::Transpose</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="832"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Form<sp/>the<sp/>output<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>reverse<sp/>the<sp/>order<sp/>of<sp/>rows<sp/>and<sp/>columns,<sp/>as<sp/>this<sp/>will<sp/>be<sp/>the<sp/>transpose.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>resultMatrix(m_nCols,<sp/>m_nRows);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>loop<sp/>through<sp/>the<sp/>elements<sp/>and<sp/>copy<sp/>in<sp/>the<sp/>appropriate<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nRows;<sp/>++i)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;m_nCols;<sp/>++j)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultMatrix.<ref refid="classqb_matrix2_1a1c6693503483942d5a619a0cf470e8b5" kindref="member">SetElement</ref>(j,<sp/>i,<sp/>this-&gt;GetElement(i,<sp/>j));</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultMatrix;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="850"><highlight class="comment">CONVERT<sp/>TO<sp/>ROW<sp/>ECHELON<sp/>FORM<sp/>(USING<sp/>GAUSSIAN<sp/>ELIMINATION)</highlight></codeline>
<codeline lineno="851"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="853" refid="classqb_matrix2_1a803f108eff983ea5f97cc752c44c1da2" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="classqb_matrix2_1a803f108eff983ea5f97cc752c44c1da2" kindref="member">qbMatrix2&lt;T&gt;::RowEchelon</ref>()</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>current<sp/>matrix<sp/>must<sp/>have<sp/>at<sp/>least<sp/>as<sp/>many<sp/>columns<sp/>as<sp/>rows,<sp/>but<sp/>note<sp/>that<sp/>we<sp/>don&apos;t</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actually<sp/>require<sp/>it<sp/>to<sp/>be<sp/>square<sp/>since<sp/>we<sp/>assume<sp/>that<sp/>the<sp/>user<sp/>may<sp/>have<sp/>combined<sp/>a</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>square<sp/>matrix<sp/>with<sp/>a<sp/>vector.<sp/>They<sp/>would<sp/>do<sp/>this,<sp/>for<sp/>example,<sp/>if<sp/>they<sp/>were<sp/>trying<sp/>to</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solve<sp/>a<sp/>system<sp/>of<sp/>linear<sp/>equations.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nCols<sp/>&lt;<sp/>m_nRows)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;The<sp/>matrix<sp/>must<sp/>have<sp/>at<sp/>least<sp/>as<sp/>many<sp/>columns<sp/>as<sp/>rows.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>matrix<sp/>data<sp/>before<sp/>we<sp/>start.<sp/>We<sp/>do<sp/>this<sp/>because<sp/>the<sp/>procedure<sp/>below</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>make<sp/>changes<sp/>to<sp/>the<sp/>stored<sp/>matrix<sp/>data<sp/>(it<sp/>operates<sp/>&apos;in<sp/>place&apos;)<sp/>and<sp/>we<sp/>don&apos;t<sp/>want</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>behaviour.<sp/>Therefore<sp/>we<sp/>take<sp/>a<sp/>copy<sp/>at<sp/>the<sp/>beginning<sp/>and<sp/>then<sp/>we<sp/>will<sp/>replace<sp/>the</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified<sp/>matrix<sp/>data<sp/>with<sp/>this<sp/>copied<sp/>data<sp/>at<sp/>the<sp/>end,<sp/>thus<sp/>preserving<sp/>the<sp/>original.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempMatrixData;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>tempMatrixData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nRows<sp/>*<sp/>m_nCols];</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;(m_nRows*m_nCols);<sp/>++i)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempMatrixData[i]<sp/>=<sp/>m_matrixData[i];</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin<sp/>the<sp/>main<sp/>part<sp/>of<sp/>the<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cRow,<sp/>cCol;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a76b486a23d5da07752f89495cdaedcf4" kindref="member">maxCount</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>completeFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((!completeFlag)<sp/>&amp;&amp;<sp/>(<ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref><sp/>&lt;<sp/><ref refid="_s_d_l__opengl__glext_8h_1a76b486a23d5da07752f89495cdaedcf4" kindref="member">maxCount</ref>))</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diagIndex=0;<sp/>diagIndex&lt;m_nRows;<sp/>++diagIndex)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>diagonal<sp/>of<sp/>the<sp/>matrix<sp/>and<sp/>ensure<sp/>all<sp/>diagonal<sp/>elements<sp/>are<sp/>equal<sp/>to<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cRow<sp/>=<sp/>diagIndex;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cCol<sp/>=<sp/>diagIndex;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>index<sp/>of<sp/>the<sp/>maximum<sp/>element<sp/>in<sp/>the<sp/>current<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxIndex<sp/>=<sp/>FindRowWithMaxElement(cCol,<sp/>cRow);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>consider<sp/>the<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>aim<sp/>is<sp/>to<sp/>set<sp/>all<sp/>elements<sp/>BELOW<sp/>the<sp/>diagonal<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex=cRow+1;<sp/>rowIndex&lt;m_nRows;<sp/>++rowIndex)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>element<sp/>is<sp/>already<sp/>zero,<sp/>move<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(m_matrixData[Sub2Ind(rowIndex,<sp/>cCol)],<sp/>0.0))</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowOneIndex<sp/>=<sp/>cCol;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>value<sp/>stored<sp/>at<sp/>the<sp/>current<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>currentElementValue<sp/>=<sp/>m_matrixData[Sub2Ind(rowIndex,<sp/>cCol)];</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>value<sp/>stored<sp/>at<sp/>(rowOneIndex,<sp/>cCol)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>rowOneValue<sp/>=<sp/>m_matrixData[Sub2Ind(rowOneIndex,<sp/>cCol)];</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>equal<sp/>to<sp/>zero,<sp/>then<sp/>just<sp/>move<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(rowOneValue,<sp/>0.0))</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>correction<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(required<sp/>to<sp/>reduce<sp/>the<sp/>element<sp/>at<sp/>(rowIndex,<sp/>cCol)<sp/>to<sp/>zero).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>correctionFactor<sp/>=<sp/>-(currentElementValue<sp/>/<sp/>rowOneValue);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultAdd(rowIndex,<sp/>rowOneIndex,<sp/>correctionFactor);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>whether<sp/>we<sp/>have<sp/>achieved<sp/>the<sp/>desired<sp/>result<sp/>of<sp/>converting<sp/>the</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>into<sp/>row-echelon<sp/>form.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>completeFlag<sp/>=<sp/>this-&gt;IsRowEchelon();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Form<sp/>the<sp/>output<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>outputMatrix(m_nRows,<sp/>m_nCols,<sp/>m_matrixData);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>original<sp/>matrix<sp/>data<sp/>from<sp/>the<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;(m_nRows<sp/>*<sp/>m_nCols);<sp/>++i)</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[i]<sp/>=<sp/>tempMatrixData[i];</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempMatrixData;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputMatrix;</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="936"><highlight class="comment">COMPUTE<sp/>THE<sp/>RANK<sp/>OF<sp/>THE<sp/>PROVIDED<sp/>MATRIX</highlight></codeline>
<codeline lineno="937"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="939" refid="classqb_matrix2_1aa41b896d3d520de3096530845cbbc9b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1aa41b896d3d520de3096530845cbbc9b4" kindref="member">qbMatrix2&lt;T&gt;::Rank</ref>()</highlight></codeline>
<codeline lineno="940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>matrix<sp/>to<sp/>row-echelon<sp/>form.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>matrixCopy<sp/>=<sp/>this-&gt;RowEchelon();</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>didn&apos;t<sp/>work,<sp/>then<sp/>we<sp/>compute<sp/>the<sp/>rank<sp/>by<sp/>finding</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>largest<sp/>non-zero<sp/>sub-matrix<sp/>with<sp/>a<sp/>non-zero<sp/>determinant.</highlight></codeline>
<codeline lineno="946"><highlight class="comment"></highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>this<sp/>method<sp/>is<sp/>slower<sp/>for<sp/>large<sp/>matrices<sp/>and<sp/>therefore</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>is<sp/>better<sp/>to<sp/>use<sp/>the<sp/>RowEchelon<sp/>method<sp/>if<sp/>possible.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numNonZeroRows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!matrixCopy.<ref refid="classqb_matrix2_1a44c85a2d4dcbd33b281ce417156d7431" kindref="member">IsRowEchelon</ref>())</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>std::vector<sp/>to<sp/>store<sp/>the<sp/>sub-matrices<sp/>as<sp/>we<sp/>go.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;qbMatrix2&lt;T&gt;&gt;<sp/>subMatrixVector;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>current<sp/>matrix<sp/>into<sp/>the<sp/>array<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatrixVector.push_back(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>through<sp/>the<sp/>subMatrixVector<sp/>until<sp/>either<sp/>we<sp/>have<sp/>tested<sp/>every</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-matrix<sp/>or<sp/>the<sp/>completeFlag<sp/>is<sp/>set.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>completeFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subMatrixCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((subMatrixCount<sp/>&lt;<sp/>subMatrixVector.size())<sp/>&amp;&amp;<sp/>(!completeFlag))</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>currentMatrix<sp/>to<sp/>work<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>currentMatrix<sp/>=<sp/>subMatrixVector[subMatrixCount];</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatrixCount++;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>this<sp/>matrix<sp/>is<sp/>non-zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentMatrix.<ref refid="classqb_matrix2_1a6a9aab698ac6362495a4421f859b3658" kindref="member">IsNonZero</ref>())</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>determinant<sp/>is<sp/>non-zero,<sp/>then<sp/>we<sp/>have<sp/>our<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>currentMatrixDet<sp/>=<sp/>currentMatrix.<ref refid="classqb_matrix2_1aeebab890f8c38f112972ffbcaaba422f" kindref="member">Determinant</ref>();</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(currentMatrixDet,<sp/>0.0))</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>completeFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNonZeroRows<sp/>=<sp/>currentMatrix.<ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">GetNumRows</ref>();</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>and<sp/>store<sp/>each<sp/>sub-matrix<sp/>(if<sp/>larger<sp/>than<sp/>2x2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((currentMatrix.<ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">GetNumRows</ref>()<sp/>&gt;<sp/>2)<sp/>&amp;&amp;<sp/>(currentMatrix.<ref refid="classqb_matrix2_1ab20362d8fc58a4b8da0910f94c3de2c3" kindref="member">GetNumCols</ref>()<sp/>&gt;<sp/>2))</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;currentMatrix.<ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">GetNumRows</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;currentMatrix.<ref refid="classqb_matrix2_1ab20362d8fc58a4b8da0910f94c3de2c3" kindref="member">GetNumCols</ref>();<sp/>++j)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>this<sp/>sub-matrix<sp/>and<sp/>store.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatrixVector.push_back(currentMatrix.<ref refid="classqb_matrix2_1a1c913b15492558472b2e271f5a856f3b" kindref="member">FindSubMatrix</ref>(i,j));</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Converting<sp/>to<sp/>row<sp/>echelon<sp/>form<sp/>did<sp/>work,<sp/>so<sp/>we<sp/>can<sp/>simply</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>the<sp/>number<sp/>of<sp/>non-zero<sp/>rows<sp/>to<sp/>get<sp/>the<sp/>rank.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>get<sp/>to<sp/>here,<sp/>then<sp/>we<sp/>can<sp/>assume<sp/>that<sp/>the<sp/>matrix<sp/>is<sp/>now</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>row-echelon<sp/>form<sp/>and<sp/>we<sp/>can<sp/>compute<sp/>the<sp/>rank<sp/>quite<sp/>easily</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>simply<sp/>the<sp/>number<sp/>of<sp/>non-zero<sp/>rows.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows<sp/>=<sp/>matrixCopy.<ref refid="classqb_matrix2_1a1626b647c5268a9e64f4651bcc4b8c6e" kindref="member">GetNumRows</ref>();</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols<sp/>=<sp/>matrixCopy.<ref refid="classqb_matrix2_1ab20362d8fc58a4b8da0910f94c3de2c3" kindref="member">GetNumCols</ref>();</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>each<sp/>row<sp/>and<sp/>test<sp/>whether<sp/>it<sp/>has<sp/>at<sp/>least<sp/>one<sp/>non-zero<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nRows;<sp/>++i)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>columns<sp/>of<sp/>this<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colSum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;nCols;<sp/>++j)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(matrixCopy.<ref refid="classqb_matrix2_1a62ddf209105dffe6133461b273a7309f" kindref="member">GetElement</ref>(i,j),<sp/>0.0))</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colSum++;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>colSum<sp/>is<sp/>greater<sp/>than<sp/>zero,<sp/>then<sp/>increment<sp/>numNonZeroRows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colSum<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNonZeroRows++;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rank<sp/>of<sp/>the<sp/>matrix<sp/>is<sp/>simply<sp/>the<sp/>number<sp/>of<sp/>non-zero<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numNonZeroRows;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>**************************************************************************************************</highlight></codeline>
<codeline lineno="1030"><highlight class="comment">PRIVATE<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="1031"><highlight class="comment">/*<sp/>*************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>return<sp/>the<sp/>linear<sp/>index<sp/>corresponding<sp/>to<sp/>the<sp/>supplied<sp/>row<sp/>and<sp/>column<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;::Sub2Ind</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1035"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref><sp/>&lt;<sp/>m_nRows)<sp/>&amp;&amp;<sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref><sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(col<sp/>&lt;<sp/>m_nCols)<sp/>&amp;&amp;<sp/>(col<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref><sp/>*<sp/>m_nCols)<sp/>+<sp/>col;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>test<sp/>whether<sp/>the<sp/>matrix<sp/>is<sp/>square.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1044" refid="classqb_matrix2_1ae3e42b917e3127cab56b7a48faff25c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1ae3e42b917e3127cab56b7a48faff25c3" kindref="member">qbMatrix2&lt;T&gt;::IsSquare</ref>()</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nCols<sp/>==<sp/>m_nRows)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>test<sp/>whether<sp/>the<sp/>matrix<sp/>is<sp/>non-zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1054" refid="classqb_matrix2_1a6a9aab698ac6362495a4421f859b3658" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a6a9aab698ac6362495a4421f859b3658" kindref="member">qbMatrix2&lt;T&gt;::IsNonZero</ref>()</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>every<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numNonZero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nElements;<sp/>++i)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>element<sp/>is<sp/>close<sp/>enough<sp/>to<sp/>zero,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increment<sp/>our<sp/>numNonZero<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(m_matrixData[i],<sp/>0.0))</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numNonZero++;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>numNonZero<sp/>counter<sp/>is<sp/>still<sp/>equal<sp/>to<sp/>zero,<sp/>then</highlight></codeline>
<codeline lineno="1067"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>matrix<sp/>must<sp/>be<sp/>all<sp/>zeros,<sp/>hence<sp/>we<sp/>return<sp/>false.</highlight></codeline>
<codeline lineno="1068"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Otherwise<sp/>we<sp/>return<sp/>true.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(numNonZero<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>test<sp/>whether<sp/>the<sp/>matrix<sp/>is<sp/>in<sp/>row-echelon<sp/>form.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1074" refid="classqb_matrix2_1a44c85a2d4dcbd33b281ce417156d7431" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a44c85a2d4dcbd33b281ce417156d7431" kindref="member">qbMatrix2&lt;T&gt;::IsRowEchelon</ref>()</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>do<sp/>this<sp/>by<sp/>testing<sp/>that<sp/>the<sp/>sum<sp/>of<sp/>all<sp/>the<sp/>elements<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower<sp/>triangular<sp/>matrix<sp/>is<sp/>zero.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>each<sp/>row,<sp/>except<sp/>the<sp/>first<sp/>one<sp/>(which<sp/>doesn&apos;t<sp/>need<sp/>to<sp/>have<sp/>any<sp/>zero<sp/>elements).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>cumulativeSum<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;m_nRows;<sp/>++i)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>over<sp/>the<sp/>columns<sp/>that<sp/>correspond<sp/>to<sp/>the<sp/>lower<sp/>triangular</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>according<sp/>to<sp/>the<sp/>current<sp/>row.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;i;<sp/>++j)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>this<sp/>element<sp/>to<sp/>the<sp/>cumulative<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulativeSum<sp/>+=<sp/>m_matrixData[Sub2Ind(i,<sp/>j)];</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>matrix<sp/>is<sp/>in<sp/>row-echelon<sp/>form,<sp/>then<sp/>cumulative<sp/>sum<sp/>should</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>still<sp/>equal<sp/>zero,<sp/>otherwise<sp/>the<sp/>matrix<sp/>cannot<sp/>be<sp/>in<sp/>row-echelon<sp/>form.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CloseEnough(cumulativeSum,<sp/>0.0);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>test<sp/>whether<sp/>the<sp/>matrix<sp/>is<sp/>symmetric.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1098" refid="classqb_matrix2_1a38c5e541fec532600806ac4fd8afecb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a38c5e541fec532600806ac4fd8afecb2" kindref="member">qbMatrix2&lt;T&gt;::IsSymmetric</ref>()</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>test<sp/>that<sp/>the<sp/>matrix<sp/>is<sp/>square,<sp/>if<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not,<sp/>then<sp/>it<sp/>cannot<sp/>by<sp/>symmetric.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;IsSquare())</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>test<sp/>for<sp/>symmetry<sp/>about<sp/>the<sp/>diagonal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>currentRowElement<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>currentColElement<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0.0);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>returnFlag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diagIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((diagIndex<sp/>&lt;<sp/>m_nCols)<sp/>&amp;&amp;<sp/>returnFlag)</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex<sp/>=<sp/>diagIndex<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((rowIndex<sp/>&lt;<sp/>m_nRows)<sp/>&amp;&amp;<sp/>returnFlag)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRowElement<sp/>=<sp/>this-&gt;GetElement(rowIndex,<sp/>diagIndex);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentColElement<sp/>=<sp/>this-&gt;GetElement(diagIndex,<sp/>rowIndex);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>row<sp/>and<sp/>column<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CloseEnough(currentRowElement,<sp/>currentColElement))</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnFlag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>row<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowIndex++;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>diagIndex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diagIndex++;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnFlag;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>swap<sp/>rows<sp/>i<sp/>and<sp/>j<sp/>(in<sp/>place).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;::SwapRow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>a<sp/>tempory<sp/>copy<sp/>of<sp/>row<sp/>i.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*tempRow<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[m_nCols];</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;m_nCols;<sp/>++k)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRow[k]<sp/>=<sp/>m_matrixData[Sub2Ind(i,k)];</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>row<sp/>i<sp/>with<sp/>row<sp/>j.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;m_nCols;<sp/>++k)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[Sub2Ind(i,k)]<sp/>=<sp/>m_matrixData[Sub2Ind(j,k)];</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>row<sp/>k<sp/>with<sp/>the<sp/>tempory<sp/>copy<sp/>of<sp/>the<sp/>original<sp/>row<sp/>i.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;m_nCols;<sp/>++k)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[Sub2Ind(j,k)]<sp/>=<sp/>tempRow[k];</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tidy<sp/>up<sp/>after<sp/>ourselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempRow;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>add<sp/>a<sp/>multiple<sp/>of<sp/>row<sp/>j<sp/>to<sp/>row<sp/>i<sp/>(in<sp/>place).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;::MultAdd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>T<sp/>multFactor)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;m_nCols;<sp/>++k)</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[Sub2Ind(i,k)]<sp/>+=<sp/>(m_matrixData[Sub2Ind(j,k)]<sp/>*<sp/>multFactor);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>the<sp/>find<sp/>the<sp/>row<sp/>with<sp/>the<sp/>maximum<sp/>element<sp/>at<sp/>the<sp/>column<sp/>given.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>row<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;::FindRowWithMaxElement</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startingRow)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tempValue<sp/>=<sp/>m_matrixData[Sub2Ind(startingRow,<sp/>colNumber)];</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowIndex<sp/>=<sp/>startingRow;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=startingRow+1;<sp/>k&lt;m_nRows;<sp/>++k)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(m_matrixData[Sub2Ind(k,<sp/>colNumber)])<sp/>&gt;<sp/>fabs(tempValue))</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowIndex<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempValue<sp/>=<sp/>m_matrixData[Sub2Ind(k,<sp/>colNumber)];</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rowIndex;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>multiply<sp/>a<sp/>row<sp/>by<sp/>the<sp/>given<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;::MultRow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>T<sp/>multFactor)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;m_nCols;<sp/>++k)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_matrixData[Sub2Ind(i,k)]<sp/>*=<sp/>multFactor;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>simple<sp/>function<sp/>to<sp/>print<sp/>a<sp/>matrix<sp/>to<sp/>stdout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1193" refid="classqb_matrix2_1a4bd6d0afe13739e2f7566cbd66b006e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a4bd6d0afe13739e2f7566cbd66b006e5" kindref="member">qbMatrix2&lt;T&gt;::PrintMatrix</ref>()</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows<sp/>=<sp/>this-&gt;GetNumRows();</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols<sp/>=<sp/>this-&gt;GetNumCols();</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref><sp/>=<sp/>0;<sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>&lt;nRows;<sp/>++<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col&lt;nCols;<sp/>++col)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(3)<sp/>&lt;&lt;<sp/>this-&gt;GetElement(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>col)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>simple<sp/>function<sp/>to<sp/>print<sp/>a<sp/>matrix<sp/>to<sp/>stdout,<sp/>with<sp/>specified<sp/>precision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1209" refid="classqb_matrix2_1aaefe2a08fdad8e89690dd1bddcc154d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2_1a4bd6d0afe13739e2f7566cbd66b006e5" kindref="member">qbMatrix2&lt;T&gt;::PrintMatrix</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1ae6165268264b393d031f89082216499d" kindref="member">precision</ref>)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nRows<sp/>=<sp/>this-&gt;GetNumRows();</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCols<sp/>=<sp/>this-&gt;GetNumCols();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref><sp/>=<sp/>0;<sp/><ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>&lt;nRows;<sp/>++<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col&lt;nCols;<sp/>++col)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(<ref refid="_s_d_l__opengl__glext_8h_1ae6165268264b393d031f89082216499d" kindref="member">precision</ref>)<sp/>&lt;&lt;<sp/>this-&gt;GetElement(<ref refid="_s_d_l__opengl__glext_8h_1a90d3e7e4182a9630993f640fa0443b0b" kindref="member">row</ref>,<sp/>col)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;::CloseEnough</ref>(T<sp/>f1,<sp/>T<sp/>f2)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fabs(f1-f2)<sp/>&lt;<sp/>1e-9;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Function<sp/>to<sp/>find<sp/>the<sp/>sub-matrix<sp/>for<sp/>the<sp/>given<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1231" refid="classqb_matrix2_1a1c913b15492558472b2e271f5a856f3b" refkind="member"><highlight class="normal"><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/><ref refid="classqb_matrix2_1a1c913b15492558472b2e271f5a856f3b" kindref="member">qbMatrix2&lt;T&gt;::FindSubMatrix</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowNum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colNum)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>matrix<sp/>to<sp/>store<sp/>the<sp/>sub-matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>is<sp/>one<sp/>row<sp/>and<sp/>one<sp/>column<sp/>smaller<sp/>than<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classqb_matrix2" kindref="compound">qbMatrix2&lt;T&gt;</ref><sp/>subMatrix(m_nRows-1,<sp/>m_nCols-1);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>the<sp/>elements<sp/>of<sp/>the<sp/>existing<sp/>matrix<sp/>and<sp/>copy<sp/>to<sp/>sub-matrix<sp/>as<sp/>appropriate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_nRows;<sp/>++i)</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;m_nCols;<sp/>++j)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>i<sp/>or<sp/>j<sp/>correspond<sp/>to<sp/>rowNum<sp/>or<sp/>colNum,<sp/>then<sp/>ignore<sp/>this<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>!=<sp/>rowNum)<sp/>&amp;&amp;<sp/>(j<sp/>!=<sp/>colNum))</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subMatrix.m_matrixData[<ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref>]<sp/>=<sp/>this-&gt;GetElement(i,j);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subMatrix;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/RayTrace/qbLinAlg/qbMatrix.h"/>
  </compounddef>
</doxygen>
