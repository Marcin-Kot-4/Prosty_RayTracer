<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__video_8h" kind="file" language="C++">
    <compoundname>SDL_video.h</compoundname>
    <includes refid="_s_d_l__stdinc_8h" local="yes">SDL_stdinc.h</includes>
    <includes refid="_s_d_l__pixels_8h" local="yes">SDL_pixels.h</includes>
    <includes refid="_s_d_l__rect_8h" local="yes">SDL_rect.h</includes>
    <includes refid="_s_d_l__surface_8h" local="yes">SDL_surface.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l_8h" local="yes">D:/RayTracing/include/SDL.h</includedby>
    <includedby refid="_s_d_l__events_8h" local="yes">D:/RayTracing/include/SDL_events.h</includedby>
    <includedby refid="_s_d_l__gesture_8h" local="yes">D:/RayTracing/include/SDL_gesture.h</includedby>
    <includedby refid="_s_d_l__keyboard_8h" local="yes">D:/RayTracing/include/SDL_keyboard.h</includedby>
    <includedby refid="_s_d_l__messagebox_8h" local="yes">D:/RayTracing/include/SDL_messagebox.h</includedby>
    <includedby refid="_s_d_l__metal_8h" local="yes">D:/RayTracing/include/SDL_metal.h</includedby>
    <includedby refid="_s_d_l__mouse_8h" local="yes">D:/RayTracing/include/SDL_mouse.h</includedby>
    <includedby refid="_s_d_l__render_8h" local="yes">D:/RayTracing/include/SDL_render.h</includedby>
    <includedby refid="_s_d_l__shape_8h" local="yes">D:/RayTracing/include/SDL_shape.h</includedby>
    <includedby refid="_s_d_l__system_8h" local="yes">D:/RayTracing/include/SDL_system.h</includedby>
    <includedby refid="_s_d_l__syswm_8h" local="yes">D:/RayTracing/include/SDL_syswm.h</includedby>
    <includedby refid="_s_d_l__touch_8h" local="yes">D:/RayTracing/include/SDL_touch.h</includedby>
    <includedby refid="_s_d_l__vulkan_8h" local="yes">D:/RayTracing/include/SDL_vulkan.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>SDL_blendmode.h</label>
        <link refid="_s_d_l__blendmode_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SDL_endian.h</label>
        <link refid="_s_d_l__endian_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SDL_error.h</label>
        <link refid="_s_d_l__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SDL_pixels.h</label>
        <link refid="_s_d_l__pixels_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SDL_rect.h</label>
        <link refid="_s_d_l__rect_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SDL_rwops.h</label>
        <link refid="_s_d_l__rwops_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SDL_surface.h</label>
        <link refid="_s_d_l__surface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_video.h</label>
        <link refid="_s_d_l__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="6">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="3">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="6">
        <label>D:/RayTracing/RayTrace/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/include/SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>D:/RayTracing/include/SDL_events.h</label>
        <link refid="_s_d_l__events_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>D:/RayTracing/include/SDL_gesture.h</label>
        <link refid="_s_d_l__gesture_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>D:/RayTracing/include/SDL_keyboard.h</label>
        <link refid="_s_d_l__keyboard_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>D:/RayTracing/include/SDL_messagebox.h</label>
        <link refid="_s_d_l__messagebox_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>D:/RayTracing/include/SDL_metal.h</label>
        <link refid="_s_d_l__metal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>D:/RayTracing/include/SDL_mouse.h</label>
        <link refid="_s_d_l__mouse_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>D:/RayTracing/include/SDL_render.h</label>
        <link refid="_s_d_l__render_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>D:/RayTracing/include/SDL_shape.h</label>
        <link refid="_s_d_l__shape_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>D:/RayTracing/include/SDL_system.h</label>
        <link refid="_s_d_l__system_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>D:/RayTracing/include/SDL_syswm.h</label>
        <link refid="_s_d_l__syswm_8h"/>
      </node>
      <node id="12">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="13">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/RayTracing/include/SDL_test_compare.h</label>
        <link refid="_s_d_l__test__compare_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>D:/RayTracing/include/SDL_test_images.h</label>
        <link refid="_s_d_l__test__images_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>D:/RayTracing/include/SDL_touch.h</label>
        <link refid="_s_d_l__touch_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_video.h</label>
        <link refid="_s_d_l__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>D:/RayTracing/include/SDL_vulkan.h</label>
        <link refid="_s_d_l__vulkan_8h"/>
      </node>
      <node id="5">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_s_d_l___display_mode" prot="public">SDL_DisplayMode</innerclass>
      <sectiondef kind="user-defined">
      <header>OpenGL support functions</header>
      <memberdef kind="function" id="_s_d_l__video_8h_1a398df9aaf43a69dc2cfaab5b306b8f91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GL_LoadLibrary</definition>
        <argsstring>(const char *path)</argsstring>
        <name>SDL_GL_LoadLibrary</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dynamically load an OpenGL library.</para>
<para>This should be done after initializing the video driver, but before creating any OpenGL windows. If no OpenGL library is loaded, the default library will be loaded upon creation of the first OpenGL window.</para>
<para>If you do this, you need to retrieve all of the GL functions used in your program from the dynamic library using <ref refid="_s_d_l__video_8h_1a6500d698e7dbe6799250a626a8b42359" kindref="member">SDL_GL_GetProcAddress()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the platform dependent OpenGL library name, or NULL to open the default OpenGL library </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6500d698e7dbe6799250a626a8b42359" kindref="member">SDL_GL_GetProcAddress</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a92103adf9637ec2dc471714076872bdc" kindref="member">SDL_GL_UnloadLibrary</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1783" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1783" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a6500d698e7dbe6799250a626a8b42359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_GL_GetProcAddress</definition>
        <argsstring>(const char *proc)</argsstring>
        <name>SDL_GL_GetProcAddress</name>
        <param>
          <type>const char *</type>
          <declname>proc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an OpenGL function by name.</para>
<para>If the GL library is loaded at runtime with <ref refid="_s_d_l__video_8h_1a398df9aaf43a69dc2cfaab5b306b8f91" kindref="member">SDL_GL_LoadLibrary()</ref>, then all GL functions must be retrieved this way. Usually this is used to retrieve function pointers to OpenGL extensions.</para>
<para>There are some quirks to looking up OpenGL functions that require some extra care from the application. If you code carefully, you can handle these quirks without any platform-specific code, though:</para>
<para><itemizedlist>
<listitem><para>On Windows, function pointers are specific to the current GL context; this means you need to have created a GL context and made it current before calling <ref refid="_s_d_l__video_8h_1a6500d698e7dbe6799250a626a8b42359" kindref="member">SDL_GL_GetProcAddress()</ref>. If you recreate your context or create a second context, you should assume that any existing function pointers aren&apos;t valid to use with it. This is (currently) a Windows-specific limitation, and in practice lots of drivers don&apos;t suffer this limitation, but it is still the way the wgl API is documented to work and you should expect crashes if you don&apos;t respect it. Store a copy of the function pointers that comes and goes with context lifespan.</para>
</listitem><listitem><para>On X11, function pointers returned by this function are valid for any context, and can even be looked up before a context is created at all. This means that, for at least some common OpenGL implementations, if you look up a function that doesn&apos;t exist, you&apos;ll get a non-NULL result that is <emphasis>NOT</emphasis> safe to call. You must always make sure the function is actually available for a given GL context before calling it, by checking for the existence of the appropriate extension with <ref refid="_s_d_l__video_8h_1a1fa0cc176fbc16db139b40a121e9cfa7" kindref="member">SDL_GL_ExtensionSupported()</ref>, or verifying that the version of OpenGL you&apos;re using offers the function as core functionality.</para>
</listitem><listitem><para>Some OpenGL drivers, on all platforms, <emphasis>will</emphasis> return NULL if a function isn&apos;t supported, but you can&apos;t count on this behavior. Check for extensions you use, and if you get a NULL anyway, act as if that extension wasn&apos;t available. This is probably a bug in the driver, but you can code defensively for this scenario anyhow.</para>
</listitem><listitem><para>Just because you&apos;re on Linux/Unix, don&apos;t assume you&apos;ll be using X11. Next-gen display servers are waiting to replace it, and may or may not make the same promises about function pointers.</para>
</listitem><listitem><para>OpenGL function pointers must be declared <computeroutput>APIENTRY</computeroutput> as in the example code. This will ensure the proper calling convention is followed on platforms where this matters (Win32) thereby avoiding stack corruption.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>proc</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of an OpenGL function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the named OpenGL function. The returned pointer should be cast to the appropriate function signature.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a1fa0cc176fbc16db139b40a121e9cfa7" kindref="member">SDL_GL_ExtensionSupported</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a398df9aaf43a69dc2cfaab5b306b8f91" kindref="member">SDL_GL_LoadLibrary</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a92103adf9637ec2dc471714076872bdc" kindref="member">SDL_GL_UnloadLibrary</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1836" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1836" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a92103adf9637ec2dc471714076872bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GL_UnloadLibrary</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GL_UnloadLibrary</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unload the OpenGL library previously loaded by <ref refid="_s_d_l__video_8h_1a398df9aaf43a69dc2cfaab5b306b8f91" kindref="member">SDL_GL_LoadLibrary()</ref>.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a398df9aaf43a69dc2cfaab5b306b8f91" kindref="member">SDL_GL_LoadLibrary</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1845" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1845" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a1fa0cc176fbc16db139b40a121e9cfa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_GL_ExtensionSupported</definition>
        <argsstring>(const char *extension)</argsstring>
        <name>SDL_GL_ExtensionSupported</name>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if an OpenGL extension is supported for the current context.</para>
<para>This function operates on the current GL context; you must have created a context and it must be current before calling this function. Do not assume that all contexts you create will have the same set of extensions available, or that recreating an existing context will offer the same extensions again.</para>
<para>While it&apos;s probably not a massive overhead, this function is not an O(1) operation. Check the extensions you care about after creating the GL context and save that information somewhere instead of calling the function every time you need to know.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extension</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the extension to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if the extension is supported, SDL_FALSE otherwise.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1866" column="34" declfile="D:/RayTracing/include/SDL_video.h" declline="1866" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ac96f25a7a6b28387d2813d8db71921ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GL_ResetAttributes</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GL_ResetAttributes</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset all previously set OpenGL context attributes to their default values.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.2.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a611bbed6c7374329e1d1b9c31b06976d" kindref="member">SDL_GL_GetAttribute</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aed4d4347f2d5def1532bc22893e0e0d9" kindref="member">SDL_GL_SetAttribute</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1877" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1877" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1aed4d4347f2d5def1532bc22893e0e0d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GL_SetAttribute</definition>
        <argsstring>(SDL_GLattr attr, int value)</argsstring>
        <name>SDL_GL_SetAttribute</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4" kindref="member">SDL_GLattr</ref></type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an OpenGL window attribute before window creation.</para>
<para>This function sets the OpenGL attribute <computeroutput>attr</computeroutput> to <computeroutput>value</computeroutput>. The requested attributes should be set before creating an OpenGL window. You should use <ref refid="_s_d_l__video_8h_1a611bbed6c7374329e1d1b9c31b06976d" kindref="member">SDL_GL_GetAttribute()</ref> to check the values after creating the OpenGL context, since the values obtained can differ from the requested ones.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>an SDL_GLattr enum value specifying the OpenGL attribute to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired value for the attribute </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a611bbed6c7374329e1d1b9c31b06976d" kindref="member">SDL_GL_GetAttribute</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac96f25a7a6b28387d2813d8db71921ff" kindref="member">SDL_GL_ResetAttributes</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1897" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1897" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a611bbed6c7374329e1d1b9c31b06976d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GL_GetAttribute</definition>
        <argsstring>(SDL_GLattr attr, int *value)</argsstring>
        <name>SDL_GL_GetAttribute</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4" kindref="member">SDL_GLattr</ref></type>
          <declname>attr</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the actual value for an attribute from the current context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>an SDL_GLattr enum value specifying the OpenGL attribute to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the current value of <computeroutput>attr</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac96f25a7a6b28387d2813d8db71921ff" kindref="member">SDL_GL_ResetAttributes</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aed4d4347f2d5def1532bc22893e0e0d9" kindref="member">SDL_GL_SetAttribute</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1912" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1912" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a0e14c935cf304133278893bf6c1d2691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_GLContext SDLCALL SDL_GL_CreateContext</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GL_CreateContext</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an OpenGL context for an OpenGL window, and make it current.</para>
<para>Windows users new to OpenGL should note that, for historical reasons, GL functions added after OpenGL version 1.1 are not available by default. Those functions must be loaded at run-time, either with an OpenGL extension-handling library or with <ref refid="_s_d_l__video_8h_1a6500d698e7dbe6799250a626a8b42359" kindref="member">SDL_GL_GetProcAddress()</ref> and its related functions.</para>
<para>SDL_GLContext is an alias for <computeroutput>void *</computeroutput>. It&apos;s opaque to the application.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to associate with the context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the OpenGL context associated with <computeroutput>window</computeroutput> or NULL on error; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more details.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aa64ab050e0bd3a61057c3dffe953aa9f" kindref="member">SDL_GL_DeleteContext</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a5a2ad98e8920f8069bf89eb3f9bbc377" kindref="member">SDL_GL_MakeCurrent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1934" column="39" declfile="D:/RayTracing/include/SDL_video.h" declline="1934" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a5a2ad98e8920f8069bf89eb3f9bbc377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GL_MakeCurrent</definition>
        <argsstring>(SDL_Window *window, SDL_GLContext context)</argsstring>
        <name>SDL_GL_MakeCurrent</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref></type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up an OpenGL context for rendering into an OpenGL window.</para>
<para>The context must have been created with a compatible window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to associate with the context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the OpenGL context to associate with the window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a0e14c935cf304133278893bf6c1d2691" kindref="member">SDL_GL_CreateContext</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1951" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1951" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a98181cae6b6d56f3bdbe9f83e46482de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Window *SDLCALL SDL_GL_GetCurrentWindow</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GL_GetCurrentWindow</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the currently active OpenGL window.</para>
<para><simplesect kind="return"><para>the currently active OpenGL window on success or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1962" column="36" declfile="D:/RayTracing/include/SDL_video.h" declline="1962" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a742f600404b9090bd64f8e863ece98c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_GLContext SDLCALL SDL_GL_GetCurrentContext</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GL_GetCurrentContext</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the currently active OpenGL context.</para>
<para><simplesect kind="return"><para>the currently active OpenGL context or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a5a2ad98e8920f8069bf89eb3f9bbc377" kindref="member">SDL_GL_MakeCurrent</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1974" column="39" declfile="D:/RayTracing/include/SDL_video.h" declline="1974" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ac21851bbd91760c5bab92594a58edba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GL_GetDrawableSize</definition>
        <argsstring>(SDL_Window *window, int *w, int *h)</argsstring>
        <name>SDL_GL_GetDrawableSize</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of a window&apos;s underlying drawable in pixels.</para>
<para>This returns info useful for calling <ref refid="_s_d_l__opengl_8h_1a8e93835e91933b7078c88f905dd8599c" kindref="member">glViewport()</ref>.</para>
<para>This may differ from <ref refid="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" kindref="member">SDL_GetWindowSize()</ref> if we&apos;re rendering to a high-DPI drawable, i.e. the window was created with <computeroutput>SDL_WINDOW_ALLOW_HIGHDPI</computeroutput> on a platform with high-DPI support (Apple calls this &quot;Retina&quot;), and not disabled by the <computeroutput>SDL_HINT_VIDEO_HIGHDPI_DISABLED</computeroutput> hint.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window from which the drawable size should be queried </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to variable for storing the width in pixels, may be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to variable for storing the height in pixels, may be NULL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.1.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" kindref="member">SDL_GetWindowSize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1996" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1996" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a68b0d06595d086d9244fd49afe3e8360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GL_SetSwapInterval</definition>
        <argsstring>(int interval)</argsstring>
        <name>SDL_GL_SetSwapInterval</name>
        <param>
          <type>int</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the swap interval for the current OpenGL context.</para>
<para>Some systems allow specifying -1 for the interval, to enable adaptive vsync. Adaptive vsync works the same as vsync, but if you&apos;ve already missed the vertical retrace for a given frame, it swaps buffers immediately, which might be less jarring for the user during occasional framerate drops. If an application requests adaptive vsync and the system does not support it, this function will fail and return -1. In such a case, you should probably retry the call with 1 for the interval.</para>
<para>Adaptive vsync is implemented for some glX drivers with GLX_EXT_swap_control_tear:</para>
<para><ulink url="https://www.opengl.org/registry/specs/EXT/glx_swap_control_tear.txt">https://www.opengl.org/registry/specs/EXT/glx_swap_control_tear.txt</ulink></para>
<para>and for some Windows drivers with WGL_EXT_swap_control_tear:</para>
<para><ulink url="https://www.opengl.org/registry/specs/EXT/wgl_swap_control_tear.txt">https://www.opengl.org/registry/specs/EXT/wgl_swap_control_tear.txt</ulink></para>
<para>Read more on the Khronos wiki: <ulink url="https://www.khronos.org/opengl/wiki/Swap_Interval#Adaptive_Vsync">https://www.khronos.org/opengl/wiki/Swap_Interval#Adaptive_Vsync</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interval</parametername>
</parameternamelist>
<parameterdescription>
<para>0 for immediate updates, 1 for updates synchronized with the vertical retrace, -1 for adaptive vsync </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or -1 if setting the swap interval is not supported; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae96490db6285ed0df44a9b1c0f498605" kindref="member">SDL_GL_GetSwapInterval</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="2031" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="2031" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ae96490db6285ed0df44a9b1c0f498605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GL_GetSwapInterval</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GL_GetSwapInterval</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the swap interval for the current OpenGL context.</para>
<para>If the system can&apos;t determine the swap interval, or there isn&apos;t a valid current context, this function will return 0 as a safe default.</para>
<para><simplesect kind="return"><para>0 if there is no vertical retrace synchronization, 1 if the buffer swap is synchronized with the vertical retrace, and -1 if late swaps happen immediately instead of waiting for the next retrace; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a68b0d06595d086d9244fd49afe3e8360" kindref="member">SDL_GL_SetSwapInterval</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="2048" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="2048" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a11d1245662f49f6af257627119f22835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GL_SwapWindow</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GL_SwapWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update a window with OpenGL rendering.</para>
<para>This is used with double-buffered OpenGL contexts, which are the default.</para>
<para>On macOS, make sure you bind 0 to the draw framebuffer before swapping the window, otherwise nothing will happen. If you aren&apos;t using <ref refid="_s_d_l__opengles2__gl2_8h_1ad755c8947ccfb469c84702204d19adf4" kindref="member">glBindFramebuffer()</ref>, this is the default and you won&apos;t have to do anything extra.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to change</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="2064" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="2064" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1aa64ab050e0bd3a61057c3dffe953aa9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GL_DeleteContext</definition>
        <argsstring>(SDL_GLContext context)</argsstring>
        <name>SDL_GL_DeleteContext</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref></type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete an OpenGL context.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the OpenGL context to be deleted</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a0e14c935cf304133278893bf6c1d2691" kindref="member">SDL_GL_CreateContext</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="2075" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="2075" declcolumn="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_l__video_8h_1a0eee89b50bf349f05cb28d6ca7c2dec8" prot="public" static="no">
        <name>SDL_WINDOWPOS_UNDEFINED_MASK</name>
        <initializer>0x1FFF0000u</initializer>
        <briefdescription>
<para>Used to indicate that you don&apos;t care what the window position is. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="136" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__video_8h_1a29aa3ade62cfe16de4c8b1e9c4272ab0" prot="public" static="no">
        <name>SDL_WINDOWPOS_UNDEFINED_DISPLAY</name>
        <param><defname>X</defname></param>
        <initializer>(<ref refid="_s_d_l__video_8h_1a0eee89b50bf349f05cb28d6ca7c2dec8" kindref="member">SDL_WINDOWPOS_UNDEFINED_MASK</ref>|(X))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="137" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__video_8h_1a20917558a7e5fb159647980218726a52" prot="public" static="no">
        <name>SDL_WINDOWPOS_UNDEFINED</name>
        <initializer><ref refid="_s_d_l__video_8h_1a29aa3ade62cfe16de4c8b1e9c4272ab0" kindref="member">SDL_WINDOWPOS_UNDEFINED_DISPLAY</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="138" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__video_8h_1a8ded7367fc7c4375cc195ff4a2a2132c" prot="public" static="no">
        <name>SDL_WINDOWPOS_ISUNDEFINED</name>
        <param><defname>X</defname></param>
        <initializer>            (((X)&amp;0xFFFF0000) == <ref refid="_s_d_l__video_8h_1a0eee89b50bf349f05cb28d6ca7c2dec8" kindref="member">SDL_WINDOWPOS_UNDEFINED_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="139" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__video_8h_1a5088b87c9d01cc26915ff082aaf014fa" prot="public" static="no">
        <name>SDL_WINDOWPOS_CENTERED_MASK</name>
        <initializer>0x2FFF0000u</initializer>
        <briefdescription>
<para>Used to indicate that the window position should be centered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="145" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__video_8h_1a3399af2e94d0de95e69e6bcc57969d58" prot="public" static="no">
        <name>SDL_WINDOWPOS_CENTERED_DISPLAY</name>
        <param><defname>X</defname></param>
        <initializer>(<ref refid="_s_d_l__video_8h_1a5088b87c9d01cc26915ff082aaf014fa" kindref="member">SDL_WINDOWPOS_CENTERED_MASK</ref>|(X))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="146" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__video_8h_1a8d2f428ddef3b4ccf08915814e35d9c7" prot="public" static="no">
        <name>SDL_WINDOWPOS_CENTERED</name>
        <initializer><ref refid="_s_d_l__video_8h_1a3399af2e94d0de95e69e6bcc57969d58" kindref="member">SDL_WINDOWPOS_CENTERED_DISPLAY</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="147" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__video_8h_1a07ffe394c82e7c5d93443e76e5356cbb" prot="public" static="no">
        <name>SDL_WINDOWPOS_ISCENTERED</name>
        <param><defname>X</defname></param>
        <initializer>            (((X)&amp;0xFFFF0000) == <ref refid="_s_d_l__video_8h_1a5088b87c9d01cc26915ff082aaf014fa" kindref="member">SDL_WINDOWPOS_CENTERED_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="148" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_WindowFlags</name>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ac7b8279bdf5e22a0b4a95aae3d846923" prot="public">
          <name>SDL_WINDOW_FULLSCREEN</name>
          <initializer>= 0x00000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>fullscreen window </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a5cf8af096f1870b0c2b12267cabd1f7a" prot="public">
          <name>SDL_WINDOW_OPENGL</name>
          <initializer>= 0x00000002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window usable with OpenGL context </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4300d051290adcb71c1b5e82e2553c4d" prot="public">
          <name>SDL_WINDOW_SHOWN</name>
          <initializer>= 0x00000004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window is visible </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18adda25e98e54964c0c2ec9ac31f5e629c" prot="public">
          <name>SDL_WINDOW_HIDDEN</name>
          <initializer>= 0x00000008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window is not visible </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18af7baea7dc9c0e4f09b28793504b02e4c" prot="public">
          <name>SDL_WINDOW_BORDERLESS</name>
          <initializer>= 0x00000010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>no window decoration </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aaf59a5e2f762aa2b6d2e49b0ca220fd8" prot="public">
          <name>SDL_WINDOW_RESIZABLE</name>
          <initializer>= 0x00000020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window can be resized </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a7f08ee26b5773412a212233ddc168c5a" prot="public">
          <name>SDL_WINDOW_MINIMIZED</name>
          <initializer>= 0x00000040</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window is minimized </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18acd8063a617f2ce05f694ecdbf56f811a" prot="public">
          <name>SDL_WINDOW_MAXIMIZED</name>
          <initializer>= 0x00000080</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window is maximized </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ae0d26c938ff5e806166f5f44d2ffcf70" prot="public">
          <name>SDL_WINDOW_MOUSE_GRABBED</name>
          <initializer>= 0x00000100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window has grabbed mouse input </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18afcbb682c0942bc106af1474c1d34bb53" prot="public">
          <name>SDL_WINDOW_INPUT_FOCUS</name>
          <initializer>= 0x00000200</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window has input focus </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aa722d0955c297fc60c09b10e1679684c" prot="public">
          <name>SDL_WINDOW_MOUSE_FOCUS</name>
          <initializer>= 0x00000400</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window has mouse focus </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18abfb8eeb3dc7f1844aa55dfdee3d4d7b8" prot="public">
          <name>SDL_WINDOW_FULLSCREEN_DESKTOP</name>
          <initializer>= ( SDL_WINDOW_FULLSCREEN | 0x00001000 )</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a1ac8e0ef2237a089cf487d7e7fcc6e23" prot="public">
          <name>SDL_WINDOW_FOREIGN</name>
          <initializer>= 0x00000800</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window not created by SDL </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a03ec21b04fa4e5c8cc868aa01a0c1bf3" prot="public">
          <name>SDL_WINDOW_ALLOW_HIGHDPI</name>
          <initializer>= 0x00002000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window should be created in high-DPI mode if supported. On macOS NSHighResolutionCapable must be set true in the application&apos;s Info.plist for this to have any effect. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4c16b51a323741bf5c492adce34e5882" prot="public">
          <name>SDL_WINDOW_MOUSE_CAPTURE</name>
          <initializer>= 0x00004000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window has mouse captured (unrelated to MOUSE_GRABBED) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a318e8aee0e3fddcfe2257757c6eb3128" prot="public">
          <name>SDL_WINDOW_ALWAYS_ON_TOP</name>
          <initializer>= 0x00008000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window should always be above others </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4bd52941a63adc993271579d52fb6641" prot="public">
          <name>SDL_WINDOW_SKIP_TASKBAR</name>
          <initializer>= 0x00010000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window should not be added to the taskbar </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a94224404de009a2fb6856a6a69d20d85" prot="public">
          <name>SDL_WINDOW_UTILITY</name>
          <initializer>= 0x00020000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window should be treated as a utility window </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a226509512aeab3c2c01deb75c182adf5" prot="public">
          <name>SDL_WINDOW_TOOLTIP</name>
          <initializer>= 0x00040000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window should be treated as a tooltip </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aeb1e21d5d8ed10b5d65ab0909b5c8c0d" prot="public">
          <name>SDL_WINDOW_POPUP_MENU</name>
          <initializer>= 0x00080000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window should be treated as a popup menu </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ab323e087b24b6034070bbc825287cf18" prot="public">
          <name>SDL_WINDOW_KEYBOARD_GRABBED</name>
          <initializer>= 0x00100000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window has grabbed keyboard input </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a55d2d1e92b96050c5a9cd8280d78f26c" prot="public">
          <name>SDL_WINDOW_VULKAN</name>
          <initializer>= 0x10000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window usable for Vulkan surface </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ad63da27122aeaa0c8986dbb7014ce76d" prot="public">
          <name>SDL_WINDOW_METAL</name>
          <initializer>= 0x20000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>window usable for Metal view </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aaf410e1082e45a55ef9176163610dba2" prot="public">
          <name>SDL_WINDOW_INPUT_GRABBED</name>
          <initializer>= SDL_WINDOW_MOUSE_GRABBED</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>equivalent to SDL_WINDOW_MOUSE_GRABBED for compatibility </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The flags on a window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" kindref="member">SDL_GetWindowFlags()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="102" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="103" bodyend="131"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3bab" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_WindowEventID</name>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3babaee1301eee7ad982c50cd310607f968b7" prot="public">
          <name>SDL_WINDOWEVENT_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Never used </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba5e91fe11ed6a24a377a77d024c9639d5" prot="public">
          <name>SDL_WINDOWEVENT_SHOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been shown </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba04e5bd277e03b61a6e4b577f2a3fda55" prot="public">
          <name>SDL_WINDOWEVENT_HIDDEN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been hidden </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3babac37af5c3ce56fe0956bc310821d59489" prot="public">
          <name>SDL_WINDOWEVENT_EXPOSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been exposed and should be redrawn </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba64da80af7b0a58689f07c7196de23da5" prot="public">
          <name>SDL_WINDOWEVENT_MOVED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been moved to data1, data2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba26096363b1a5a1eccc56a00d5f61948d" prot="public">
          <name>SDL_WINDOWEVENT_RESIZED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been resized to data1xdata2 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba98e76df5341be0a05c7461e32c7835f0" prot="public">
          <name>SDL_WINDOWEVENT_SIZE_CHANGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The window size has changed, either as a result of an API call or through the system or user changing the window size. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba70577b21b05c509d0342a5649092928d" prot="public">
          <name>SDL_WINDOWEVENT_MINIMIZED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been minimized </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba83593cf9ef16d0eaeeaac19b32a86a05" prot="public">
          <name>SDL_WINDOWEVENT_MAXIMIZED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been maximized </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba9ebe8fbb15f1bf06521d6b5484de3d89" prot="public">
          <name>SDL_WINDOWEVENT_RESTORED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been restored to normal size and position </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3babac6990e7537a4cc6cc7aaabc3376b9eb5" prot="public">
          <name>SDL_WINDOWEVENT_ENTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has gained mouse focus </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba7e1afdd5cfea592a59e129419b431bd5" prot="public">
          <name>SDL_WINDOWEVENT_LEAVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has lost mouse focus </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba529d1b574e559ee46892024e1c2e6c92" prot="public">
          <name>SDL_WINDOWEVENT_FOCUS_GAINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has gained keyboard focus </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba239e734c6ba478fb2f694fc7cde30c31" prot="public">
          <name>SDL_WINDOWEVENT_FOCUS_LOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has lost keyboard focus </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba2483911a3a2a20dbb1c88a15ffb9a360" prot="public">
          <name>SDL_WINDOWEVENT_CLOSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The window manager requests that the window be closed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba69ee247e6859b1d5d7dfffb7c1a99b4e" prot="public">
          <name>SDL_WINDOWEVENT_TAKE_FOCUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window is being offered a focus (should SetWindowInputFocus() on itself or a subwindow, or ignore) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba425a0e4dca5ba339eed8166248eeef8e" prot="public">
          <name>SDL_WINDOWEVENT_HIT_TEST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window had a hit test that wasn&apos;t SDL_HITTEST_NORMAL. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba9fd10380e9447afc2a43ca1682ca8f67" prot="public">
          <name>SDL_WINDOWEVENT_ICCPROF_CHANGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The ICC profile of the window&apos;s display has changed. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba79f1c661b605adb4390be30a4f217080" prot="public">
          <name>SDL_WINDOWEVENT_DISPLAY_CHANGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Window has been moved to display data1. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Event subtype for window events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="154" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="155" bodyend="180"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffc" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_DisplayEventID</name>
        <enumvalue id="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffca0f22fc5951aac829337807e4238110e5" prot="public">
          <name>SDL_DISPLAYEVENT_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Never used </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffca79af38ade27966e9e53476f5d3755f04" prot="public">
          <name>SDL_DISPLAYEVENT_ORIENTATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Display orientation has changed to data1 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffcaf5929ccf80049ecabbd5e50f2fc8485b" prot="public">
          <name>SDL_DISPLAYEVENT_CONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Display has been added to the system </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffcaeeb05c4066d71e3d5fc4774879d7540d" prot="public">
          <name>SDL_DISPLAYEVENT_DISCONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Display has been removed from the system </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Event subtype for display events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="185" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="186" bodyend="191"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbde" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_DisplayOrientation</name>
        <enumvalue id="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdeacb20982c4f82c7271a66a76b98eda731" prot="public">
          <name>SDL_ORIENTATION_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The display orientation can&apos;t be determined </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea5b1e627bf8f8be31d62292681f42694b" prot="public">
          <name>SDL_ORIENTATION_LANDSCAPE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The display is in landscape mode, with the right side up, relative to portrait mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea6cd1294f411220564276f85c32616c6a" prot="public">
          <name>SDL_ORIENTATION_LANDSCAPE_FLIPPED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The display is in landscape mode, with the left side up, relative to portrait mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea5fb622ac90f47a799d7d7f660d7c860b" prot="public">
          <name>SDL_ORIENTATION_PORTRAIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The display is in portrait mode </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea66727ec5e93a1112a254b4d3b8e867db" prot="public">
          <name>SDL_ORIENTATION_PORTRAIT_FLIPPED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The display is in portrait mode, upside down </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Display orientation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="196" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="197" bodyend="203"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baaf" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_FlashOperation</name>
        <enumvalue id="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa9164bc961f90c240d737dfa4e5877080" prot="public">
          <name>SDL_FLASH_CANCEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cancel any window flash state </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa337fa7e6aa90ea2873d0243b2654aae4" prot="public">
          <name>SDL_FLASH_BRIEFLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flash the window briefly to get attention </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa000ab7f97a52e7bbf062ef847ba6556f" prot="public">
          <name>SDL_FLASH_UNTIL_FOCUSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flash the window until it gets focus </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Window flash operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="208" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="209" bodyend="213"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_GLattr</name>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab91e9b7978b6d2c62291b9d7e88a1903" prot="public">
          <name>SDL_GL_RED_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4af32b5125f656487de9d3c1600c6e4eb9" prot="public">
          <name>SDL_GL_GREEN_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aa7f058249f389ebba59f5d3cb00d7806" prot="public">
          <name>SDL_GL_BLUE_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4abe24aa11a8007880290835e7eb07d5d7" prot="public">
          <name>SDL_GL_ALPHA_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ac41c21ee24979f52471afd0712ee08c4" prot="public">
          <name>SDL_GL_BUFFER_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a28c3841afe3b66ab86a267bf5d0a28e0" prot="public">
          <name>SDL_GL_DOUBLEBUFFER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4addf8f9d5c6d217954b14ece543dcbf17" prot="public">
          <name>SDL_GL_DEPTH_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a29dc7e9872be52f3327a452b6875c102" prot="public">
          <name>SDL_GL_STENCIL_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ae43ed10c33a2cc5b98a8c3d71e94ba43" prot="public">
          <name>SDL_GL_ACCUM_RED_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a901dce8f81e72cd6c0efa1f32ac96c2d" prot="public">
          <name>SDL_GL_ACCUM_GREEN_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4acc5dc0cb2c0e9e16d64dbdbde177d775" prot="public">
          <name>SDL_GL_ACCUM_BLUE_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a4c35a77fa9c78ac60997b3c15e158b2e" prot="public">
          <name>SDL_GL_ACCUM_ALPHA_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a7d51f1f66a480883c5e7a7d58f668d72" prot="public">
          <name>SDL_GL_STEREO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a83d7d3086480baed28bed6be4dadc8bf" prot="public">
          <name>SDL_GL_MULTISAMPLEBUFFERS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a54761551da12a1de15e2f844c70d19ad" prot="public">
          <name>SDL_GL_MULTISAMPLESAMPLES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ac48c7a4cf9eff0fa154878988b6697db" prot="public">
          <name>SDL_GL_ACCELERATED_VISUAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab2409f43111e32a7233602976d8fb588" prot="public">
          <name>SDL_GL_RETAINED_BACKING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a3102858c17eea157bdfcd245695fe0e8" prot="public">
          <name>SDL_GL_CONTEXT_MAJOR_VERSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a5aa38fec236a59f29def7cbc26e0a459" prot="public">
          <name>SDL_GL_CONTEXT_MINOR_VERSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a40f4b0ae113a8f384490d685f9d48de8" prot="public">
          <name>SDL_GL_CONTEXT_EGL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aec49ddd5d7f32394faa0bd9bf119657c" prot="public">
          <name>SDL_GL_CONTEXT_FLAGS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aec99ff71cb16785eb431311c59bd97e0" prot="public">
          <name>SDL_GL_CONTEXT_PROFILE_MASK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab162bed722047d9cd09b984a5c7e1277" prot="public">
          <name>SDL_GL_SHARE_WITH_CURRENT_CONTEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a1c7c3def7beea2c0aa8794d9da5003f4" prot="public">
          <name>SDL_GL_FRAMEBUFFER_SRGB_CAPABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a1ff3378ded0143863f908062afd0c17b" prot="public">
          <name>SDL_GL_CONTEXT_RELEASE_BEHAVIOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a3822f24741078433542b649fac5eddb7" prot="public">
          <name>SDL_GL_CONTEXT_RESET_NOTIFICATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aee607d4cdab39620c3dcc6e108b62a73" prot="public">
          <name>SDL_GL_CONTEXT_NO_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>OpenGL configuration attributes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="223" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="224" bodyend="252"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5f" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_GLprofile</name>
        <enumvalue id="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa7fae54c64a26a0e2a8dac6d47a1c510a" prot="public">
          <name>SDL_GL_CONTEXT_PROFILE_CORE</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa6db21ad6da230fb961fe0190a9e3398f" prot="public">
          <name>SDL_GL_CONTEXT_PROFILE_COMPATIBILITY</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa721fa797743fb228d804532cab8b8faa" prot="public">
          <name>SDL_GL_CONTEXT_PROFILE_ES</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>GLX_CONTEXT_ES2_PROFILE_BIT_EXT </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="254" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5d" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_GLcontextFlag</name>
        <enumvalue id="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5daf47902af7f161e63161b2b2489072173" prot="public">
          <name>SDL_GL_CONTEXT_DEBUG_FLAG</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5da127c5bc8035c20dabeb006d98a8da63e" prot="public">
          <name>SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG</name>
          <initializer>= 0x0002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5dac25c11305e0eb9f5e047529bd5ce3b5d" prot="public">
          <name>SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG</name>
          <initializer>= 0x0004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5da8f39abd1936a704f37ba8162e02bbb25" prot="public">
          <name>SDL_GL_CONTEXT_RESET_ISOLATION_FLAG</name>
          <initializer>= 0x0008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="261" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="262" bodyend="267"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aed" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_GLcontextReleaseFlag</name>
        <enumvalue id="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aeda7f6f5f576fc1fa56dcb6e8d30f4d1941" prot="public">
          <name>SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aedab0f0d7285f42906890a1cfc3d5240ebe" prot="public">
          <name>SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="269" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_GLContextResetNotification</name>
        <enumvalue id="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375a9395326b54fec0667f99e5c081eb8bf7" prot="public">
          <name>SDL_GL_CONTEXT_RESET_NO_NOTIFICATION</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375a9d8b7f4f987dfe5c7f6e2ae4227a41f4" prot="public">
          <name>SDL_GL_CONTEXT_RESET_LOSE_CONTEXT</name>
          <initializer>= 0x0001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="275" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_HitTestResult</name>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a3eb7be45c88e40366315d453f3bf721e" prot="public">
          <name>SDL_HITTEST_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Region is normal. No special properties. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a078a028af8c26848cf3576bd0c4d8fc9" prot="public">
          <name>SDL_HITTEST_DRAGGABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Region can drag entire window. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5acbfbe2bde22d4fdce5b19f327fd26798" prot="public">
          <name>SDL_HITTEST_RESIZE_TOPLEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a19edd2ad7c4f276d13a21aaf61672fcd" prot="public">
          <name>SDL_HITTEST_RESIZE_TOP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a2119a0469719b69f16a1f35ab810aff3" prot="public">
          <name>SDL_HITTEST_RESIZE_TOPRIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5ac8c0e2ed653a7b69243e317867d8ac42" prot="public">
          <name>SDL_HITTEST_RESIZE_RIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a7be4783a68f0c51166dbd289d9a42c51" prot="public">
          <name>SDL_HITTEST_RESIZE_BOTTOMRIGHT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a689ac09305aee5ee819aa39625f848db" prot="public">
          <name>SDL_HITTEST_RESIZE_BOTTOM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a94f9165ed48fb13d6996eae2a83154bf" prot="public">
          <name>SDL_HITTEST_RESIZE_BOTTOMLEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a09656621305e2f938a864fc425fe0869" prot="public">
          <name>SDL_HITTEST_RESIZE_LEFT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Possible return values from the SDL_HitTest callback.</para>
<para><simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a247c7fd43bb60b20630945a5bd9e4957" kindref="member">SDL_HitTest</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1616" column="1" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="1617" bodyend="1628"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" prot="public" static="no">
        <type>struct <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref></type>
        <definition>typedef struct SDL_Window SDL_Window</definition>
        <argsstring></argsstring>
        <name>SDL_Window</name>
        <briefdescription>
<para>The type used to identify a window. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aa5ba5ca928613b022e9872dc19197f6e" kindref="member">SDL_CreateWindowFrom()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a72609295a4faee0587268339ccff80c2" kindref="member">SDL_DestroyWindow()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a20c2c00579bb4b1fa6c15124621bbc6e" kindref="member">SDL_FlashWindow()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae2b358354dfad5523efadb95adc59ce4" kindref="member">SDL_GetWindowData()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" kindref="member">SDL_GetWindowFlags()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ad4e451db3880b6e0dd6647cbc351c6c0" kindref="member">SDL_GetWindowGrab()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1af34c1a3d017f800f3266257eeda19a61" kindref="member">SDL_GetWindowKeyboardGrab()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a2aaf67c9351b65a6517c78a32f651e46" kindref="member">SDL_GetWindowMouseGrab()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a03adfc1ed4aaf57da4af00bd247ac99c" kindref="member">SDL_GetWindowPosition()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" kindref="member">SDL_GetWindowSize()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a631b117f2c3712a55706d7fd60013536" kindref="member">SDL_GetWindowTitle()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aa3cbe663e0bd62aa7a747a6c11781766" kindref="member">SDL_HideWindow()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a8d969b660fee270f84cb403c8b75ded6" kindref="member">SDL_MaximizeWindow()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a9f802f6c7952552b1cb26958fad3f2a6" kindref="member">SDL_MinimizeWindow()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4b66b90f95780276addc14bc573c9f3c" kindref="member">SDL_RaiseWindow()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1afea37fca3b12f454e7f91d919fc99fbd" kindref="member">SDL_RestoreWindow()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4d2831ad431f59e3a5a5e472599f6c0a" kindref="member">SDL_SetWindowData()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ab4aa48f0a29f0868ce4e0422c02ed2fa" kindref="member">SDL_SetWindowFullscreen()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" kindref="member">SDL_SetWindowGrab()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a474b4cf41f81e65f88243b7616ad1789" kindref="member">SDL_SetWindowKeyboardGrab()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a1777999c919b478bc736f4a444c65381" kindref="member">SDL_SetWindowMouseGrab()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a0b6910b5d5aa2df0aeda257e445a472e" kindref="member">SDL_SetWindowIcon()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ab200a53e01ddc697fd6b8e017cc4e6dd" kindref="member">SDL_SetWindowPosition()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a29b118c6932ccb94d85b5435ae1e0a19" kindref="member">SDL_SetWindowSize()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1afb4b868e2cc0107ed6bcf5ba7aa376e0" kindref="member">SDL_SetWindowBordered()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a42d2451050ae01aaf2974344b9d4a812" kindref="member">SDL_SetWindowResizable()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a41aabc4b68f75f41d97995e02eb9deb6" kindref="member">SDL_SetWindowTitle()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6051ce26885b32b80bc7285b4facd0a1" kindref="member">SDL_ShowWindow()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="95" column="25" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" prot="public" static="no">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
        <definition>typedef void* SDL_GLContext</definition>
        <argsstring></argsstring>
        <name>SDL_GLContext</name>
        <briefdescription>
<para>An opaque handle to an OpenGL context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="218" column="14" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__video_8h_1a247c7fd43bb60b20630945a5bd9e4957" prot="public" static="no">
        <type><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5" kindref="member">SDL_HitTestResult</ref>(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref> *</type>
        <definition>typedef SDL_HitTestResult(SDLCALL * SDL_HitTest) (SDL_Window *win, const SDL_Point *area, void *data)</definition>
        <argsstring>)(SDL_Window *win, const SDL_Point *area, void *data)</argsstring>
        <name>SDL_HitTest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback used for hit-testing.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>win</parametername>
</parameternamelist>
<parameterdescription>
<para>the SDL_Window where hit-testing was set on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___point" kindref="compound">SDL_Point</ref> which should be hit-tested </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>what was passed as <computeroutput>callback_data</computeroutput> to <ref refid="_s_d_l__video_8h_1a23e14e1f21f7fb3727f38fd9b0711186" kindref="member">SDL_SetWindowHitTest()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an SDL_HitTestResult value.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a23e14e1f21f7fb3727f38fd9b0711186" kindref="member">SDL_SetWindowHitTest</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1640" column="9" bodyfile="D:/RayTracing/include/SDL_video.h" bodystart="1640" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_l__video_8h_1ac6f3250a95bd027fd1a374d7ed15fc57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetNumVideoDrivers</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetNumVideoDrivers</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of video drivers compiled into SDL.</para>
<para><simplesect kind="return"><para>a number &gt;= 1 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae88ab2c7515c52b180ef0238f8965b4b" kindref="member">SDL_GetVideoDriver</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="293" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="293" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ae88ab2c7515c52b180ef0238f8965b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_GetVideoDriver</definition>
        <argsstring>(int index)</argsstring>
        <name>SDL_GetVideoDriver</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a built in video driver.</para>
<para>The video drivers are presented in the order in which they are normally checked during initialization.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of a video driver </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name of the video driver with the given <bold>index</bold>.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac6f3250a95bd027fd1a374d7ed15fc57" kindref="member">SDL_GetNumVideoDrivers</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="308" column="36" declfile="D:/RayTracing/include/SDL_video.h" declline="308" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a05244b30716f0339dcd140c6f92017b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_VideoInit</definition>
        <argsstring>(const char *driver_name)</argsstring>
        <name>SDL_VideoInit</name>
        <param>
          <type>const char *</type>
          <declname>driver_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the video subsystem, optionally specifying a video driver.</para>
<para>This function initializes the video subsystem, setting up a connection to the window manager, etc, and determines the available display modes and pixel formats, but does not initialize a window or graphics mode.</para>
<para>If you use this function and you haven&apos;t used the SDL_INIT_VIDEO flag with either <ref refid="_s_d_l_8h_1a8fc8d35348d7c74bad8392d776c937b8" kindref="member">SDL_Init()</ref> or <ref refid="_s_d_l_8h_1adfbfddc0ec609b5e5e5cb1c89298e4db" kindref="member">SDL_InitSubSystem()</ref>, you should call <ref refid="_s_d_l__video_8h_1ade5fc4847320fb235f17265b683fa013" kindref="member">SDL_VideoQuit()</ref> before calling <ref refid="_s_d_l_8h_1afdabaf714781099083592051f2d9ac11" kindref="member">SDL_Quit()</ref>.</para>
<para>It is safe to call this function multiple times. <ref refid="_s_d_l__video_8h_1a05244b30716f0339dcd140c6f92017b7" kindref="member">SDL_VideoInit()</ref> will call <ref refid="_s_d_l__video_8h_1ade5fc4847320fb235f17265b683fa013" kindref="member">SDL_VideoQuit()</ref> itself if the video subsystem has already been initialized.</para>
<para>You can use <ref refid="_s_d_l__video_8h_1ac6f3250a95bd027fd1a374d7ed15fc57" kindref="member">SDL_GetNumVideoDrivers()</ref> and <ref refid="_s_d_l__video_8h_1ae88ab2c7515c52b180ef0238f8965b4b" kindref="member">SDL_GetVideoDriver()</ref> to find a specific <computeroutput>driver_name</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>driver_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of a video driver to initialize, or NULL for the default driver </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac6f3250a95bd027fd1a374d7ed15fc57" kindref="member">SDL_GetNumVideoDrivers</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae88ab2c7515c52b180ef0238f8965b4b" kindref="member">SDL_GetVideoDriver</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l_8h_1adfbfddc0ec609b5e5e5cb1c89298e4db" kindref="member">SDL_InitSubSystem</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ade5fc4847320fb235f17265b683fa013" kindref="member">SDL_VideoQuit</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="339" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="339" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ade5fc4847320fb235f17265b683fa013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_VideoQuit</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_VideoQuit</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shut down the video subsystem, if initialized with <ref refid="_s_d_l__video_8h_1a05244b30716f0339dcd140c6f92017b7" kindref="member">SDL_VideoInit()</ref>.</para>
<para>This function closes all windows, and restores the original video mode.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a05244b30716f0339dcd140c6f92017b7" kindref="member">SDL_VideoInit</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="350" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="350" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1aec2f46152701003e12689dac7de79eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_GetCurrentVideoDriver</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetCurrentVideoDriver</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of the currently initialized video driver.</para>
<para><simplesect kind="return"><para>the name of the current video driver or NULL if no driver has been initialized.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac6f3250a95bd027fd1a374d7ed15fc57" kindref="member">SDL_GetNumVideoDrivers</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae88ab2c7515c52b180ef0238f8965b4b" kindref="member">SDL_GetVideoDriver</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="363" column="36" declfile="D:/RayTracing/include/SDL_video.h" declline="363" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetNumVideoDisplays</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetNumVideoDisplays</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of available video displays.</para>
<para><simplesect kind="return"><para>a number &gt;= 1 or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac05213009395c10ae40bede2de8e08a1" kindref="member">SDL_GetDisplayBounds</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="375" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="375" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a3c8523dad11fceab8a8029239185529b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_GetDisplayName</definition>
        <argsstring>(int displayIndex)</argsstring>
        <name>SDL_GetDisplayName</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a display in UTF-8 encoding.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of display from which the name should be queried </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name of a display or NULL for an invalid display index or failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="389" column="37" declfile="D:/RayTracing/include/SDL_video.h" declline="389" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ac05213009395c10ae40bede2de8e08a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetDisplayBounds</definition>
        <argsstring>(int displayIndex, SDL_Rect *rect)</argsstring>
        <name>SDL_GetDisplayBounds</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> *</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the desktop area represented by a display.</para>
<para>The primary display (<computeroutput>displayIndex</computeroutput> zero) is always located at 0,0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> structure filled in with the display bounds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="405" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="405" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a9898f2e51cd90ace84cb0c6ea65d7051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetDisplayUsableBounds</definition>
        <argsstring>(int displayIndex, SDL_Rect *rect)</argsstring>
        <name>SDL_GetDisplayUsableBounds</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> *</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the usable desktop area represented by a display.</para>
<para>The primary display (<computeroutput>displayIndex</computeroutput> zero) is always located at 0,0.</para>
<para>This is the same area as <ref refid="_s_d_l__video_8h_1ac05213009395c10ae40bede2de8e08a1" kindref="member">SDL_GetDisplayBounds()</ref> reports, but with portions reserved by the system removed. For example, on Apple&apos;s macOS, this subtracts the area occupied by the menu bar and dock.</para>
<para>Setting a window to be fullscreen generally bypasses these unusable areas, so these are good guidelines for the maximum space available to a non-fullscreen window.</para>
<para>The parameter <computeroutput>rect</computeroutput> is ignored if it is NULL.</para>
<para>This function also returns -1 if the parameter <computeroutput>displayIndex</computeroutput> is out of range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display to query the usable bounds from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> structure filled in with the display bounds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.5.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac05213009395c10ae40bede2de8e08a1" kindref="member">SDL_GetDisplayBounds</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="436" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="436" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a8207ec5d13bd87158cbb42ef76e33216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetDisplayDPI</definition>
        <argsstring>(int displayIndex, float *ddpi, float *hdpi, float *vdpi)</argsstring>
        <name>SDL_GetDisplayDPI</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ddpi</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>hdpi</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>vdpi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dots/pixels-per-inch for a display.</para>
<para>Diagonal, horizontal and vertical DPI can all be optionally returned if the appropriate parameter is non-NULL.</para>
<para>A failure of this function usually means that either no DPI information is available or the <computeroutput>displayIndex</computeroutput> is out of range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display from which DPI information should be queried </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ddpi</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the diagonal DPI of the display; may be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hdpi</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the horizontal DPI of the display; may be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vdpi</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the vertical DPI of the display; may be NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.4.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="462" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="462" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a6540db01a424ced1847376e583361ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbde" kindref="member">SDL_DisplayOrientation</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_DisplayOrientation SDLCALL SDL_GetDisplayOrientation</definition>
        <argsstring>(int displayIndex)</argsstring>
        <name>SDL_GetDisplayOrientation</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the orientation of a display.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SDL_DisplayOrientation enum value of the display, or <computeroutput>SDL_ORIENTATION_UNKNOWN</computeroutput> if it isn&apos;t available.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.9.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="475" column="48" declfile="D:/RayTracing/include/SDL_video.h" declline="475" declcolumn="48"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a5abcf18592f00019c517e791f8ba53fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetNumDisplayModes</definition>
        <argsstring>(int displayIndex)</argsstring>
        <name>SDL_GetNumDisplayModes</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of available display modes.</para>
<para>The <computeroutput>displayIndex</computeroutput> needs to be in the range from 0 to <ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays()</ref> - 1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a number &gt;= 1 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a0a53e003ec6ad24dd2bbbcd0ad297311" kindref="member">SDL_GetDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="492" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="492" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a0a53e003ec6ad24dd2bbbcd0ad297311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetDisplayMode</definition>
        <argsstring>(int displayIndex, int modeIndex, SDL_DisplayMode *mode)</argsstring>
        <name>SDL_GetDisplayMode</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <param>
          <type>int</type>
          <declname>modeIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get information about a specific display mode.</para>
<para>The display modes are sorted in this priority:</para>
<para><itemizedlist>
<listitem><para>width -&gt; largest to smallest</para>
</listitem><listitem><para>height -&gt; largest to smallest</para>
</listitem><listitem><para>bits per pixel -&gt; more colors to fewer colors</para>
</listitem><listitem><para>packed pixel layout -&gt; largest to smallest</para>
</listitem><listitem><para>refresh rate -&gt; highest to lowest</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display mode to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> structure filled in with the mode at <computeroutput>modeIndex</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a5abcf18592f00019c517e791f8ba53fc" kindref="member">SDL_GetNumDisplayModes</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="516" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="516" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ab97bca68fc068a6ecc3db473c4c0defd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetDesktopDisplayMode</definition>
        <argsstring>(int displayIndex, SDL_DisplayMode *mode)</argsstring>
        <name>SDL_GetDesktopDisplayMode</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get information about the desktop&apos;s display mode.</para>
<para>There&apos;s a difference between this function and <ref refid="_s_d_l__video_8h_1a14dce1cb33085b36f08d27b3d8f2335b" kindref="member">SDL_GetCurrentDisplayMode()</ref> when SDL runs fullscreen and has changed the resolution. In that case this function will return the previous native display mode, and not the current display mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> structure filled in with the current display mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a14dce1cb33085b36f08d27b3d8f2335b" kindref="member">SDL_GetCurrentDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a0a53e003ec6ad24dd2bbbcd0ad297311" kindref="member">SDL_GetDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" kindref="member">SDL_SetWindowDisplayMode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="539" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="539" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a14dce1cb33085b36f08d27b3d8f2335b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetCurrentDisplayMode</definition>
        <argsstring>(int displayIndex, SDL_DisplayMode *mode)</argsstring>
        <name>SDL_GetCurrentDisplayMode</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get information about the current display mode.</para>
<para>There&apos;s a difference between this function and <ref refid="_s_d_l__video_8h_1ab97bca68fc068a6ecc3db473c4c0defd" kindref="member">SDL_GetDesktopDisplayMode()</ref> when SDL runs fullscreen and has changed the resolution. In that case this function will return the current display mode, and not the previous native display mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> structure filled in with the current display mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ab97bca68fc068a6ecc3db473c4c0defd" kindref="member">SDL_GetDesktopDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a0a53e003ec6ad24dd2bbbcd0ad297311" kindref="member">SDL_GetDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" kindref="member">SDL_SetWindowDisplayMode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="562" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="562" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a912994189211554bdd0b264e3f6d8e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_DisplayMode *SDLCALL SDL_GetClosestDisplayMode</definition>
        <argsstring>(int displayIndex, const SDL_DisplayMode *mode, SDL_DisplayMode *closest)</argsstring>
        <name>SDL_GetClosestDisplayMode</name>
        <param>
          <type>int</type>
          <declname>displayIndex</declname>
        </param>
        <param>
          <type>const <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> *</type>
          <declname>closest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the closest match to the requested display mode.</para>
<para>The available display modes are scanned and <computeroutput>closest</computeroutput> is filled in with the closest mode matching the requested mode and returned. The mode format and refresh rate default to the desktop mode if they are set to 0. The modes are scanned with size being first priority, format being second priority, and finally checking the refresh rate. If all the available modes are too small, then NULL is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>displayIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the display to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> structure containing the desired display mode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>closest</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> structure filled in with the closest match of the available display modes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the passed in value <computeroutput>closest</computeroutput> or NULL if no matching video mode was available; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a0a53e003ec6ad24dd2bbbcd0ad297311" kindref="member">SDL_GetDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a5abcf18592f00019c517e791f8ba53fc" kindref="member">SDL_GetNumDisplayModes</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="588" column="42" declfile="D:/RayTracing/include/SDL_video.h" declline="588" declcolumn="42"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a0be1d0a4d1f9a0da23b78db2f55871b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetWindowDisplayIndex</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowDisplayIndex</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index of the display associated with a window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the display containing the center of the window on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac05213009395c10ae40bede2de8e08a1" kindref="member">SDL_GetDisplayBounds</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="603" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="603" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowDisplayMode</definition>
        <argsstring>(SDL_Window *window, const SDL_DisplayMode *mode)</argsstring>
        <name>SDL_SetWindowDisplayMode</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the display mode to use when a window is visible at fullscreen.</para>
<para>This only affects the display mode used when the window is fullscreen. To change the window size when the window is not fullscreen, use <ref refid="_s_d_l__video_8h_1a29b118c6932ccb94d85b5435ae1e0a19" kindref="member">SDL_SetWindowSize()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to affect </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> structure representing the mode to use, or NULL to use the window&apos;s dimensions and the desktop&apos;s format and refresh rate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a8185547bc7cb0bbeb400f459792d081a" kindref="member">SDL_GetWindowDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ab4aa48f0a29f0868ce4e0422c02ed2fa" kindref="member">SDL_SetWindowFullscreen</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="624" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="624" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a8185547bc7cb0bbeb400f459792d081a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetWindowDisplayMode</definition>
        <argsstring>(SDL_Window *window, SDL_DisplayMode *mode)</argsstring>
        <name>SDL_GetWindowDisplayMode</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Query the display mode to use when a window is visible at fullscreen.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref> structure filled in with the fullscreen display mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" kindref="member">SDL_SetWindowDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ab4aa48f0a29f0868ce4e0422c02ed2fa" kindref="member">SDL_SetWindowFullscreen</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="641" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="641" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a191991d151bc02a17b7f1b4b80a61795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_GetWindowICCProfile</definition>
        <argsstring>(SDL_Window *window, size_t *size)</argsstring>
        <name>SDL_GetWindowICCProfile</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the raw ICC profile data for the screen the window is currently on.</para>
<para>Data returned should be freed with SDL_free.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the ICC profile </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the raw ICC profile data on success or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.18. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="656" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="656" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a3abb4a27f109ac055eb2a82227a9d11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Uint32 SDLCALL SDL_GetWindowPixelFormat</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowPixelFormat</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the pixel format associated with the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the pixel format of the window on success or SDL_PIXELFORMAT_UNKNOWN on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="668" column="32" declfile="D:/RayTracing/include/SDL_video.h" declline="668" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Window *SDLCALL SDL_CreateWindow</definition>
        <argsstring>(const char *title, int x, int y, int w, int h, Uint32 flags)</argsstring>
        <name>SDL_CreateWindow</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a window with the specified position, dimensions, and flags.</para>
<para><computeroutput>flags</computeroutput> may be any of the following OR&apos;d together:</para>
<para><itemizedlist>
<listitem><para><computeroutput>SDL_WINDOW_FULLSCREEN</computeroutput>: fullscreen window</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_FULLSCREEN_DESKTOP</computeroutput>: fullscreen window at desktop resolution</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_OPENGL</computeroutput>: window usable with an OpenGL context</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_VULKAN</computeroutput>: window usable with a Vulkan instance</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_METAL</computeroutput>: window usable with a Metal instance</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_HIDDEN</computeroutput>: window is not visible</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_BORDERLESS</computeroutput>: no window decoration</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_RESIZABLE</computeroutput>: window can be resized</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_MINIMIZED</computeroutput>: window is minimized</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_MAXIMIZED</computeroutput>: window is maximized</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_INPUT_GRABBED</computeroutput>: window has grabbed input focus</para>
</listitem><listitem><para><computeroutput>SDL_WINDOW_ALLOW_HIGHDPI</computeroutput>: window should be created in high-DPI mode if supported (&gt;= SDL 2.0.1)</para>
</listitem></itemizedlist>
</para>
<para><computeroutput>SDL_WINDOW_SHOWN</computeroutput> is ignored by <ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow()</ref>. The SDL_Window is implicitly shown if SDL_WINDOW_HIDDEN is not set. <computeroutput>SDL_WINDOW_SHOWN</computeroutput> may be queried later using <ref refid="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" kindref="member">SDL_GetWindowFlags()</ref>.</para>
<para>On Apple&apos;s macOS, you <bold>must</bold> set the NSHighResolutionCapable Info.plist property to YES, otherwise you will not receive a High-DPI OpenGL canvas.</para>
<para>If the window is created with the <computeroutput>SDL_WINDOW_ALLOW_HIGHDPI</computeroutput> flag, its size in pixels may differ from its size in screen coordinates on platforms with high-DPI support (e.g. iOS and macOS). Use <ref refid="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" kindref="member">SDL_GetWindowSize()</ref> to query the client area&apos;s size in screen coordinates, and <ref refid="_s_d_l__video_8h_1ac21851bbd91760c5bab92594a58edba3" kindref="member">SDL_GL_GetDrawableSize()</ref> or <ref refid="_s_d_l__render_8h_1abfc0c9a50d9d1870ab7d271b7a73d8ab" kindref="member">SDL_GetRendererOutputSize()</ref> to query the drawable size in pixels.</para>
<para>If the window is set fullscreen, the width and height parameters <computeroutput>w</computeroutput> and <computeroutput>h</computeroutput> will not be used. However, invalid size parameters (e.g. too large) may still fail. Window size is actually limited to 16384 x 16384 for all platforms at window creation.</para>
<para>If the window is created with any of the SDL_WINDOW_OPENGL or SDL_WINDOW_VULKAN flags, then the corresponding LoadLibrary function (SDL_GL_LoadLibrary or SDL_Vulkan_LoadLibrary) is called and the corresponding UnloadLibrary function is called by <ref refid="_s_d_l__video_8h_1a72609295a4faee0587268339ccff80c2" kindref="member">SDL_DestroyWindow()</ref>.</para>
<para>If SDL_WINDOW_VULKAN is specified and there isn&apos;t a working Vulkan driver, <ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow()</ref> will fail because <ref refid="_s_d_l__vulkan_8h_1a9fcc0942c8eaa67c3eff2e3526304b5b" kindref="member">SDL_Vulkan_LoadLibrary()</ref> will fail.</para>
<para>If SDL_WINDOW_METAL is specified on an OS that does not support Metal, <ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow()</ref> will fail.</para>
<para>On non-Apple devices, SDL requires you to either not link to the Vulkan loader or link to a dynamic library version. This limitation may be removed in a future version of SDL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the title of the window, in UTF-8 encoding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position of the window, <computeroutput>SDL_WINDOWPOS_CENTERED</computeroutput>, or <computeroutput>SDL_WINDOWPOS_UNDEFINED</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position of the window, <computeroutput>SDL_WINDOWPOS_CENTERED</computeroutput>, or <computeroutput>SDL_WINDOWPOS_UNDEFINED</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the window, in screen coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>the height of the window, in screen coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>0, or one or more SDL_WindowFlags OR&apos;d together </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the window that was created or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aa5ba5ca928613b022e9872dc19197f6e" kindref="member">SDL_CreateWindowFrom</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a72609295a4faee0587268339ccff80c2" kindref="member">SDL_DestroyWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="738" column="37" declfile="D:/RayTracing/include/SDL_video.h" declline="738" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1aa5ba5ca928613b022e9872dc19197f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Window *SDLCALL SDL_CreateWindowFrom</definition>
        <argsstring>(const void *data)</argsstring>
        <name>SDL_CreateWindowFrom</name>
        <param>
          <type>const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an SDL window from an existing native window.</para>
<para>In some cases (e.g. OpenGL) and on some platforms (e.g. Microsoft Windows) the hint <computeroutput>SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT</computeroutput> needs to be configured before using <ref refid="_s_d_l__video_8h_1aa5ba5ca928613b022e9872dc19197f6e" kindref="member">SDL_CreateWindowFrom()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to driver-dependent window creation data, typically your native window cast to a void* </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the window that was created or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a72609295a4faee0587268339ccff80c2" kindref="member">SDL_DestroyWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="759" column="37" declfile="D:/RayTracing/include/SDL_video.h" declline="759" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a1f6c1c22ced1564ffd0d54bbf9824134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Uint32 SDLCALL SDL_GetWindowID</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowID</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the numeric ID of a window.</para>
<para>The numeric ID is what <ref refid="struct_s_d_l___window_event" kindref="compound">SDL_WindowEvent</ref> references, and is necessary to map these events to specific SDL_Window objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the ID of the window on success or 0 on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a61016989f88ade9a0f331c63fd200d78" kindref="member">SDL_GetWindowFromID</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="775" column="32" declfile="D:/RayTracing/include/SDL_video.h" declline="775" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a61016989f88ade9a0f331c63fd200d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Window *SDLCALL SDL_GetWindowFromID</definition>
        <argsstring>(Uint32 id)</argsstring>
        <name>SDL_GetWindowFromID</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a window from a stored ID.</para>
<para>The numeric ID is what <ref refid="struct_s_d_l___window_event" kindref="compound">SDL_WindowEvent</ref> references, and is necessary to map these events to specific SDL_Window objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the ID of the window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the window associated with <computeroutput>id</computeroutput> or NULL if it doesn&apos;t exist; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a1f6c1c22ced1564ffd0d54bbf9824134" kindref="member">SDL_GetWindowID</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="791" column="37" declfile="D:/RayTracing/include/SDL_video.h" declline="791" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Uint32 SDLCALL SDL_GetWindowFlags</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowFlags</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the window flags.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a mask of the SDL_WindowFlags associated with <computeroutput>window</computeroutput></para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aa3cbe663e0bd62aa7a747a6c11781766" kindref="member">SDL_HideWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a8d969b660fee270f84cb403c8b75ded6" kindref="member">SDL_MaximizeWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a9f802f6c7952552b1cb26958fad3f2a6" kindref="member">SDL_MinimizeWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ab4aa48f0a29f0868ce4e0422c02ed2fa" kindref="member">SDL_SetWindowFullscreen</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" kindref="member">SDL_SetWindowGrab</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6051ce26885b32b80bc7285b4facd0a1" kindref="member">SDL_ShowWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="809" column="32" declfile="D:/RayTracing/include/SDL_video.h" declline="809" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a41aabc4b68f75f41d97995e02eb9deb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowTitle</definition>
        <argsstring>(SDL_Window *window, const char *title)</argsstring>
        <name>SDL_SetWindowTitle</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the title of a window.</para>
<para>This string is expected to be in UTF-8 encoding.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired window title in UTF-8 format</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a631b117f2c3712a55706d7fd60013536" kindref="member">SDL_GetWindowTitle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="823" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="823" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a631b117f2c3712a55706d7fd60013536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const char *SDLCALL SDL_GetWindowTitle</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowTitle</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the title of a window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the title of the window in UTF-8 format or &quot;&quot; if there is no title.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a41aabc4b68f75f41d97995e02eb9deb6" kindref="member">SDL_SetWindowTitle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="837" column="36" declfile="D:/RayTracing/include/SDL_video.h" declline="837" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a0b6910b5d5aa2df0aeda257e445a472e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowIcon</definition>
        <argsstring>(SDL_Window *window, SDL_Surface *icon)</argsstring>
        <name>SDL_SetWindowIcon</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref> *</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the icon for a window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>icon</parametername>
</parameternamelist>
<parameterdescription>
<para>an <ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref> structure containing the icon for the window</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="847" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="847" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a4d2831ad431f59e3a5a5e472599f6c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_SetWindowData</definition>
        <argsstring>(SDL_Window *window, const char *name, void *userdata)</argsstring>
        <name>SDL_SetWindowData</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associate an arbitrary named pointer with a window.</para>
<para><computeroutput>name</computeroutput> is case-sensitive.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to associate with the pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>the associated pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the previous value associated with <computeroutput>name</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae2b358354dfad5523efadb95adc59ce4" kindref="member">SDL_GetWindowData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="864" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="864" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ae2b358354dfad5523efadb95adc59ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_GetWindowData</definition>
        <argsstring>(SDL_Window *window, const char *name)</argsstring>
        <name>SDL_GetWindowData</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the data pointer associated with a window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the pointer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value associated with <computeroutput>name</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4d2831ad431f59e3a5a5e472599f6c0a" kindref="member">SDL_SetWindowData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="879" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="879" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ab200a53e01ddc697fd6b8e017cc4e6dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowPosition</definition>
        <argsstring>(SDL_Window *window, int x, int y)</argsstring>
        <name>SDL_SetWindowPosition</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the position of a window.</para>
<para>The window coordinate origin is the upper left of the display.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to reposition </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate of the window in screen coordinates, or <computeroutput>SDL_WINDOWPOS_CENTERED</computeroutput> or <computeroutput>SDL_WINDOWPOS_UNDEFINED</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate of the window in screen coordinates, or <computeroutput>SDL_WINDOWPOS_CENTERED</computeroutput> or <computeroutput>SDL_WINDOWPOS_UNDEFINED</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a03adfc1ed4aaf57da4af00bd247ac99c" kindref="member">SDL_GetWindowPosition</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="897" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="897" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a03adfc1ed4aaf57da4af00bd247ac99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GetWindowPosition</definition>
        <argsstring>(SDL_Window *window, int *x, int *y)</argsstring>
        <name>SDL_GetWindowPosition</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the position of a window.</para>
<para>If you do not need the value for one of the positions a NULL may be passed in the <computeroutput>x</computeroutput> or <computeroutput>y</computeroutput> parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the x position of the window, in screen coordinates, may be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the y position of the window, in screen coordinates, may be NULL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ab200a53e01ddc697fd6b8e017cc4e6dd" kindref="member">SDL_SetWindowPosition</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="916" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="916" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a29b118c6932ccb94d85b5435ae1e0a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowSize</definition>
        <argsstring>(SDL_Window *window, int w, int h)</argsstring>
        <name>SDL_SetWindowSize</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the size of a window&apos;s client area.</para>
<para>The window size in screen coordinates may differ from the size in pixels, if the window was created with <computeroutput>SDL_WINDOW_ALLOW_HIGHDPI</computeroutput> on a platform with high-dpi support (e.g. iOS or macOS). Use <ref refid="_s_d_l__video_8h_1ac21851bbd91760c5bab92594a58edba3" kindref="member">SDL_GL_GetDrawableSize()</ref> or <ref refid="_s_d_l__render_8h_1abfc0c9a50d9d1870ab7d271b7a73d8ab" kindref="member">SDL_GetRendererOutputSize()</ref> to get the real client area size in pixels.</para>
<para>Fullscreen windows automatically match the size of the display mode, and you should use <ref refid="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" kindref="member">SDL_SetWindowDisplayMode()</ref> to change their size.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the window in pixels, in screen coordinates, must be &gt; 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>the height of the window in pixels, in screen coordinates, must be &gt; 0</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" kindref="member">SDL_GetWindowSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" kindref="member">SDL_SetWindowDisplayMode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="941" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="941" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GetWindowSize</definition>
        <argsstring>(SDL_Window *window, int *w, int *h)</argsstring>
        <name>SDL_GetWindowSize</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of a window&apos;s client area.</para>
<para>NULL can safely be passed as the <computeroutput>w</computeroutput> or <computeroutput>h</computeroutput> parameter if the width or height value is not desired.</para>
<para>The window size in screen coordinates may differ from the size in pixels, if the window was created with <computeroutput>SDL_WINDOW_ALLOW_HIGHDPI</computeroutput> on a platform with high-dpi support (e.g. iOS or macOS). Use <ref refid="_s_d_l__video_8h_1ac21851bbd91760c5bab92594a58edba3" kindref="member">SDL_GL_GetDrawableSize()</ref>, <ref refid="_s_d_l__vulkan_8h_1a170ea51b623cbda9f945b37c037d7974" kindref="member">SDL_Vulkan_GetDrawableSize()</ref>, or <ref refid="_s_d_l__render_8h_1abfc0c9a50d9d1870ab7d271b7a73d8ab" kindref="member">SDL_GetRendererOutputSize()</ref> to get the real client area size in pixels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query the width and height from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the width of the window, in screen coordinates, may be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the height of the window, in screen coordinates, may be NULL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac21851bbd91760c5bab92594a58edba3" kindref="member">SDL_GL_GetDrawableSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__vulkan_8h_1a170ea51b623cbda9f945b37c037d7974" kindref="member">SDL_Vulkan_GetDrawableSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a29b118c6932ccb94d85b5435ae1e0a19" kindref="member">SDL_SetWindowSize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="968" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="968" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a1f309d151c3526b1ac3a7cb9c1a231ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetWindowBordersSize</definition>
        <argsstring>(SDL_Window *window, int *top, int *left, int *bottom, int *right)</argsstring>
        <name>SDL_GetWindowBordersSize</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of a window&apos;s borders (decorations) around the client area.</para>
<para>Note: If this function fails (returns -1), the size values will be initialized to 0, 0, 0, 0 (if a non-NULL pointer is provided), as if the window in question was borderless.</para>
<para>Note: This function may fail on systems where the window has not yet been decorated by the display server (for example, immediately after calling SDL_CreateWindow). It is recommended that you wait at least until the window has been presented and composited, so that the window system has a chance to decorate the window and provide the border dimensions to SDL.</para>
<para>This function also returns -1 if getting the information is not supported.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query the size values of the border (decorations) from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to variable for storing the size of the top border; NULL is permitted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to variable for storing the size of the left border; NULL is permitted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to variable for storing the size of the bottom border; NULL is permitted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to variable for storing the size of the right border; NULL is permitted </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.5.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" kindref="member">SDL_GetWindowSize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1003" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1003" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a1b6dd546d8dec383be411f98926335ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowMinimumSize</definition>
        <argsstring>(SDL_Window *window, int min_w, int min_h)</argsstring>
        <name>SDL_SetWindowMinimumSize</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the minimum size of a window&apos;s client area.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_w</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum width of the window in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_h</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum height of the window in pixels</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1afe1c6ca08d5b8c336b1276236559287a" kindref="member">SDL_GetWindowMinimumSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aaf95e53a3b70d55d71d7b2cf822ea77e" kindref="member">SDL_SetWindowMaximumSize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1019" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1019" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1afe1c6ca08d5b8c336b1276236559287a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GetWindowMinimumSize</definition>
        <argsstring>(SDL_Window *window, int *w, int *h)</argsstring>
        <name>SDL_GetWindowMinimumSize</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the minimum size of a window&apos;s client area.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the minimum width of the window, may be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the minimum height of the window, may be NULL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a38d65795da3feacfec1c392c101e92fd" kindref="member">SDL_GetWindowMaximumSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a1b6dd546d8dec383be411f98926335ae" kindref="member">SDL_SetWindowMinimumSize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1036" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1036" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1aaf95e53a3b70d55d71d7b2cf822ea77e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowMaximumSize</definition>
        <argsstring>(SDL_Window *window, int max_w, int max_h)</argsstring>
        <name>SDL_SetWindowMaximumSize</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the maximum size of a window&apos;s client area.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_w</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum width of the window in pixels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_h</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum height of the window in pixels</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a38d65795da3feacfec1c392c101e92fd" kindref="member">SDL_GetWindowMaximumSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a1b6dd546d8dec383be411f98926335ae" kindref="member">SDL_SetWindowMinimumSize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1051" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1051" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a38d65795da3feacfec1c392c101e92fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GetWindowMaximumSize</definition>
        <argsstring>(SDL_Window *window, int *w, int *h)</argsstring>
        <name>SDL_GetWindowMaximumSize</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the maximum size of a window&apos;s client area.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the maximum width of the window, may be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer filled in with the maximum height of the window, may be NULL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1afe1c6ca08d5b8c336b1276236559287a" kindref="member">SDL_GetWindowMinimumSize</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aaf95e53a3b70d55d71d7b2cf822ea77e" kindref="member">SDL_SetWindowMaximumSize</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1068" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1068" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1afb4b868e2cc0107ed6bcf5ba7aa376e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowBordered</definition>
        <argsstring>(SDL_Window *window, SDL_bool bordered)</argsstring>
        <name>SDL_SetWindowBordered</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
          <declname>bordered</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the border state of a window.</para>
<para>This will add or remove the window&apos;s <computeroutput>SDL_WINDOW_BORDERLESS</computeroutput> flag and add or remove the border from the actual window. This is a no-op if the window&apos;s border already matches the requested state.</para>
<para>You can&apos;t change the border state of a fullscreen window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window of which to change the border state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bordered</parametername>
</parameternamelist>
<parameterdescription>
<para>SDL_FALSE to remove border, SDL_TRUE to add border</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" kindref="member">SDL_GetWindowFlags</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1087" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1087" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a42d2451050ae01aaf2974344b9d4a812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowResizable</definition>
        <argsstring>(SDL_Window *window, SDL_bool resizable)</argsstring>
        <name>SDL_SetWindowResizable</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
          <declname>resizable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the user-resizable state of a window.</para>
<para>This will add or remove the window&apos;s <computeroutput>SDL_WINDOW_RESIZABLE</computeroutput> flag and allow/disallow user resizing of the window. This is a no-op if the window&apos;s resizable state already matches the requested state.</para>
<para>You can&apos;t change the resizable state of a fullscreen window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window of which to change the resizable state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resizable</parametername>
</parameternamelist>
<parameterdescription>
<para>SDL_TRUE to allow resizing, SDL_FALSE to disallow</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.5.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" kindref="member">SDL_GetWindowFlags</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1106" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1106" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ae6e6eed29cdb84d7c2e3b359273667a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowAlwaysOnTop</definition>
        <argsstring>(SDL_Window *window, SDL_bool on_top)</argsstring>
        <name>SDL_SetWindowAlwaysOnTop</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
          <declname>on_top</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the window to always be above the others.</para>
<para>This will add or remove the window&apos;s <computeroutput>SDL_WINDOW_ALWAYS_ON_TOP</computeroutput> flag. This will bring the window to the front and keep the window above the rest.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window of which to change the always on top state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>on_top</parametername>
</parameternamelist>
<parameterdescription>
<para>SDL_TRUE to set the window always on top, SDL_FALSE to disable</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.16.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" kindref="member">SDL_GetWindowFlags</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1123" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1123" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a6051ce26885b32b80bc7285b4facd0a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_ShowWindow</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_ShowWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Show a window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to show</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aa3cbe663e0bd62aa7a747a6c11781766" kindref="member">SDL_HideWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4b66b90f95780276addc14bc573c9f3c" kindref="member">SDL_RaiseWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1136" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1136" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1aa3cbe663e0bd62aa7a747a6c11781766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_HideWindow</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_HideWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hide a window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to hide</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6051ce26885b32b80bc7285b4facd0a1" kindref="member">SDL_ShowWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1147" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1147" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a4b66b90f95780276addc14bc573c9f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_RaiseWindow</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_RaiseWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raise a window above other windows and set the input focus.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to raise</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1156" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1156" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a8d969b660fee270f84cb403c8b75ded6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_MaximizeWindow</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_MaximizeWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a window as large as possible.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to maximize</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a9f802f6c7952552b1cb26958fad3f2a6" kindref="member">SDL_MinimizeWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1afea37fca3b12f454e7f91d919fc99fbd" kindref="member">SDL_RestoreWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1168" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1168" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a9f802f6c7952552b1cb26958fad3f2a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_MinimizeWindow</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_MinimizeWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimize a window to an iconic representation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to minimize</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a8d969b660fee270f84cb403c8b75ded6" kindref="member">SDL_MaximizeWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1afea37fca3b12f454e7f91d919fc99fbd" kindref="member">SDL_RestoreWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1180" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1180" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1afea37fca3b12f454e7f91d919fc99fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_RestoreWindow</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_RestoreWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore the size and position of a minimized or maximized window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to restore</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a8d969b660fee270f84cb403c8b75ded6" kindref="member">SDL_MaximizeWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a9f802f6c7952552b1cb26958fad3f2a6" kindref="member">SDL_MinimizeWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1192" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1192" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ab4aa48f0a29f0868ce4e0422c02ed2fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowFullscreen</definition>
        <argsstring>(SDL_Window *window, Uint32 flags)</argsstring>
        <name>SDL_SetWindowFullscreen</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a window&apos;s fullscreen state.</para>
<para><computeroutput>flags</computeroutput> may be <computeroutput>SDL_WINDOW_FULLSCREEN</computeroutput>, for &quot;real&quot; fullscreen with a videomode change; <computeroutput>SDL_WINDOW_FULLSCREEN_DESKTOP</computeroutput> for &quot;fake&quot; fullscreen that takes the size of the desktop; and 0 for windowed mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to change </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>SDL_WINDOW_FULLSCREEN</computeroutput>, <computeroutput>SDL_WINDOW_FULLSCREEN_DESKTOP</computeroutput> or 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a8185547bc7cb0bbeb400f459792d081a" kindref="member">SDL_GetWindowDisplayMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" kindref="member">SDL_SetWindowDisplayMode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1211" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1211" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a53fd405291238e8677632165afad3ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Surface *SDLCALL SDL_GetWindowSurface</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowSurface</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the SDL surface associated with the window.</para>
<para>A new surface will be created with the optimal format for the window, if necessary. This surface will be freed when the window is destroyed. Do not free this surface.</para>
<para>This surface will be invalidated if the window is resized. After resizing a window this function must be called again to return a valid surface.</para>
<para>You may not combine this with 3D or the rendering API on this window.</para>
<para>This function is affected by <computeroutput>SDL_HINT_FRAMEBUFFER_ACCELERATION</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the surface associated with the window, or NULL on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a7bbfee05788dc85a1d67218cf3006653" kindref="member">SDL_UpdateWindowSurface</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae6b0c6cf354beb87291887bfa02385b1" kindref="member">SDL_UpdateWindowSurfaceRects</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1237" column="38" declfile="D:/RayTracing/include/SDL_video.h" declline="1237" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a7bbfee05788dc85a1d67218cf3006653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_UpdateWindowSurface</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_UpdateWindowSurface</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy the window surface to the screen.</para>
<para>This is the function you use to reflect any changes to the surface on the screen.</para>
<para>This function is equivalent to the SDL 1.2 API SDL_Flip().</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to update </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a53fd405291238e8677632165afad3ea0" kindref="member">SDL_GetWindowSurface</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae6b0c6cf354beb87291887bfa02385b1" kindref="member">SDL_UpdateWindowSurfaceRects</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1256" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1256" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ae6b0c6cf354beb87291887bfa02385b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_UpdateWindowSurfaceRects</definition>
        <argsstring>(SDL_Window *window, const SDL_Rect *rects, int numrects)</argsstring>
        <name>SDL_UpdateWindowSurfaceRects</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> *</type>
          <declname>rects</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numrects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy areas of the window surface to the screen.</para>
<para>This is the function you use to reflect changes to portions of the surface on the screen.</para>
<para>This function is equivalent to the SDL 1.2 API SDL_UpdateRects().</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rects</parametername>
</parameternamelist>
<parameterdescription>
<para>an array of <ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> structures representing areas of the surface to copy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numrects</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of rectangles </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a53fd405291238e8677632165afad3ea0" kindref="member">SDL_GetWindowSurface</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a7bbfee05788dc85a1d67218cf3006653" kindref="member">SDL_UpdateWindowSurface</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1278" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1278" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowGrab</definition>
        <argsstring>(SDL_Window *window, SDL_bool grabbed)</argsstring>
        <name>SDL_SetWindowGrab</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
          <declname>grabbed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a window&apos;s input grab mode.</para>
<para>When input is grabbed, the mouse is confined to the window. This function will also grab the keyboard if <computeroutput>SDL_HINT_GRAB_KEYBOARD</computeroutput> is set. To grab the keyboard without also grabbing the mouse, use <ref refid="_s_d_l__video_8h_1a474b4cf41f81e65f88243b7616ad1789" kindref="member">SDL_SetWindowKeyboardGrab()</ref>.</para>
<para>If the caller enables a grab while another window is currently grabbed, the other window loses its grab in favor of the caller&apos;s window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window for which the input grab mode should be set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grabbed</parametername>
</parameternamelist>
<parameterdescription>
<para>SDL_TRUE to grab input or SDL_FALSE to release input</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6d0a45787b2a383bed8ed56133b04eab" kindref="member">SDL_GetGrabbedWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ad4e451db3880b6e0dd6647cbc351c6c0" kindref="member">SDL_GetWindowGrab</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1300" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1300" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a474b4cf41f81e65f88243b7616ad1789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowKeyboardGrab</definition>
        <argsstring>(SDL_Window *window, SDL_bool grabbed)</argsstring>
        <name>SDL_SetWindowKeyboardGrab</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
          <declname>grabbed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a window&apos;s keyboard grab mode.</para>
<para>Keyboard grab enables capture of system keyboard shortcuts like Alt+Tab or the Meta/Super key. Note that not all system keyboard shortcuts can be captured by applications (one example is Ctrl+Alt+Del on Windows).</para>
<para>This is primarily intended for specialized applications such as VNC clients or VM frontends. Normal games should not use keyboard grab.</para>
<para>When keyboard grab is enabled, SDL will continue to handle Alt+Tab when the window is full-screen to ensure the user is not trapped in your application. If you have a custom keyboard shortcut to exit fullscreen mode, you may suppress this behavior with <computeroutput>SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED</computeroutput>.</para>
<para>If the caller enables a grab while another window is currently grabbed, the other window loses its grab in favor of the caller&apos;s window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window for which the keyboard grab mode should be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grabbed</parametername>
</parameternamelist>
<parameterdescription>
<para>This is SDL_TRUE to grab keyboard, and SDL_FALSE to release.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.16.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1af34c1a3d017f800f3266257eeda19a61" kindref="member">SDL_GetWindowKeyboardGrab</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a1777999c919b478bc736f4a444c65381" kindref="member">SDL_SetWindowMouseGrab</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" kindref="member">SDL_SetWindowGrab</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1331" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1331" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a1777999c919b478bc736f4a444c65381" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_SetWindowMouseGrab</definition>
        <argsstring>(SDL_Window *window, SDL_bool grabbed)</argsstring>
        <name>SDL_SetWindowMouseGrab</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref></type>
          <declname>grabbed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a window&apos;s mouse grab mode.</para>
<para>Mouse grab confines the mouse cursor to the window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window for which the mouse grab mode should be set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.16.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a2aaf67c9351b65a6517c78a32f651e46" kindref="member">SDL_GetWindowMouseGrab</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a474b4cf41f81e65f88243b7616ad1789" kindref="member">SDL_SetWindowKeyboardGrab</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" kindref="member">SDL_SetWindowGrab</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1347" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1347" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ad4e451db3880b6e0dd6647cbc351c6c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_GetWindowGrab</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowGrab</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a window&apos;s input grab mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if input is grabbed, SDL_FALSE otherwise.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" kindref="member">SDL_SetWindowGrab</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1360" column="34" declfile="D:/RayTracing/include/SDL_video.h" declline="1360" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1af34c1a3d017f800f3266257eeda19a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_GetWindowKeyboardGrab</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowKeyboardGrab</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a window&apos;s keyboard grab mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if keyboard is grabbed, and SDL_FALSE otherwise.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.16.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a474b4cf41f81e65f88243b7616ad1789" kindref="member">SDL_SetWindowKeyboardGrab</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ad4e451db3880b6e0dd6647cbc351c6c0" kindref="member">SDL_GetWindowGrab</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1373" column="34" declfile="D:/RayTracing/include/SDL_video.h" declline="1373" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a2aaf67c9351b65a6517c78a32f651e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_GetWindowMouseGrab</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowMouseGrab</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a window&apos;s mouse grab mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if mouse is grabbed, and SDL_FALSE otherwise.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.16.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a474b4cf41f81e65f88243b7616ad1789" kindref="member">SDL_SetWindowKeyboardGrab</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ad4e451db3880b6e0dd6647cbc351c6c0" kindref="member">SDL_GetWindowGrab</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1386" column="34" declfile="D:/RayTracing/include/SDL_video.h" declline="1386" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a6d0a45787b2a383bed8ed56133b04eab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Window *SDLCALL SDL_GetGrabbedWindow</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetGrabbedWindow</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the window that currently has an input grab enabled.</para>
<para><simplesect kind="return"><para>the window if input is grabbed or NULL otherwise.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.4.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ad4e451db3880b6e0dd6647cbc351c6c0" kindref="member">SDL_GetWindowGrab</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" kindref="member">SDL_SetWindowGrab</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1398" column="37" declfile="D:/RayTracing/include/SDL_video.h" declline="1398" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1aa4fe6c9f78691def921be2882e8e1747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowMouseRect</definition>
        <argsstring>(SDL_Window *window, const SDL_Rect *rect)</argsstring>
        <name>SDL_SetWindowMouseRect</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> *</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Confines the cursor to the specified area of a window.</para>
<para>Note that this does NOT grab the cursor, it only defines the area a cursor is restricted to when the window has mouse focus.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window that will be associated with the barrier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>A rectangle area in window-relative coordinates. If NULL the barrier for the specified window will be destroyed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.18.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ae41bb7764e10f1a8f189a49690ea1528" kindref="member">SDL_GetWindowMouseRect</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a1777999c919b478bc736f4a444c65381" kindref="member">SDL_SetWindowMouseGrab</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1417" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1417" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ae41bb7764e10f1a8f189a49690ea1528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> const <ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC const SDL_Rect *SDLCALL SDL_GetWindowMouseRect</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowMouseRect</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the mouse confinement rectangle of a window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the mouse confinement rectangle of a window, or NULL if there isn&apos;t one.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.18.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aa4fe6c9f78691def921be2882e8e1747" kindref="member">SDL_SetWindowMouseRect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1430" column="41" declfile="D:/RayTracing/include/SDL_video.h" declline="1430" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a896972250b4d2e0f75888fa44fa792ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowBrightness</definition>
        <argsstring>(SDL_Window *window, float brightness)</argsstring>
        <name>SDL_SetWindowBrightness</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>float</type>
          <declname>brightness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the brightness (gamma multiplier) for a given window&apos;s display.</para>
<para>Despite the name and signature, this method sets the brightness of the entire display, not an individual window. A window is considered to be owned by the display that contains the window&apos;s center pixel. (The index of this display can be retrieved using <ref refid="_s_d_l__video_8h_1a0be1d0a4d1f9a0da23b78db2f55871b5" kindref="member">SDL_GetWindowDisplayIndex()</ref>.) The brightness set will not follow the window if it is moved to another display.</para>
<para>Many platforms will refuse to set the display brightness in modern times. You are better off using a shader to adjust gamma during rendering, or something similar.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window used to select the display whose brightness will be changed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>brightness</parametername>
</parameternamelist>
<parameterdescription>
<para>the brightness (gamma multiplier) value to set where 0.0 is completely dark and 1.0 is normal brightness </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a21c10969331c89e8d0e6a8f998a3c319" kindref="member">SDL_GetWindowBrightness</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6799acf235454f519ac209ccf14caa67" kindref="member">SDL_SetWindowGammaRamp</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1458" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1458" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a21c10969331c89e8d0e6a8f998a3c319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_GetWindowBrightness</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_GetWindowBrightness</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the brightness (gamma multiplier) for a given window&apos;s display.</para>
<para>Despite the name and signature, this method retrieves the brightness of the entire display, not an individual window. A window is considered to be owned by the display that contains the window&apos;s center pixel. (The index of this display can be retrieved using <ref refid="_s_d_l__video_8h_1a0be1d0a4d1f9a0da23b78db2f55871b5" kindref="member">SDL_GetWindowDisplayIndex()</ref>.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window used to select the display whose brightness will be queried </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the brightness for the display where 0.0 is completely dark and 1.0 is normal brightness.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a896972250b4d2e0f75888fa44fa792ec" kindref="member">SDL_SetWindowBrightness</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1477" column="31" declfile="D:/RayTracing/include/SDL_video.h" declline="1477" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1ac10be8659aa8b5bdefb8ce43b6961f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowOpacity</definition>
        <argsstring>(SDL_Window *window, float opacity)</argsstring>
        <name>SDL_SetWindowOpacity</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>float</type>
          <declname>opacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the opacity for a window.</para>
<para>The parameter <computeroutput>opacity</computeroutput> will be clamped internally between 0.0f (transparent) and 1.0f (opaque).</para>
<para>This function also returns -1 if setting the opacity isn&apos;t supported.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window which will be made transparent or opaque </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the opacity value (0.0f - transparent, 1.0f - opaque) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.5.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a9a85fb11978adecf13a04976efe6ceca" kindref="member">SDL_GetWindowOpacity</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1496" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1496" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a9a85fb11978adecf13a04976efe6ceca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetWindowOpacity</definition>
        <argsstring>(SDL_Window *window, float *out_opacity)</argsstring>
        <name>SDL_GetWindowOpacity</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out_opacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the opacity of a window.</para>
<para>If transparency isn&apos;t supported on this platform, opacity will be reported as 1.0f without error.</para>
<para>The parameter <computeroutput>opacity</computeroutput> is ignored if it is NULL.</para>
<para>This function also returns -1 if an invalid window was provided.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to get the current opacity value from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_opacity</parametername>
</parameternamelist>
<parameterdescription>
<para>the float filled in (0.0f - transparent, 1.0f - opaque) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.5.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1ac10be8659aa8b5bdefb8ce43b6961f7f" kindref="member">SDL_SetWindowOpacity</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1517" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1517" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1afb7627a0ede24c28453857fff4f02aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowModalFor</definition>
        <argsstring>(SDL_Window *modal_window, SDL_Window *parent_window)</argsstring>
        <name>SDL_SetWindowModalFor</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>modal_window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>parent_window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the window as a modal for another window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modal_window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window that should be set modal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent_window</parametername>
</parameternamelist>
<parameterdescription>
<para>the parent window for the modal window </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.5. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1529" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1529" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1aa77986a0f56e51f216af57d829bca896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowInputFocus</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_SetWindowInputFocus</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Explicitly set input focus to the window.</para>
<para>You almost certainly want <ref refid="_s_d_l__video_8h_1a4b66b90f95780276addc14bc573c9f3c" kindref="member">SDL_RaiseWindow()</ref> instead of this function. Use this with caution, as you might give focus to a window that is completely obscured by other windows.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window that should get the input focus </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.5.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4b66b90f95780276addc14bc573c9f3c" kindref="member">SDL_RaiseWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1546" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1546" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a6799acf235454f519ac209ccf14caa67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowGammaRamp</definition>
        <argsstring>(SDL_Window *window, const Uint16 *red, const Uint16 *green, const Uint16 *blue)</argsstring>
        <name>SDL_SetWindowGammaRamp</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref> *</type>
          <declname>red</declname>
        </param>
        <param>
          <type>const <ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref> *</type>
          <declname>green</declname>
        </param>
        <param>
          <type>const <ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref> *</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the gamma ramp for the display that owns a given window.</para>
<para>Set the gamma translation table for the red, green, and blue channels of the video hardware. Each table is an array of 256 16-bit quantities, representing a mapping between the input and output for that channel. The input is the index into the array, and the output is the 16-bit gamma value at that index, scaled to the output color precision.</para>
<para>Despite the name and signature, this method sets the gamma ramp of the entire display, not an individual window. A window is considered to be owned by the display that contains the window&apos;s center pixel. (The index of this display can be retrieved using <ref refid="_s_d_l__video_8h_1a0be1d0a4d1f9a0da23b78db2f55871b5" kindref="member">SDL_GetWindowDisplayIndex()</ref>.) The gamma ramp set will not follow the window if it is moved to another display.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window used to select the display whose gamma ramp will be changed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>red</parametername>
</parameternamelist>
<parameterdescription>
<para>a 256 element array of 16-bit quantities representing the translation table for the red channel, or NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>green</parametername>
</parameternamelist>
<parameterdescription>
<para>a 256 element array of 16-bit quantities representing the translation table for the green channel, or NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue</parametername>
</parameternamelist>
<parameterdescription>
<para>a 256 element array of 16-bit quantities representing the translation table for the blue channel, or NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1af4d647be3bb21a33586d69d5cad87ead" kindref="member">SDL_GetWindowGammaRamp</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1578" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1578" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1af4d647be3bb21a33586d69d5cad87ead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetWindowGammaRamp</definition>
        <argsstring>(SDL_Window *window, Uint16 *red, Uint16 *green, Uint16 *blue)</argsstring>
        <name>SDL_GetWindowGammaRamp</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref> *</type>
          <declname>red</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref> *</type>
          <declname>green</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref> *</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the gamma ramp for a given window&apos;s display.</para>
<para>Despite the name and signature, this method retrieves the gamma ramp of the entire display, not an individual window. A window is considered to be owned by the display that contains the window&apos;s center pixel. (The index of this display can be retrieved using <ref refid="_s_d_l__video_8h_1a0be1d0a4d1f9a0da23b78db2f55871b5" kindref="member">SDL_GetWindowDisplayIndex()</ref>.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window used to select the display whose gamma ramp will be queried </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>red</parametername>
</parameternamelist>
<parameterdescription>
<para>a 256 element array of 16-bit quantities filled in with the translation table for the red channel, or NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>green</parametername>
</parameternamelist>
<parameterdescription>
<para>a 256 element array of 16-bit quantities filled in with the translation table for the green channel, or NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue</parametername>
</parameternamelist>
<parameterdescription>
<para>a 256 element array of 16-bit quantities filled in with the translation table for the blue channel, or NULL </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a6799acf235454f519ac209ccf14caa67" kindref="member">SDL_SetWindowGammaRamp</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1606" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1606" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a23e14e1f21f7fb3727f38fd9b0711186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowHitTest</definition>
        <argsstring>(SDL_Window *window, SDL_HitTest callback, void *callback_data)</argsstring>
        <name>SDL_SetWindowHitTest</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a247c7fd43bb60b20630945a5bd9e4957" kindref="member">SDL_HitTest</ref></type>
          <declname>callback</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>callback_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide a callback that decides if a window region has special properties.</para>
<para>Normally windows are dragged and resized by decorations provided by the system window manager (a title bar, borders, etc), but for some apps, it makes sense to drag them from somewhere else inside the window itself; for example, one might have a borderless window that wants to be draggable from any part, or simulate its own title bar, etc.</para>
<para>This function lets the app provide a callback that designates pieces of a given window as special. This callback is run during event processing if we need to tell the OS to treat a region of the window specially; the use of this callback is known as &quot;hit testing.&quot;</para>
<para>Mouse input may not be delivered to your application if it is within a special area; the OS will often apply that input to moving the window or resizing the window and not deliver it to the application.</para>
<para>Specifying NULL for a callback disables hit-testing. Hit-testing is disabled by default.</para>
<para>Platforms that don&apos;t support this functionality will return -1 unconditionally, even if you&apos;re attempting to disable hit-testing.</para>
<para>Your callback may fire at any time, and its firing does not indicate any specific behavior (for example, on Windows, this certainly might fire when the OS is deciding whether to drag your window, but it fires for lots of other reasons, too, some unrelated to anything you probably care about <emphasis>and when the mouse isn&apos;t actually at the location it is testing</emphasis>). Since this can fire at any time, you should try to keep your callback efficient, devoid of allocations, etc.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to set hit-testing on </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the function to call when doing a hit-test </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback_data</parametername>
</parameternamelist>
<parameterdescription>
<para>an app-defined void pointer passed to <bold>callback</bold> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or -1 on error (including unsupported); call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.4. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1684" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1684" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a20c2c00579bb4b1fa6c15124621bbc6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_FlashWindow</definition>
        <argsstring>(SDL_Window *window, SDL_FlashOperation operation)</argsstring>
        <name>SDL_FlashWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baaf" kindref="member">SDL_FlashOperation</ref></type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a window to demand attention from the user.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to be flashed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation</parametername>
</parameternamelist>
<parameterdescription>
<para>the flash operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success or a negative error code on failure; call <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref> for more information.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.16. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1698" column="29" declfile="D:/RayTracing/include/SDL_video.h" declline="1698" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a72609295a4faee0587268339ccff80c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_DestroyWindow</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>SDL_DestroyWindow</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a window.</para>
<para>If <computeroutput>window</computeroutput> is NULL, this function will return immediately after setting the SDL error message to &quot;Invalid window&quot;. See <ref refid="_s_d_l__error_8h_1adaef317de186f072f8328798de29d51a" kindref="member">SDL_GetError()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>the window to destroy</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1aa5ba5ca928613b022e9872dc19197f6e" kindref="member">SDL_CreateWindowFrom</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1713" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1713" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a4b5c116d57947bf508c13b21aac49cbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_IsScreenSaverEnabled</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_IsScreenSaverEnabled</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether the screensaver is currently enabled.</para>
<para>The screensaver is disabled by default since SDL 2.0.2. Before SDL 2.0.2 the screensaver was enabled by default.</para>
<para>The default can also be changed using <computeroutput>SDL_HINT_VIDEO_ALLOW_SCREENSAVER</computeroutput>.</para>
<para><simplesect kind="return"><para>SDL_TRUE if the screensaver is enabled, SDL_FALSE if it is disabled.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a68eb0d850934fa1c7ac12c30f2d56a84" kindref="member">SDL_DisableScreenSaver</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a17846c713066aa29a86e1be205a7fc3e" kindref="member">SDL_EnableScreenSaver</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1732" column="34" declfile="D:/RayTracing/include/SDL_video.h" declline="1732" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a17846c713066aa29a86e1be205a7fc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_EnableScreenSaver</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_EnableScreenSaver</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allow the screen to be blanked by a screen saver.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a68eb0d850934fa1c7ac12c30f2d56a84" kindref="member">SDL_DisableScreenSaver</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4b5c116d57947bf508c13b21aac49cbf" kindref="member">SDL_IsScreenSaverEnabled</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1742" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1742" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__video_8h_1a68eb0d850934fa1c7ac12c30f2d56a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_DisableScreenSaver</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_DisableScreenSaver</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prevent the screen from being blanked by a screen saver.</para>
<para>If you disable the screensaver, it is automatically re-enabled when SDL quits.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a17846c713066aa29a86e1be205a7fc3e" kindref="member">SDL_EnableScreenSaver</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a4b5c116d57947bf508c13b21aac49cbf" kindref="member">SDL_IsScreenSaverEnabled</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_video.h" line="1755" column="30" declfile="D:/RayTracing/include/SDL_video.h" declline="1755" declcolumn="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Header file for SDL video functions. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_video_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_video_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__stdinc_8h" kindref="compound">SDL_stdinc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__pixels_8h" kindref="compound">SDL_pixels.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__rect_8h" kindref="compound">SDL_rect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__surface_8h" kindref="compound">SDL_surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_s_d_l___display_mode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55" refid="struct_s_d_l___display_mode_1ae8120e0a18a99992f039756e1b503680" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="struct_s_d_l___display_mode_1ae8120e0a18a99992f039756e1b503680" kindref="member">format</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="struct_s_d_l___display_mode_1a504bb5e21950b719a0df43be51199046" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___display_mode_1a504bb5e21950b719a0df43be51199046" kindref="member">w</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="struct_s_d_l___display_mode_1a0d9eabed50a560ed553af772c26632d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___display_mode_1a0d9eabed50a560ed553af772c26632d7" kindref="member">h</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="struct_s_d_l___display_mode_1ad1b5783c9b292ebf24ad4e0e7a98e540" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___display_mode_1ad1b5783c9b292ebf24ad4e0e7a98e540" kindref="member">refresh_rate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="struct_s_d_l___display_mode_1a411f93025411da873f37a384ae62bbcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_s_d_l___display_mode_1a411f93025411da873f37a384ae62bbcf" kindref="member">driverdata</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ac7b8279bdf5e22a0b4a95aae3d846923" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ac7b8279bdf5e22a0b4a95aae3d846923" kindref="member">SDL_WINDOW_FULLSCREEN</ref><sp/>=<sp/>0x00000001,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a5cf8af096f1870b0c2b12267cabd1f7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a5cf8af096f1870b0c2b12267cabd1f7a" kindref="member">SDL_WINDOW_OPENGL</ref><sp/>=<sp/>0x00000002,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4300d051290adcb71c1b5e82e2553c4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4300d051290adcb71c1b5e82e2553c4d" kindref="member">SDL_WINDOW_SHOWN</ref><sp/>=<sp/>0x00000004,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18adda25e98e54964c0c2ec9ac31f5e629c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18adda25e98e54964c0c2ec9ac31f5e629c" kindref="member">SDL_WINDOW_HIDDEN</ref><sp/>=<sp/>0x00000008,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18af7baea7dc9c0e4f09b28793504b02e4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18af7baea7dc9c0e4f09b28793504b02e4c" kindref="member">SDL_WINDOW_BORDERLESS</ref><sp/>=<sp/>0x00000010,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aaf59a5e2f762aa2b6d2e49b0ca220fd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aaf59a5e2f762aa2b6d2e49b0ca220fd8" kindref="member">SDL_WINDOW_RESIZABLE</ref><sp/>=<sp/>0x00000020,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a7f08ee26b5773412a212233ddc168c5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a7f08ee26b5773412a212233ddc168c5a" kindref="member">SDL_WINDOW_MINIMIZED</ref><sp/>=<sp/>0x00000040,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18acd8063a617f2ce05f694ecdbf56f811a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18acd8063a617f2ce05f694ecdbf56f811a" kindref="member">SDL_WINDOW_MAXIMIZED</ref><sp/>=<sp/>0x00000080,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ae0d26c938ff5e806166f5f44d2ffcf70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ae0d26c938ff5e806166f5f44d2ffcf70" kindref="member">SDL_WINDOW_MOUSE_GRABBED</ref><sp/>=<sp/>0x00000100,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18afcbb682c0942bc106af1474c1d34bb53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18afcbb682c0942bc106af1474c1d34bb53" kindref="member">SDL_WINDOW_INPUT_FOCUS</ref><sp/>=<sp/>0x00000200,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aa722d0955c297fc60c09b10e1679684c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aa722d0955c297fc60c09b10e1679684c" kindref="member">SDL_WINDOW_MOUSE_FOCUS</ref><sp/>=<sp/>0x00000400,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18abfb8eeb3dc7f1844aa55dfdee3d4d7b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18abfb8eeb3dc7f1844aa55dfdee3d4d7b8" kindref="member">SDL_WINDOW_FULLSCREEN_DESKTOP</ref><sp/>=<sp/>(<sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ac7b8279bdf5e22a0b4a95aae3d846923" kindref="member">SDL_WINDOW_FULLSCREEN</ref><sp/>|<sp/>0x00001000<sp/>),</highlight></codeline>
<codeline lineno="116" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a1ac8e0ef2237a089cf487d7e7fcc6e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a1ac8e0ef2237a089cf487d7e7fcc6e23" kindref="member">SDL_WINDOW_FOREIGN</ref><sp/>=<sp/>0x00000800,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a03ec21b04fa4e5c8cc868aa01a0c1bf3" kindref="member">SDL_WINDOW_ALLOW_HIGHDPI</ref><sp/>=<sp/>0x00002000,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4c16b51a323741bf5c492adce34e5882" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4c16b51a323741bf5c492adce34e5882" kindref="member">SDL_WINDOW_MOUSE_CAPTURE</ref><sp/><sp/><sp/><sp/>=<sp/>0x00004000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a318e8aee0e3fddcfe2257757c6eb3128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a318e8aee0e3fddcfe2257757c6eb3128" kindref="member">SDL_WINDOW_ALWAYS_ON_TOP</ref><sp/><sp/><sp/><sp/>=<sp/>0x00008000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4bd52941a63adc993271579d52fb6641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a4bd52941a63adc993271579d52fb6641" kindref="member">SDL_WINDOW_SKIP_TASKBAR</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00010000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a94224404de009a2fb6856a6a69d20d85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a94224404de009a2fb6856a6a69d20d85" kindref="member">SDL_WINDOW_UTILITY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00020000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a226509512aeab3c2c01deb75c182adf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a226509512aeab3c2c01deb75c182adf5" kindref="member">SDL_WINDOW_TOOLTIP</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00040000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aeb1e21d5d8ed10b5d65ab0909b5c8c0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aeb1e21d5d8ed10b5d65ab0909b5c8c0d" kindref="member">SDL_WINDOW_POPUP_MENU</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00080000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ab323e087b24b6034070bbc825287cf18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ab323e087b24b6034070bbc825287cf18" kindref="member">SDL_WINDOW_KEYBOARD_GRABBED</ref><sp/>=<sp/>0x00100000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a55d2d1e92b96050c5a9cd8280d78f26c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a55d2d1e92b96050c5a9cd8280d78f26c" kindref="member">SDL_WINDOW_VULKAN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x10000000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ad63da27122aeaa0c8986dbb7014ce76d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ad63da27122aeaa0c8986dbb7014ce76d" kindref="member">SDL_WINDOW_METAL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x20000000,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aaf410e1082e45a55ef9176163610dba2" kindref="member">SDL_WINDOW_INPUT_GRABBED</ref><sp/>=<sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ae0d26c938ff5e806166f5f44d2ffcf70" kindref="member">SDL_WINDOW_MOUSE_GRABBED</ref><sp/></highlight></codeline>
<codeline lineno="131" refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aaf410e1082e45a55ef9176163610dba2" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18" kindref="member">SDL_WindowFlags</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="_s_d_l__video_8h_1a0eee89b50bf349f05cb28d6ca7c2dec8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOWPOS_UNDEFINED_MASK<sp/><sp/><sp/><sp/>0x1FFF0000u</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="_s_d_l__video_8h_1a29aa3ade62cfe16de4c8b1e9c4272ab0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOWPOS_UNDEFINED_DISPLAY(X)<sp/><sp/>(SDL_WINDOWPOS_UNDEFINED_MASK|(X))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="_s_d_l__video_8h_1a20917558a7e5fb159647980218726a52" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOWPOS_UNDEFINED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_WINDOWPOS_UNDEFINED_DISPLAY(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="_s_d_l__video_8h_1a8ded7367fc7c4375cc195ff4a2a2132c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOWPOS_ISUNDEFINED(X)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((X)&amp;0xFFFF0000)<sp/>==<sp/>SDL_WINDOWPOS_UNDEFINED_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="_s_d_l__video_8h_1a5088b87c9d01cc26915ff082aaf014fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOWPOS_CENTERED_MASK<sp/><sp/><sp/><sp/>0x2FFF0000u</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="_s_d_l__video_8h_1a3399af2e94d0de95e69e6bcc57969d58" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOWPOS_CENTERED_DISPLAY(X)<sp/><sp/>(SDL_WINDOWPOS_CENTERED_MASK|(X))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="_s_d_l__video_8h_1a8d2f428ddef3b4ccf08915814e35d9c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOWPOS_CENTERED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_WINDOWPOS_CENTERED_DISPLAY(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="_s_d_l__video_8h_1a07ffe394c82e7c5d93443e76e5356cbb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOWPOS_ISCENTERED(X)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((X)&amp;0xFFFF0000)<sp/>==<sp/>SDL_WINDOWPOS_CENTERED_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3bab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3babaee1301eee7ad982c50cd310607f968b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3babaee1301eee7ad982c50cd310607f968b7" kindref="member">SDL_WINDOWEVENT_NONE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba5e91fe11ed6a24a377a77d024c9639d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba5e91fe11ed6a24a377a77d024c9639d5" kindref="member">SDL_WINDOWEVENT_SHOWN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba04e5bd277e03b61a6e4b577f2a3fda55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba04e5bd277e03b61a6e4b577f2a3fda55" kindref="member">SDL_WINDOWEVENT_HIDDEN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3babac37af5c3ce56fe0956bc310821d59489" kindref="member">SDL_WINDOWEVENT_EXPOSED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba64da80af7b0a58689f07c7196de23da5" kindref="member">SDL_WINDOWEVENT_MOVED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba26096363b1a5a1eccc56a00d5f61948d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba26096363b1a5a1eccc56a00d5f61948d" kindref="member">SDL_WINDOWEVENT_RESIZED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba98e76df5341be0a05c7461e32c7835f0" kindref="member">SDL_WINDOWEVENT_SIZE_CHANGED</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba70577b21b05c509d0342a5649092928d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba70577b21b05c509d0342a5649092928d" kindref="member">SDL_WINDOWEVENT_MINIMIZED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba83593cf9ef16d0eaeeaac19b32a86a05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba83593cf9ef16d0eaeeaac19b32a86a05" kindref="member">SDL_WINDOWEVENT_MAXIMIZED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba9ebe8fbb15f1bf06521d6b5484de3d89" kindref="member">SDL_WINDOWEVENT_RESTORED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3babac6990e7537a4cc6cc7aaabc3376b9eb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3babac6990e7537a4cc6cc7aaabc3376b9eb5" kindref="member">SDL_WINDOWEVENT_ENTER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba7e1afdd5cfea592a59e129419b431bd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba7e1afdd5cfea592a59e129419b431bd5" kindref="member">SDL_WINDOWEVENT_LEAVE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba529d1b574e559ee46892024e1c2e6c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba529d1b574e559ee46892024e1c2e6c92" kindref="member">SDL_WINDOWEVENT_FOCUS_GAINED</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba239e734c6ba478fb2f694fc7cde30c31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba239e734c6ba478fb2f694fc7cde30c31" kindref="member">SDL_WINDOWEVENT_FOCUS_LOST</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba2483911a3a2a20dbb1c88a15ffb9a360" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba2483911a3a2a20dbb1c88a15ffb9a360" kindref="member">SDL_WINDOWEVENT_CLOSE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba69ee247e6859b1d5d7dfffb7c1a99b4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba69ee247e6859b1d5d7dfffb7c1a99b4e" kindref="member">SDL_WINDOWEVENT_TAKE_FOCUS</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba425a0e4dca5ba339eed8166248eeef8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba425a0e4dca5ba339eed8166248eeef8e" kindref="member">SDL_WINDOWEVENT_HIT_TEST</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba9fd10380e9447afc2a43ca1682ca8f67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba9fd10380e9447afc2a43ca1682ca8f67" kindref="member">SDL_WINDOWEVENT_ICCPROF_CHANGED</ref>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba79f1c661b605adb4390be30a4f217080" kindref="member">SDL_WINDOWEVENT_DISPLAY_CHANGED</ref><sp/></highlight></codeline>
<codeline lineno="180" refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3baba79f1c661b605adb4390be30a4f217080" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1ac486b40a4860d980dbc74d0b4adf3bab" kindref="member">SDL_WindowEventID</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187" refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffca0f22fc5951aac829337807e4238110e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffca0f22fc5951aac829337807e4238110e5" kindref="member">SDL_DISPLAYEVENT_NONE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188" refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffca79af38ade27966e9e53476f5d3755f04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffca79af38ade27966e9e53476f5d3755f04" kindref="member">SDL_DISPLAYEVENT_ORIENTATION</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189" refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffcaf5929ccf80049ecabbd5e50f2fc8485b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffcaf5929ccf80049ecabbd5e50f2fc8485b" kindref="member">SDL_DISPLAYEVENT_CONNECTED</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffcaeeb05c4066d71e3d5fc4774879d7540d" kindref="member">SDL_DISPLAYEVENT_DISCONNECTED</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191" refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffcaeeb05c4066d71e3d5fc4774879d7540d" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1ad671b39d95c255af51db93cb54512ffc" kindref="member">SDL_DisplayEventID</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbde" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198" refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdeacb20982c4f82c7271a66a76b98eda731" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdeacb20982c4f82c7271a66a76b98eda731" kindref="member">SDL_ORIENTATION_UNKNOWN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199" refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea5b1e627bf8f8be31d62292681f42694b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea5b1e627bf8f8be31d62292681f42694b" kindref="member">SDL_ORIENTATION_LANDSCAPE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="200" refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea6cd1294f411220564276f85c32616c6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea6cd1294f411220564276f85c32616c6a" kindref="member">SDL_ORIENTATION_LANDSCAPE_FLIPPED</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="201" refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea5fb622ac90f47a799d7d7f660d7c860b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea5fb622ac90f47a799d7d7f660d7c860b" kindref="member">SDL_ORIENTATION_PORTRAIT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea66727ec5e93a1112a254b4d3b8e867db" kindref="member">SDL_ORIENTATION_PORTRAIT_FLIPPED</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203" refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbdea66727ec5e93a1112a254b4d3b8e867db" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbde" kindref="member">SDL_DisplayOrientation</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baaf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210" refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa9164bc961f90c240d737dfa4e5877080" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa9164bc961f90c240d737dfa4e5877080" kindref="member">SDL_FLASH_CANCEL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211" refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa337fa7e6aa90ea2873d0243b2654aae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa337fa7e6aa90ea2873d0243b2654aae4" kindref="member">SDL_FLASH_BRIEFLY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa000ab7f97a52e7bbf062ef847ba6556f" kindref="member">SDL_FLASH_UNTIL_FOCUSED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213" refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baafa000ab7f97a52e7bbf062ef847ba6556f" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baaf" kindref="member">SDL_FlashOperation</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab91e9b7978b6d2c62291b9d7e88a1903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab91e9b7978b6d2c62291b9d7e88a1903" kindref="member">SDL_GL_RED_SIZE</ref>,</highlight></codeline>
<codeline lineno="226" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4af32b5125f656487de9d3c1600c6e4eb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4af32b5125f656487de9d3c1600c6e4eb9" kindref="member">SDL_GL_GREEN_SIZE</ref>,</highlight></codeline>
<codeline lineno="227" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aa7f058249f389ebba59f5d3cb00d7806" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aa7f058249f389ebba59f5d3cb00d7806" kindref="member">SDL_GL_BLUE_SIZE</ref>,</highlight></codeline>
<codeline lineno="228" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4abe24aa11a8007880290835e7eb07d5d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4abe24aa11a8007880290835e7eb07d5d7" kindref="member">SDL_GL_ALPHA_SIZE</ref>,</highlight></codeline>
<codeline lineno="229" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ac41c21ee24979f52471afd0712ee08c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ac41c21ee24979f52471afd0712ee08c4" kindref="member">SDL_GL_BUFFER_SIZE</ref>,</highlight></codeline>
<codeline lineno="230" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a28c3841afe3b66ab86a267bf5d0a28e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a28c3841afe3b66ab86a267bf5d0a28e0" kindref="member">SDL_GL_DOUBLEBUFFER</ref>,</highlight></codeline>
<codeline lineno="231" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4addf8f9d5c6d217954b14ece543dcbf17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4addf8f9d5c6d217954b14ece543dcbf17" kindref="member">SDL_GL_DEPTH_SIZE</ref>,</highlight></codeline>
<codeline lineno="232" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a29dc7e9872be52f3327a452b6875c102" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a29dc7e9872be52f3327a452b6875c102" kindref="member">SDL_GL_STENCIL_SIZE</ref>,</highlight></codeline>
<codeline lineno="233" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ae43ed10c33a2cc5b98a8c3d71e94ba43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ae43ed10c33a2cc5b98a8c3d71e94ba43" kindref="member">SDL_GL_ACCUM_RED_SIZE</ref>,</highlight></codeline>
<codeline lineno="234" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a901dce8f81e72cd6c0efa1f32ac96c2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a901dce8f81e72cd6c0efa1f32ac96c2d" kindref="member">SDL_GL_ACCUM_GREEN_SIZE</ref>,</highlight></codeline>
<codeline lineno="235" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4acc5dc0cb2c0e9e16d64dbdbde177d775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4acc5dc0cb2c0e9e16d64dbdbde177d775" kindref="member">SDL_GL_ACCUM_BLUE_SIZE</ref>,</highlight></codeline>
<codeline lineno="236" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a4c35a77fa9c78ac60997b3c15e158b2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a4c35a77fa9c78ac60997b3c15e158b2e" kindref="member">SDL_GL_ACCUM_ALPHA_SIZE</ref>,</highlight></codeline>
<codeline lineno="237" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a7d51f1f66a480883c5e7a7d58f668d72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a7d51f1f66a480883c5e7a7d58f668d72" kindref="member">SDL_GL_STEREO</ref>,</highlight></codeline>
<codeline lineno="238" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a83d7d3086480baed28bed6be4dadc8bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a83d7d3086480baed28bed6be4dadc8bf" kindref="member">SDL_GL_MULTISAMPLEBUFFERS</ref>,</highlight></codeline>
<codeline lineno="239" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a54761551da12a1de15e2f844c70d19ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a54761551da12a1de15e2f844c70d19ad" kindref="member">SDL_GL_MULTISAMPLESAMPLES</ref>,</highlight></codeline>
<codeline lineno="240" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ac48c7a4cf9eff0fa154878988b6697db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ac48c7a4cf9eff0fa154878988b6697db" kindref="member">SDL_GL_ACCELERATED_VISUAL</ref>,</highlight></codeline>
<codeline lineno="241" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab2409f43111e32a7233602976d8fb588" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab2409f43111e32a7233602976d8fb588" kindref="member">SDL_GL_RETAINED_BACKING</ref>,</highlight></codeline>
<codeline lineno="242" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a3102858c17eea157bdfcd245695fe0e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a3102858c17eea157bdfcd245695fe0e8" kindref="member">SDL_GL_CONTEXT_MAJOR_VERSION</ref>,</highlight></codeline>
<codeline lineno="243" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a5aa38fec236a59f29def7cbc26e0a459" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a5aa38fec236a59f29def7cbc26e0a459" kindref="member">SDL_GL_CONTEXT_MINOR_VERSION</ref>,</highlight></codeline>
<codeline lineno="244" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a40f4b0ae113a8f384490d685f9d48de8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a40f4b0ae113a8f384490d685f9d48de8" kindref="member">SDL_GL_CONTEXT_EGL</ref>,</highlight></codeline>
<codeline lineno="245" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aec49ddd5d7f32394faa0bd9bf119657c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aec49ddd5d7f32394faa0bd9bf119657c" kindref="member">SDL_GL_CONTEXT_FLAGS</ref>,</highlight></codeline>
<codeline lineno="246" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aec99ff71cb16785eb431311c59bd97e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aec99ff71cb16785eb431311c59bd97e0" kindref="member">SDL_GL_CONTEXT_PROFILE_MASK</ref>,</highlight></codeline>
<codeline lineno="247" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab162bed722047d9cd09b984a5c7e1277" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4ab162bed722047d9cd09b984a5c7e1277" kindref="member">SDL_GL_SHARE_WITH_CURRENT_CONTEXT</ref>,</highlight></codeline>
<codeline lineno="248" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a1c7c3def7beea2c0aa8794d9da5003f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a1c7c3def7beea2c0aa8794d9da5003f4" kindref="member">SDL_GL_FRAMEBUFFER_SRGB_CAPABLE</ref>,</highlight></codeline>
<codeline lineno="249" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a1ff3378ded0143863f908062afd0c17b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a1ff3378ded0143863f908062afd0c17b" kindref="member">SDL_GL_CONTEXT_RELEASE_BEHAVIOR</ref>,</highlight></codeline>
<codeline lineno="250" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a3822f24741078433542b649fac5eddb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4a3822f24741078433542b649fac5eddb7" kindref="member">SDL_GL_CONTEXT_RESET_NOTIFICATION</ref>,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aee607d4cdab39620c3dcc6e108b62a73" kindref="member">SDL_GL_CONTEXT_NO_ERROR</ref></highlight></codeline>
<codeline lineno="252" refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4aee607d4cdab39620c3dcc6e108b62a73" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4" kindref="member">SDL_GLattr</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256" refid="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa7fae54c64a26a0e2a8dac6d47a1c510a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa7fae54c64a26a0e2a8dac6d47a1c510a" kindref="member">SDL_GL_CONTEXT_PROFILE_CORE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0001,</highlight></codeline>
<codeline lineno="257" refid="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa6db21ad6da230fb961fe0190a9e3398f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa6db21ad6da230fb961fe0190a9e3398f" kindref="member">SDL_GL_CONTEXT_PROFILE_COMPATIBILITY</ref><sp/><sp/>=<sp/>0x0002,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa721fa797743fb228d804532cab8b8faa" kindref="member">SDL_GL_CONTEXT_PROFILE_ES</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0004<sp/></highlight></codeline>
<codeline lineno="259" refid="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5fa721fa797743fb228d804532cab8b8faa" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1ad5ea1835b83fe139bcc182c3326d7a5f" kindref="member">SDL_GLprofile</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263" refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5daf47902af7f161e63161b2b2489072173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5daf47902af7f161e63161b2b2489072173" kindref="member">SDL_GL_CONTEXT_DEBUG_FLAG</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0001,</highlight></codeline>
<codeline lineno="264" refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5da127c5bc8035c20dabeb006d98a8da63e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5da127c5bc8035c20dabeb006d98a8da63e" kindref="member">SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG</ref><sp/>=<sp/>0x0002,</highlight></codeline>
<codeline lineno="265" refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5dac25c11305e0eb9f5e047529bd5ce3b5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5dac25c11305e0eb9f5e047529bd5ce3b5d" kindref="member">SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0004,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5da8f39abd1936a704f37ba8162e02bbb25" kindref="member">SDL_GL_CONTEXT_RESET_ISOLATION_FLAG</ref><sp/><sp/><sp/><sp/>=<sp/>0x0008</highlight></codeline>
<codeline lineno="267" refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5da8f39abd1936a704f37ba8162e02bbb25" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1abd0baef2bdd92997a9436f5b62b18f5d" kindref="member">SDL_GLcontextFlag</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271" refid="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aeda7f6f5f576fc1fa56dcb6e8d30f4d1941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aeda7f6f5f576fc1fa56dcb6e8d30f4d1941" kindref="member">SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE</ref><sp/><sp/><sp/>=<sp/>0x0000,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aedab0f0d7285f42906890a1cfc3d5240ebe" kindref="member">SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH</ref><sp/><sp/>=<sp/>0x0001</highlight></codeline>
<codeline lineno="273" refid="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aedab0f0d7285f42906890a1cfc3d5240ebe" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1a9a34b07d44a580ac7216b6c842663aed" kindref="member">SDL_GLcontextReleaseFlag</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277" refid="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375a9395326b54fec0667f99e5c081eb8bf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375a9395326b54fec0667f99e5c081eb8bf7" kindref="member">SDL_GL_CONTEXT_RESET_NO_NOTIFICATION</ref><sp/>=<sp/>0x0000,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375a9d8b7f4f987dfe5c7f6e2ae4227a41f4" kindref="member">SDL_GL_CONTEXT_RESET_LOSE_CONTEXT</ref><sp/><sp/><sp/><sp/>=<sp/>0x0001</highlight></codeline>
<codeline lineno="279" refid="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375a9d8b7f4f987dfe5c7f6e2ae4227a41f4" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1af68cd1e823f43af61bbeb1701c641375" kindref="member">SDL_GLContextResetNotification</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="_s_d_l__video_8h_1ac6f3250a95bd027fd1a374d7ed15fc57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ac6f3250a95bd027fd1a374d7ed15fc57" kindref="member">SDL_GetNumVideoDrivers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="_s_d_l__video_8h_1ae88ab2c7515c52b180ef0238f8965b4b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ae88ab2c7515c52b180ef0238f8965b4b" kindref="member">SDL_GetVideoDriver</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a57f14e05b1900f16a2da82ade47d0c6d" kindref="member">index</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="_s_d_l__video_8h_1a05244b30716f0339dcd140c6f92017b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a05244b30716f0339dcd140c6f92017b7" kindref="member">SDL_VideoInit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*driver_name);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="_s_d_l__video_8h_1ade5fc4847320fb235f17265b683fa013" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ade5fc4847320fb235f17265b683fa013" kindref="member">SDL_VideoQuit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="_s_d_l__video_8h_1aec2f46152701003e12689dac7de79eb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1aec2f46152701003e12689dac7de79eb9" kindref="member">SDL_GetCurrentVideoDriver</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a074d185b7ef04e0305acdeeb049dd2be" kindref="member">SDL_GetNumVideoDisplays</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="_s_d_l__video_8h_1a3c8523dad11fceab8a8029239185529b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a3c8523dad11fceab8a8029239185529b" kindref="member">SDL_GetDisplayName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="_s_d_l__video_8h_1ac05213009395c10ae40bede2de8e08a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ac05213009395c10ae40bede2de8e08a1" kindref="member">SDL_GetDisplayBounds</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex,<sp/><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref><sp/>*<sp/>rect);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="_s_d_l__video_8h_1a9898f2e51cd90ace84cb0c6ea65d7051" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a9898f2e51cd90ace84cb0c6ea65d7051" kindref="member">SDL_GetDisplayUsableBounds</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex,<sp/><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref><sp/>*<sp/>rect);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="_s_d_l__video_8h_1a8207ec5d13bd87158cbb42ef76e33216" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a8207ec5d13bd87158cbb42ef76e33216" kindref="member">SDL_GetDisplayDPI</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>ddpi,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>hdpi,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>vdpi);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="_s_d_l__video_8h_1a6540db01a424ced1847376e583361ecb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1af2b86ebfae9cd2f87ea6c18dd109dbde" kindref="member">SDL_DisplayOrientation</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a6540db01a424ced1847376e583361ecb" kindref="member">SDL_GetDisplayOrientation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="_s_d_l__video_8h_1a5abcf18592f00019c517e791f8ba53fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a5abcf18592f00019c517e791f8ba53fc" kindref="member">SDL_GetNumDisplayModes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="_s_d_l__video_8h_1a0a53e003ec6ad24dd2bbbcd0ad297311" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a0a53e003ec6ad24dd2bbbcd0ad297311" kindref="member">SDL_GetDisplayMode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>modeIndex,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="_s_d_l__video_8h_1ab97bca68fc068a6ecc3db473c4c0defd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ab97bca68fc068a6ecc3db473c4c0defd" kindref="member">SDL_GetDesktopDisplayMode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex,<sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="_s_d_l__video_8h_1a14dce1cb33085b36f08d27b3d8f2335b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a14dce1cb33085b36f08d27b3d8f2335b" kindref="member">SDL_GetCurrentDisplayMode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex,<sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="_s_d_l__video_8h_1a912994189211554bdd0b264e3f6d8e9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a912994189211554bdd0b264e3f6d8e9f" kindref="member">SDL_GetClosestDisplayMode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>displayIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>,<sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref><sp/>*<sp/>closest);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="_s_d_l__video_8h_1a0be1d0a4d1f9a0da23b78db2f55871b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a0be1d0a4d1f9a0da23b78db2f55871b5" kindref="member">SDL_GetWindowDisplayIndex</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a2ca17d1e857d1560738e002c9935088a" kindref="member">SDL_SetWindowDisplayMode</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="_s_d_l__video_8h_1a8185547bc7cb0bbeb400f459792d081a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a8185547bc7cb0bbeb400f459792d081a" kindref="member">SDL_GetWindowDisplayMode</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___display_mode" kindref="compound">SDL_DisplayMode</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="656" refid="_s_d_l__video_8h_1a191991d151bc02a17b7f1b4b80a61795" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a191991d151bc02a17b7f1b4b80a61795" kindref="member">SDL_GetWindowICCProfile</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="_s_d_l__video_8h_1a3abb4a27f109ac055eb2a82227a9d11f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a3abb4a27f109ac055eb2a82227a9d11f" kindref="member">SDL_GetWindowPixelFormat</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a841edb930dc7cb2c1ec64f831d3abba6" kindref="member">SDL_CreateWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a6ee8f168a7ab6785a9bb57c6715dad99" kindref="member">w</ref>,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>,<sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="759" refid="_s_d_l__video_8h_1aa5ba5ca928613b022e9872dc19197f6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1aa5ba5ca928613b022e9872dc19197f6e" kindref="member">SDL_CreateWindowFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="_s_d_l__video_8h_1a1f6c1c22ced1564ffd0d54bbf9824134" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a1f6c1c22ced1564ffd0d54bbf9824134" kindref="member">SDL_GetWindowID</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="_s_d_l__video_8h_1a61016989f88ade9a0f331c63fd200d78" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a61016989f88ade9a0f331c63fd200d78" kindref="member">SDL_GetWindowFromID</ref>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a4445733f04a1a9dd0e063cd4738f285f" kindref="member">SDL_GetWindowFlags</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="823" refid="_s_d_l__video_8h_1a41aabc4b68f75f41d97995e02eb9deb6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a41aabc4b68f75f41d97995e02eb9deb6" kindref="member">SDL_SetWindowTitle</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="_s_d_l__video_8h_1a631b117f2c3712a55706d7fd60013536" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a631b117f2c3712a55706d7fd60013536" kindref="member">SDL_GetWindowTitle</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="_s_d_l__video_8h_1a0b6910b5d5aa2df0aeda257e445a472e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a0b6910b5d5aa2df0aeda257e445a472e" kindref="member">SDL_SetWindowIcon</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref><sp/>*<sp/>icon);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="864" refid="_s_d_l__video_8h_1a4d2831ad431f59e3a5a5e472599f6c0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a4d2831ad431f59e3a5a5e472599f6c0a" kindref="member">SDL_SetWindowData</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="_s_d_l__video_8h_1ae2b358354dfad5523efadb95adc59ce4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ae2b358354dfad5523efadb95adc59ce4" kindref="member">SDL_GetWindowData</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="897" refid="_s_d_l__video_8h_1ab200a53e01ddc697fd6b8e017cc4e6dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ab200a53e01ddc697fd6b8e017cc4e6dd" kindref="member">SDL_SetWindowPosition</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="916" refid="_s_d_l__video_8h_1a03adfc1ed4aaf57da4af00bd247ac99c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a03adfc1ed4aaf57da4af00bd247ac99c" kindref="member">SDL_GetWindowPosition</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="941" refid="_s_d_l__video_8h_1a29b118c6932ccb94d85b5435ae1e0a19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a29b118c6932ccb94d85b5435ae1e0a19" kindref="member">SDL_SetWindowSize</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a6ee8f168a7ab6785a9bb57c6715dad99" kindref="member">w</ref>,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="968" refid="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a5cbfffcfec91c22a7ca95fd1d5163db5" kindref="member">SDL_GetWindowSize</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a6ee8f168a7ab6785a9bb57c6715dad99" kindref="member">w</ref>,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003" refid="_s_d_l__video_8h_1a1f309d151c3526b1ac3a7cb9c1a231ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a1f309d151c3526b1ac3a7cb9c1a231ae" kindref="member">SDL_GetWindowBordersSize</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a5ab323daeacf8dfdb8f91132fecdca23" kindref="member">top</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a85b8f6c07fbc1fb5d77c2ae090f21995" kindref="member">left</ref>,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a95fc257e5ddf46f7db9d5e898cdf1991" kindref="member">bottom</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a5ffadbbacc6b89cf6218bc43b384d3fe" kindref="member">right</ref>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019" refid="_s_d_l__video_8h_1a1b6dd546d8dec383be411f98926335ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a1b6dd546d8dec383be411f98926335ae" kindref="member">SDL_SetWindowMinimumSize</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_h);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036" refid="_s_d_l__video_8h_1afe1c6ca08d5b8c336b1276236559287a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1afe1c6ca08d5b8c336b1276236559287a" kindref="member">SDL_GetWindowMinimumSize</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a6ee8f168a7ab6785a9bb57c6715dad99" kindref="member">w</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051" refid="_s_d_l__video_8h_1aaf95e53a3b70d55d71d7b2cf822ea77e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1aaf95e53a3b70d55d71d7b2cf822ea77e" kindref="member">SDL_SetWindowMaximumSize</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_h);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068" refid="_s_d_l__video_8h_1a38d65795da3feacfec1c392c101e92fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a38d65795da3feacfec1c392c101e92fd" kindref="member">SDL_GetWindowMaximumSize</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a6ee8f168a7ab6785a9bb57c6715dad99" kindref="member">w</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087" refid="_s_d_l__video_8h_1afb4b868e2cc0107ed6bcf5ba7aa376e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1afb4b868e2cc0107ed6bcf5ba7aa376e0" kindref="member">SDL_SetWindowBordered</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/>bordered);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106" refid="_s_d_l__video_8h_1a42d2451050ae01aaf2974344b9d4a812" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a42d2451050ae01aaf2974344b9d4a812" kindref="member">SDL_SetWindowResizable</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/>resizable);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123" refid="_s_d_l__video_8h_1ae6e6eed29cdb84d7c2e3b359273667a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ae6e6eed29cdb84d7c2e3b359273667a1" kindref="member">SDL_SetWindowAlwaysOnTop</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/>on_top);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136" refid="_s_d_l__video_8h_1a6051ce26885b32b80bc7285b4facd0a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a6051ce26885b32b80bc7285b4facd0a1" kindref="member">SDL_ShowWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147" refid="_s_d_l__video_8h_1aa3cbe663e0bd62aa7a747a6c11781766" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1aa3cbe663e0bd62aa7a747a6c11781766" kindref="member">SDL_HideWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156" refid="_s_d_l__video_8h_1a4b66b90f95780276addc14bc573c9f3c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a4b66b90f95780276addc14bc573c9f3c" kindref="member">SDL_RaiseWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168" refid="_s_d_l__video_8h_1a8d969b660fee270f84cb403c8b75ded6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a8d969b660fee270f84cb403c8b75ded6" kindref="member">SDL_MaximizeWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180" refid="_s_d_l__video_8h_1a9f802f6c7952552b1cb26958fad3f2a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a9f802f6c7952552b1cb26958fad3f2a6" kindref="member">SDL_MinimizeWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192" refid="_s_d_l__video_8h_1afea37fca3b12f454e7f91d919fc99fbd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1afea37fca3b12f454e7f91d919fc99fbd" kindref="member">SDL_RestoreWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="_s_d_l__video_8h_1ab4aa48f0a29f0868ce4e0422c02ed2fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ab4aa48f0a29f0868ce4e0422c02ed2fa" kindref="member">SDL_SetWindowFullscreen</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237" refid="_s_d_l__video_8h_1a53fd405291238e8677632165afad3ea0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a53fd405291238e8677632165afad3ea0" kindref="member">SDL_GetWindowSurface</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256" refid="_s_d_l__video_8h_1a7bbfee05788dc85a1d67218cf3006653" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a7bbfee05788dc85a1d67218cf3006653" kindref="member">SDL_UpdateWindowSurface</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278" refid="_s_d_l__video_8h_1ae6b0c6cf354beb87291887bfa02385b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ae6b0c6cf354beb87291887bfa02385b1" kindref="member">SDL_UpdateWindowSurfaceRects</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref><sp/>*<sp/>rects,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numrects);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300" refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1abe7fd559e9d6da046c5984dea679a89b" kindref="member">SDL_SetWindowGrab</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/>grabbed);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331" refid="_s_d_l__video_8h_1a474b4cf41f81e65f88243b7616ad1789" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a474b4cf41f81e65f88243b7616ad1789" kindref="member">SDL_SetWindowKeyboardGrab</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/>grabbed);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347" refid="_s_d_l__video_8h_1a1777999c919b478bc736f4a444c65381" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a1777999c919b478bc736f4a444c65381" kindref="member">SDL_SetWindowMouseGrab</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/>grabbed);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360" refid="_s_d_l__video_8h_1ad4e451db3880b6e0dd6647cbc351c6c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ad4e451db3880b6e0dd6647cbc351c6c0" kindref="member">SDL_GetWindowGrab</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373" refid="_s_d_l__video_8h_1af34c1a3d017f800f3266257eeda19a61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1af34c1a3d017f800f3266257eeda19a61" kindref="member">SDL_GetWindowKeyboardGrab</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386" refid="_s_d_l__video_8h_1a2aaf67c9351b65a6517c78a32f651e46" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a2aaf67c9351b65a6517c78a32f651e46" kindref="member">SDL_GetWindowMouseGrab</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398" refid="_s_d_l__video_8h_1a6d0a45787b2a383bed8ed56133b04eab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a6d0a45787b2a383bed8ed56133b04eab" kindref="member">SDL_GetGrabbedWindow</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417" refid="_s_d_l__video_8h_1aa4fe6c9f78691def921be2882e8e1747" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1aa4fe6c9f78691def921be2882e8e1747" kindref="member">SDL_SetWindowMouseRect</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref><sp/>*<sp/>rect);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430" refid="_s_d_l__video_8h_1ae41bb7764e10f1a8f189a49690ea1528" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___rect" kindref="compound">SDL_Rect</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ae41bb7764e10f1a8f189a49690ea1528" kindref="member">SDL_GetWindowMouseRect</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458" refid="_s_d_l__video_8h_1a896972250b4d2e0f75888fa44fa792ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a896972250b4d2e0f75888fa44fa792ec" kindref="member">SDL_SetWindowBrightness</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>brightness);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477" refid="_s_d_l__video_8h_1a21c10969331c89e8d0e6a8f998a3c319" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a21c10969331c89e8d0e6a8f998a3c319" kindref="member">SDL_GetWindowBrightness</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496" refid="_s_d_l__video_8h_1ac10be8659aa8b5bdefb8ce43b6961f7f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ac10be8659aa8b5bdefb8ce43b6961f7f" kindref="member">SDL_SetWindowOpacity</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>opacity);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517" refid="_s_d_l__video_8h_1a9a85fb11978adecf13a04976efe6ceca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a9a85fb11978adecf13a04976efe6ceca" kindref="member">SDL_GetWindowOpacity</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>out_opacity);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529" refid="_s_d_l__video_8h_1afb7627a0ede24c28453857fff4f02aca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1afb7627a0ede24c28453857fff4f02aca" kindref="member">SDL_SetWindowModalFor</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>modal_window,<sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>parent_window);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546" refid="_s_d_l__video_8h_1aa77986a0f56e51f216af57d829bca896" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1aa77986a0f56e51f216af57d829bca896" kindref="member">SDL_SetWindowInputFocus</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578" refid="_s_d_l__video_8h_1a6799acf235454f519ac209ccf14caa67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a6799acf235454f519ac209ccf14caa67" kindref="member">SDL_SetWindowGammaRamp</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/>*<sp/>red,</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1ac14cda87cf6c751d53b65a3cd41c35a1" kindref="member">green</ref>,</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1853b32584a90fa75432925f3e26d0e8" kindref="member">blue</ref>);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606" refid="_s_d_l__video_8h_1af4d647be3bb21a33586d69d5cad87ead" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1af4d647be3bb21a33586d69d5cad87ead" kindref="member">SDL_GetWindowGammaRamp</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/>*<sp/>red,</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1ac14cda87cf6c751d53b65a3cd41c35a1" kindref="member">green</ref>,</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref><sp/>*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1853b32584a90fa75432925f3e26d0e8" kindref="member">blue</ref>);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1618" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a3eb7be45c88e40366315d453f3bf721e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a3eb7be45c88e40366315d453f3bf721e" kindref="member">SDL_HITTEST_NORMAL</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="1619" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a078a028af8c26848cf3576bd0c4d8fc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a078a028af8c26848cf3576bd0c4d8fc9" kindref="member">SDL_HITTEST_DRAGGABLE</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="1620" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5acbfbe2bde22d4fdce5b19f327fd26798" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5acbfbe2bde22d4fdce5b19f327fd26798" kindref="member">SDL_HITTEST_RESIZE_TOPLEFT</ref>,</highlight></codeline>
<codeline lineno="1621" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a19edd2ad7c4f276d13a21aaf61672fcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a19edd2ad7c4f276d13a21aaf61672fcd" kindref="member">SDL_HITTEST_RESIZE_TOP</ref>,</highlight></codeline>
<codeline lineno="1622" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a2119a0469719b69f16a1f35ab810aff3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a2119a0469719b69f16a1f35ab810aff3" kindref="member">SDL_HITTEST_RESIZE_TOPRIGHT</ref>,</highlight></codeline>
<codeline lineno="1623" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5ac8c0e2ed653a7b69243e317867d8ac42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5ac8c0e2ed653a7b69243e317867d8ac42" kindref="member">SDL_HITTEST_RESIZE_RIGHT</ref>,</highlight></codeline>
<codeline lineno="1624" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a7be4783a68f0c51166dbd289d9a42c51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a7be4783a68f0c51166dbd289d9a42c51" kindref="member">SDL_HITTEST_RESIZE_BOTTOMRIGHT</ref>,</highlight></codeline>
<codeline lineno="1625" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a689ac09305aee5ee819aa39625f848db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a689ac09305aee5ee819aa39625f848db" kindref="member">SDL_HITTEST_RESIZE_BOTTOM</ref>,</highlight></codeline>
<codeline lineno="1626" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a94f9165ed48fb13d6996eae2a83154bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a94f9165ed48fb13d6996eae2a83154bf" kindref="member">SDL_HITTEST_RESIZE_BOTTOMLEFT</ref>,</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a09656621305e2f938a864fc425fe0869" kindref="member">SDL_HITTEST_RESIZE_LEFT</ref></highlight></codeline>
<codeline lineno="1628" refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5a09656621305e2f938a864fc425fe0869" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5" kindref="member">SDL_HitTestResult</ref>;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640" refid="_s_d_l__video_8h_1a247c7fd43bb60b20630945a5bd9e4957" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__video_8h_1a0415a108581752b68c6aca800ff3bad5" kindref="member">SDL_HitTestResult</ref><sp/>(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/>*<ref refid="_s_d_l__video_8h_1a247c7fd43bb60b20630945a5bd9e4957" kindref="member">SDL_HitTest</ref>)(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*win,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_d_l___point" kindref="compound">SDL_Point</ref><sp/>*area,</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684" refid="_s_d_l__video_8h_1a23e14e1f21f7fb3727f38fd9b0711186" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a23e14e1f21f7fb3727f38fd9b0711186" kindref="member">SDL_SetWindowHitTest</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a247c7fd43bb60b20630945a5bd9e4957" kindref="member">SDL_HitTest</ref><sp/>callback,</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*callback_data);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698" refid="_s_d_l__video_8h_1a20c2c00579bb4b1fa6c15124621bbc6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a20c2c00579bb4b1fa6c15124621bbc6e" kindref="member">SDL_FlashWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/><ref refid="_s_d_l__video_8h_1a32391ac4af019aac0e487845adb5baaf" kindref="member">SDL_FlashOperation</ref><sp/>operation);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713" refid="_s_d_l__video_8h_1a72609295a4faee0587268339ccff80c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a72609295a4faee0587268339ccff80c2" kindref="member">SDL_DestroyWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732" refid="_s_d_l__video_8h_1a4b5c116d57947bf508c13b21aac49cbf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a4b5c116d57947bf508c13b21aac49cbf" kindref="member">SDL_IsScreenSaverEnabled</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742" refid="_s_d_l__video_8h_1a17846c713066aa29a86e1be205a7fc3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a17846c713066aa29a86e1be205a7fc3e" kindref="member">SDL_EnableScreenSaver</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755" refid="_s_d_l__video_8h_1a68eb0d850934fa1c7ac12c30f2d56a84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a68eb0d850934fa1c7ac12c30f2d56a84" kindref="member">SDL_DisableScreenSaver</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783" refid="_s_d_l__video_8h_1a398df9aaf43a69dc2cfaab5b306b8f91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a398df9aaf43a69dc2cfaab5b306b8f91" kindref="member">SDL_GL_LoadLibrary</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1ab25d8cd967ccbd19b630d7100ff8f67e" kindref="member">path</ref>);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836" refid="_s_d_l__video_8h_1a6500d698e7dbe6799250a626a8b42359" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a6500d698e7dbe6799250a626a8b42359" kindref="member">SDL_GL_GetProcAddress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*proc);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845" refid="_s_d_l__video_8h_1a92103adf9637ec2dc471714076872bdc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a92103adf9637ec2dc471714076872bdc" kindref="member">SDL_GL_UnloadLibrary</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866" refid="_s_d_l__video_8h_1a1fa0cc176fbc16db139b40a121e9cfa7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a1fa0cc176fbc16db139b40a121e9cfa7" kindref="member">SDL_GL_ExtensionSupported</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*extension);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877" refid="_s_d_l__video_8h_1ac96f25a7a6b28387d2813d8db71921ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ac96f25a7a6b28387d2813d8db71921ff" kindref="member">SDL_GL_ResetAttributes</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897" refid="_s_d_l__video_8h_1aed4d4347f2d5def1532bc22893e0e0d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1aed4d4347f2d5def1532bc22893e0e0d9" kindref="member">SDL_GL_SetAttribute</ref>(<ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4" kindref="member">SDL_GLattr</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912" refid="_s_d_l__video_8h_1a611bbed6c7374329e1d1b9c31b06976d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a611bbed6c7374329e1d1b9c31b06976d" kindref="member">SDL_GL_GetAttribute</ref>(<ref refid="_s_d_l__video_8h_1a2de24951bbc6626dc259ec0db5ae8ed4" kindref="member">SDL_GLattr</ref><sp/>attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934" refid="_s_d_l__video_8h_1a0e14c935cf304133278893bf6c1d2691" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a0e14c935cf304133278893bf6c1d2691" kindref="member">SDL_GL_CreateContext</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951" refid="_s_d_l__video_8h_1a5a2ad98e8920f8069bf89eb3f9bbc377" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a5a2ad98e8920f8069bf89eb3f9bbc377" kindref="member">SDL_GL_MakeCurrent</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref><sp/>context);</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962" refid="_s_d_l__video_8h_1a98181cae6b6d56f3bdbe9f83e46482de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a98181cae6b6d56f3bdbe9f83e46482de" kindref="member">SDL_GL_GetCurrentWindow</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974" refid="_s_d_l__video_8h_1a742f600404b9090bd64f8e863ece98c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a742f600404b9090bd64f8e863ece98c8" kindref="member">SDL_GL_GetCurrentContext</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996" refid="_s_d_l__video_8h_1ac21851bbd91760c5bab92594a58edba3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ac21851bbd91760c5bab92594a58edba3" kindref="member">SDL_GL_GetDrawableSize</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a6ee8f168a7ab6785a9bb57c6715dad99" kindref="member">w</ref>,</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="2031" refid="_s_d_l__video_8h_1a68b0d06595d086d9244fd49afe3e8360" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a68b0d06595d086d9244fd49afe3e8360" kindref="member">SDL_GL_SetSwapInterval</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interval);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048" refid="_s_d_l__video_8h_1ae96490db6285ed0df44a9b1c0f498605" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1ae96490db6285ed0df44a9b1c0f498605" kindref="member">SDL_GL_GetSwapInterval</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064" refid="_s_d_l__video_8h_1a11d1245662f49f6af257627119f22835" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1a11d1245662f49f6af257627119f22835" kindref="member">SDL_GL_SwapWindow</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/>window);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075" refid="_s_d_l__video_8h_1aa64ab050e0bd3a61057c3dffe953aa9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__video_8h_1aa64ab050e0bd3a61057c3dffe953aa9f" kindref="member">SDL_GL_DeleteContext</ref>(<ref refid="_s_d_l__video_8h_1a0d64dcf67c9685d09cbe051448e1b3f3" kindref="member">SDL_GLContext</ref><sp/>context);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="comment">/*<sp/>OpenGL<sp/>support<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_video_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_video.h"/>
  </compounddef>
</doxygen>
