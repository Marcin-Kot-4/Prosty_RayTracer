<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__shape_8h" kind="file" language="C++">
    <compoundname>SDL_shape.h</compoundname>
    <includes refid="_s_d_l__stdinc_8h" local="yes">SDL_stdinc.h</includes>
    <includes refid="_s_d_l__pixels_8h" local="yes">SDL_pixels.h</includes>
    <includes refid="_s_d_l__rect_8h" local="yes">SDL_rect.h</includes>
    <includes refid="_s_d_l__surface_8h" local="yes">SDL_surface.h</includes>
    <includes refid="_s_d_l__video_8h" local="yes">SDL_video.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l_8h" local="yes">D:/RayTracing/include/SDL.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>SDL_blendmode.h</label>
        <link refid="_s_d_l__blendmode_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>SDL_endian.h</label>
        <link refid="_s_d_l__endian_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>SDL_error.h</label>
        <link refid="_s_d_l__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SDL_pixels.h</label>
        <link refid="_s_d_l__pixels_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SDL_rect.h</label>
        <link refid="_s_d_l__rect_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>SDL_rwops.h</label>
        <link refid="_s_d_l__rwops_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_shape.h</label>
        <link refid="_s_d_l__shape_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>SDL_surface.h</label>
        <link refid="_s_d_l__surface_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>SDL_video.h</label>
        <link refid="_s_d_l__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="6">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="3">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="6">
        <label>D:/RayTracing/RayTrace/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/include/SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_shape.h</label>
        <link refid="_s_d_l__shape_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="13">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/RayTracing/include/SDL_test_compare.h</label>
        <link refid="_s_d_l__test__compare_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>D:/RayTracing/include/SDL_test_images.h</label>
        <link refid="_s_d_l__test__images_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="union_s_d_l___window_shape_params" prot="public">SDL_WindowShapeParams</innerclass>
    <innerclass refid="struct_s_d_l___window_shape_mode" prot="public">SDL_WindowShapeMode</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_l__shape_8h_1a45e50a0ce349a4e200338d634fa73de5" prot="public" static="no">
        <name>SDL_NONSHAPEABLE_WINDOW</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="42" column="9" bodyfile="D:/RayTracing/include/SDL_shape.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__shape_8h_1a1cfaf1e1a560ef7f68f59f46a9a0b1fd" prot="public" static="no">
        <name>SDL_INVALID_SHAPE_ARGUMENT</name>
        <initializer>-2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="43" column="9" bodyfile="D:/RayTracing/include/SDL_shape.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__shape_8h_1aa7306c8f1a1b87b398a9842383303232" prot="public" static="no">
        <name>SDL_WINDOW_LACKS_SHAPE</name>
        <initializer>-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="44" column="9" bodyfile="D:/RayTracing/include/SDL_shape.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__shape_8h_1af8e3c7bdeca58eb82cb8faed8d385cdc" prot="public" static="no">
        <name>SDL_SHAPEMODEALPHA</name>
        <param><defname>mode</defname></param>
        <initializer>(<ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref> == <ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20aca1bc38c9b5179cbed0e9e176cd84d9e" kindref="member">ShapeModeDefault</ref> || <ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref> == <ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20a0ba1cff6129858a1136728ffdc787926" kindref="member">ShapeModeBinarizeAlpha</ref> || <ref refid="_s_d_l__opengl__glext_8h_1a1e71d9c196e4683cc06c4b54d53f7ef5" kindref="member">mode</ref> == <ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20ae478c81ede522586674806541e145993" kindref="member">ShapeModeReverseBinarizeAlpha</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="96" column="9" bodyfile="D:/RayTracing/include/SDL_shape.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20" prot="public" static="no" strong="no">
        <type></type>
        <name>WindowShapeMode</name>
        <enumvalue id="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20aca1bc38c9b5179cbed0e9e176cd84d9e" prot="public">
          <name>ShapeModeDefault</name>
          <briefdescription>
<para>The default mode, a binarized alpha cutoff of 1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20a0ba1cff6129858a1136728ffdc787926" prot="public">
          <name>ShapeModeBinarizeAlpha</name>
          <briefdescription>
<para>A binarized alpha cutoff with a given integer value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20ae478c81ede522586674806541e145993" prot="public">
          <name>ShapeModeReverseBinarizeAlpha</name>
          <briefdescription>
<para>A binarized alpha cutoff with a given integer value, but with the opposite comparison. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20a1d3ca52e90d5b3086e22120c2899f214" prot="public">
          <name>ShapeModeColorKey</name>
          <briefdescription>
<para>A color key is applied. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>An enum denoting the specific type of contents present in an <ref refid="union_s_d_l___window_shape_params" kindref="compound">SDL_WindowShapeParams</ref> union. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="85" column="1" bodyfile="D:/RayTracing/include/SDL_shape.h" bodystart="85" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_s_d_l__shape_8h_1a7c3c38083471976868424ca18e89295d" prot="public" static="no">
        <type>struct <ref refid="struct_s_d_l___window_shape_mode" kindref="compound">SDL_WindowShapeMode</ref></type>
        <definition>typedef struct SDL_WindowShapeMode SDL_WindowShapeMode</definition>
        <argsstring></argsstring>
        <name>SDL_WindowShapeMode</name>
        <briefdescription>
<para>A struct that tags the <ref refid="union_s_d_l___window_shape_params" kindref="compound">SDL_WindowShapeParams</ref> union with an enum describing the type of its contents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="111" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_d_l__shape_8h_1aa3fd07ce85c885b4124e855875c1f52a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_Window *SDLCALL SDL_CreateShapedWindow</definition>
        <argsstring>(const char *title, unsigned int x, unsigned int y, unsigned int w, unsigned int h, Uint32 flags)</argsstring>
        <name>SDL_CreateShapedWindow</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a window that can be shaped with the specified position, dimensions, and flags.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the window, in UTF-8 encoding. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The x position of the window, <ref refid="_s_d_l__video_8h_1a8d2f428ddef3b4ccf08915814e35d9c7" kindref="member">SDL_WINDOWPOS_CENTERED</ref>, or <ref refid="_s_d_l__video_8h_1a20917558a7e5fb159647980218726a52" kindref="member">SDL_WINDOWPOS_UNDEFINED</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The y position of the window, <ref refid="_s_d_l__video_8h_1a8d2f428ddef3b4ccf08915814e35d9c7" kindref="member">SDL_WINDOWPOS_CENTERED</ref>, or <ref refid="_s_d_l__video_8h_1a20917558a7e5fb159647980218726a52" kindref="member">SDL_WINDOWPOS_UNDEFINED</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags for the window, a mask of SDL_WINDOW_BORDERLESS with any of the following: <ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a5cf8af096f1870b0c2b12267cabd1f7a" kindref="member">SDL_WINDOW_OPENGL</ref>, <ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aaf410e1082e45a55ef9176163610dba2" kindref="member">SDL_WINDOW_INPUT_GRABBED</ref>, <ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18adda25e98e54964c0c2ec9ac31f5e629c" kindref="member">SDL_WINDOW_HIDDEN</ref>, <ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18aaf59a5e2f762aa2b6d2e49b0ca220fd8" kindref="member">SDL_WINDOW_RESIZABLE</ref>, <ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18acd8063a617f2ce05f694ecdbf56f811a" kindref="member">SDL_WINDOW_MAXIMIZED</ref>, <ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18a7f08ee26b5773412a212233ddc168c5a" kindref="member">SDL_WINDOW_MINIMIZED</ref>, <ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18af7baea7dc9c0e4f09b28793504b02e4c" kindref="member">SDL_WINDOW_BORDERLESS</ref> is always set, and <ref refid="_s_d_l__video_8h_1ab10f4fd6a082ef06fcae96860c95fb18ac7b8279bdf5e22a0b4a95aae3d846923" kindref="member">SDL_WINDOW_FULLSCREEN</ref> is always unset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the window created, or NULL if window creation failed.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__video_8h_1a72609295a4faee0587268339ccff80c2" kindref="member">SDL_DestroyWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="69" column="37" declfile="D:/RayTracing/include/SDL_shape.h" declline="69" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__shape_8h_1a28630f0f6b298bac4d0efe850d7d327e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_bool SDLCALL SDL_IsShapedWindow</definition>
        <argsstring>(const SDL_Window *window)</argsstring>
        <name>SDL_IsShapedWindow</name>
        <param>
          <type>const <ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether the given window is a shaped window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to query for being shaped. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SDL_TRUE if the window is a window that can be shaped, SDL_FALSE if the window is unshaped or NULL.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__shape_8h_1aa3fd07ce85c885b4124e855875c1f52a" kindref="member">SDL_CreateShapedWindow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="82" column="34" declfile="D:/RayTracing/include/SDL_shape.h" declline="82" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__shape_8h_1a90d52818802235df9689922be5a4cf5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetWindowShape</definition>
        <argsstring>(SDL_Window *window, SDL_Surface *shape, SDL_WindowShapeMode *shape_mode)</argsstring>
        <name>SDL_SetWindowShape</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref> *</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___window_shape_mode" kindref="compound">SDL_WindowShapeMode</ref> *</type>
          <declname>shape_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the shape and parameters of a shaped window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The shaped window whose parameters should be set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape</parametername>
</parameternamelist>
<parameterdescription>
<para>A surface encoding the desired shape for the window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters to set for the shaped window. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, SDL_INVALID_SHAPE_ARGUMENT on an invalid shape argument, or SDL_NONSHAPEABLE_WINDOW if the SDL_Window given does not reference a valid shaped window.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_s_d_l___window_shape_mode" kindref="compound">SDL_WindowShapeMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__shape_8h_1a64dba6f6440cf6984d8da868fd758711" kindref="member">SDL_GetShapedWindowMode</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="128" column="29" declfile="D:/RayTracing/include/SDL_shape.h" declline="128" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__shape_8h_1a64dba6f6440cf6984d8da868fd758711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetShapedWindowMode</definition>
        <argsstring>(SDL_Window *window, SDL_WindowShapeMode *shape_mode)</argsstring>
        <name>SDL_GetShapedWindowMode</name>
        <param>
          <type><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="struct_s_d_l___window_shape_mode" kindref="compound">SDL_WindowShapeMode</ref> *</type>
          <declname>shape_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the shape parameters of a shaped window.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The shaped window whose parameters should be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shape_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>An empty shape-mode structure to fill, or NULL to check whether the window has a shape. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the window has a shape and, provided shape_mode was not NULL, shape_mode has been filled with the mode data, SDL_NONSHAPEABLE_WINDOW if the SDL_Window given is not a shaped window, or SDL_WINDOW_LACKS_SHAPE if the SDL_Window given is a shapeable window currently lacking a shape.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.0.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_s_d_l___window_shape_mode" kindref="compound">SDL_WindowShapeMode</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="_s_d_l__shape_8h_1a90d52818802235df9689922be5a4cf5a" kindref="member">SDL_SetWindowShape</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_shape.h" line="147" column="29" declfile="D:/RayTracing/include/SDL_shape.h" declline="147" declcolumn="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Header file for the shaped window API. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_shape_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_shape_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__stdinc_8h" kindref="compound">SDL_stdinc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__pixels_8h" kindref="compound">SDL_pixels.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__rect_8h" kindref="compound">SDL_rect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__surface_8h" kindref="compound">SDL_surface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__video_8h" kindref="compound">SDL_video.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="_s_d_l__shape_8h_1a45e50a0ce349a4e200338d634fa73de5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_NONSHAPEABLE_WINDOW<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="_s_d_l__shape_8h_1a1cfaf1e1a560ef7f68f59f46a9a0b1fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_INVALID_SHAPE_ARGUMENT<sp/>-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="_s_d_l__shape_8h_1aa7306c8f1a1b87b398a9842383303232" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_WINDOW_LACKS_SHAPE<sp/>-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="_s_d_l__shape_8h_1aa3fd07ce85c885b4124e855875c1f52a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*<sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__shape_8h_1aa3fd07ce85c885b4124e855875c1f52a" kindref="member">SDL_CreateShapedWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a6ee8f168a7ab6785a9bb57c6715dad99" kindref="member">w</ref>,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1afa0fb1b5e976920c0abeff2dca3ed774" kindref="member">h</ref>,<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1ac7ba7d3cce3d19ca020e056b37231289" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="_s_d_l__shape_8h_1a28630f0f6b298bac4d0efe850d7d327e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__shape_8h_1a28630f0f6b298bac4d0efe850d7d327e" kindref="member">SDL_IsShapedWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*window);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87" refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20aca1bc38c9b5179cbed0e9e176cd84d9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20aca1bc38c9b5179cbed0e9e176cd84d9e" kindref="member">ShapeModeDefault</ref>,</highlight></codeline>
<codeline lineno="89" refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20a0ba1cff6129858a1136728ffdc787926" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20a0ba1cff6129858a1136728ffdc787926" kindref="member">ShapeModeBinarizeAlpha</ref>,</highlight></codeline>
<codeline lineno="91" refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20ae478c81ede522586674806541e145993" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20ae478c81ede522586674806541e145993" kindref="member">ShapeModeReverseBinarizeAlpha</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20a1d3ca52e90d5b3086e22120c2899f214" kindref="member">ShapeModeColorKey</ref></highlight></codeline>
<codeline lineno="94" refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20a1d3ca52e90d5b3086e22120c2899f214" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20" kindref="member">WindowShapeMode</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="_s_d_l__shape_8h_1af8e3c7bdeca58eb82cb8faed8d385cdc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_SHAPEMODEALPHA(mode)<sp/>(mode<sp/>==<sp/>ShapeModeDefault<sp/>||<sp/>mode<sp/>==<sp/>ShapeModeBinarizeAlpha<sp/>||<sp/>mode<sp/>==<sp/>ShapeModeReverseBinarizeAlpha)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="union_s_d_l___window_shape_params" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101" refid="union_s_d_l___window_shape_params_1a534c40b09588a8075c0a70227753dc56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref><sp/><ref refid="union_s_d_l___window_shape_params_1a534c40b09588a8075c0a70227753dc56" kindref="member">binarizationCutoff</ref>;</highlight></codeline>
<codeline lineno="102" refid="union_s_d_l___window_shape_params_1a8bf3e442a51a1bbf452cfec7c1ed5318" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_d_l___color" kindref="compound">SDL_Color</ref><sp/><ref refid="union_s_d_l___window_shape_params_1a8bf3e442a51a1bbf452cfec7c1ed5318" kindref="member">colorKey</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/><ref refid="union_s_d_l___window_shape_params" kindref="compound">SDL_WindowShapeParams</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="struct_s_d_l___window_shape_mode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_d_l___window_shape_mode" kindref="compound">SDL_WindowShapeMode</ref><sp/>{</highlight></codeline>
<codeline lineno="108" refid="struct_s_d_l___window_shape_mode_1a40ebd8b9a76d982cbd87563386cc05de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__shape_8h_1aa30948f2699e316a43b740eccebe5c20" kindref="member">WindowShapeMode</ref><sp/><ref refid="struct_s_d_l___window_shape_mode_1a40ebd8b9a76d982cbd87563386cc05de" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="110" refid="struct_s_d_l___window_shape_mode_1a2f79bb294034156207fa6d88d3a8c819" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_s_d_l___window_shape_params" kindref="compound">SDL_WindowShapeParams</ref><sp/><ref refid="struct_s_d_l___window_shape_mode_1a2f79bb294034156207fa6d88d3a8c819" kindref="member">parameters</ref>;</highlight></codeline>
<codeline lineno="111" refid="_s_d_l__shape_8h_1a7c3c38083471976868424ca18e89295d" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__shape_8h_1a7c3c38083471976868424ca18e89295d" kindref="member">SDL_WindowShapeMode</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="_s_d_l__shape_8h_1a90d52818802235df9689922be5a4cf5a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__shape_8h_1a90d52818802235df9689922be5a4cf5a" kindref="member">SDL_SetWindowShape</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*window,<ref refid="struct_s_d_l___surface" kindref="compound">SDL_Surface</ref><sp/>*shape,<ref refid="struct_s_d_l___window_shape_mode" kindref="compound">SDL_WindowShapeMode</ref><sp/>*shape_mode);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="_s_d_l__shape_8h_1a64dba6f6440cf6984d8da868fd758711" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__shape_8h_1a64dba6f6440cf6984d8da868fd758711" kindref="member">SDL_GetShapedWindowMode</ref>(<ref refid="_s_d_l__video_8h_1a55a196c7d3b8497538632c79ae1e6392" kindref="member">SDL_Window</ref><sp/>*window,<ref refid="struct_s_d_l___window_shape_mode" kindref="compound">SDL_WindowShapeMode</ref><sp/>*shape_mode);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_shape_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_shape.h"/>
  </compounddef>
</doxygen>
