<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_s_d_l__stdinc_8h" kind="file" language="C++">
    <compoundname>SDL_stdinc.h</compoundname>
    <includes refid="_s_d_l__config_8h" local="yes">SDL_config.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes refid="begin__code_8h" local="yes">begin_code.h</includes>
    <includes refid="close__code_8h" local="yes">close_code.h</includes>
    <includedby refid="_s_d_l_8h" local="yes">D:/RayTracing/include/SDL.h</includedby>
    <includedby refid="_s_d_l__atomic_8h" local="yes">D:/RayTracing/include/SDL_atomic.h</includedby>
    <includedby refid="_s_d_l__audio_8h" local="yes">D:/RayTracing/include/SDL_audio.h</includedby>
    <includedby refid="_s_d_l__bits_8h" local="yes">D:/RayTracing/include/SDL_bits.h</includedby>
    <includedby refid="_s_d_l__clipboard_8h" local="yes">D:/RayTracing/include/SDL_clipboard.h</includedby>
    <includedby refid="_s_d_l__cpuinfo_8h" local="yes">D:/RayTracing/include/SDL_cpuinfo.h</includedby>
    <includedby refid="_s_d_l__endian_8h" local="yes">D:/RayTracing/include/SDL_endian.h</includedby>
    <includedby refid="_s_d_l__error_8h" local="yes">D:/RayTracing/include/SDL_error.h</includedby>
    <includedby refid="_s_d_l__events_8h" local="yes">D:/RayTracing/include/SDL_events.h</includedby>
    <includedby refid="_s_d_l__filesystem_8h" local="yes">D:/RayTracing/include/SDL_filesystem.h</includedby>
    <includedby refid="_s_d_l__gamecontroller_8h" local="yes">D:/RayTracing/include/SDL_gamecontroller.h</includedby>
    <includedby refid="_s_d_l__gesture_8h" local="yes">D:/RayTracing/include/SDL_gesture.h</includedby>
    <includedby refid="_s_d_l__haptic_8h" local="yes">D:/RayTracing/include/SDL_haptic.h</includedby>
    <includedby refid="_s_d_l__hidapi_8h" local="yes">D:/RayTracing/include/SDL_hidapi.h</includedby>
    <includedby refid="_s_d_l__hints_8h" local="yes">D:/RayTracing/include/SDL_hints.h</includedby>
    <includedby refid="_s_d_l__joystick_8h" local="yes">D:/RayTracing/include/SDL_joystick.h</includedby>
    <includedby refid="_s_d_l__keyboard_8h" local="yes">D:/RayTracing/include/SDL_keyboard.h</includedby>
    <includedby refid="_s_d_l__keycode_8h" local="yes">D:/RayTracing/include/SDL_keycode.h</includedby>
    <includedby refid="_s_d_l__loadso_8h" local="yes">D:/RayTracing/include/SDL_loadso.h</includedby>
    <includedby refid="_s_d_l__locale_8h" local="yes">D:/RayTracing/include/SDL_locale.h</includedby>
    <includedby refid="_s_d_l__log_8h" local="yes">D:/RayTracing/include/SDL_log.h</includedby>
    <includedby refid="_s_d_l__main_8h" local="yes">D:/RayTracing/include/SDL_main.h</includedby>
    <includedby refid="_s_d_l__messagebox_8h" local="yes">D:/RayTracing/include/SDL_messagebox.h</includedby>
    <includedby refid="_s_d_l__misc_8h" local="yes">D:/RayTracing/include/SDL_misc.h</includedby>
    <includedby refid="_s_d_l__mouse_8h" local="yes">D:/RayTracing/include/SDL_mouse.h</includedby>
    <includedby refid="_s_d_l__mutex_8h" local="yes">D:/RayTracing/include/SDL_mutex.h</includedby>
    <includedby refid="_s_d_l__pixels_8h" local="yes">D:/RayTracing/include/SDL_pixels.h</includedby>
    <includedby refid="_s_d_l__power_8h" local="yes">D:/RayTracing/include/SDL_power.h</includedby>
    <includedby refid="_s_d_l__quit_8h" local="yes">D:/RayTracing/include/SDL_quit.h</includedby>
    <includedby refid="_s_d_l__rect_8h" local="yes">D:/RayTracing/include/SDL_rect.h</includedby>
    <includedby refid="_s_d_l__render_8h" local="yes">D:/RayTracing/include/SDL_render.h</includedby>
    <includedby refid="_s_d_l__rwops_8h" local="yes">D:/RayTracing/include/SDL_rwops.h</includedby>
    <includedby refid="_s_d_l__scancode_8h" local="yes">D:/RayTracing/include/SDL_scancode.h</includedby>
    <includedby refid="_s_d_l__sensor_8h" local="yes">D:/RayTracing/include/SDL_sensor.h</includedby>
    <includedby refid="_s_d_l__shape_8h" local="yes">D:/RayTracing/include/SDL_shape.h</includedby>
    <includedby refid="_s_d_l__surface_8h" local="yes">D:/RayTracing/include/SDL_surface.h</includedby>
    <includedby refid="_s_d_l__system_8h" local="yes">D:/RayTracing/include/SDL_system.h</includedby>
    <includedby refid="_s_d_l__syswm_8h" local="yes">D:/RayTracing/include/SDL_syswm.h</includedby>
    <includedby refid="_s_d_l__thread_8h" local="yes">D:/RayTracing/include/SDL_thread.h</includedby>
    <includedby refid="_s_d_l__timer_8h" local="yes">D:/RayTracing/include/SDL_timer.h</includedby>
    <includedby refid="_s_d_l__touch_8h" local="yes">D:/RayTracing/include/SDL_touch.h</includedby>
    <includedby refid="_s_d_l__types_8h" local="yes">D:/RayTracing/include/SDL_types.h</includedby>
    <includedby refid="_s_d_l__version_8h" local="yes">D:/RayTracing/include/SDL_version.h</includedby>
    <includedby refid="_s_d_l__video_8h" local="yes">D:/RayTracing/include/SDL_video.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>SDL_config.h</label>
        <link refid="_s_d_l__config_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>SDL_platform.h</label>
        <link refid="_s_d_l__platform_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>begin_code.h</label>
        <link refid="begin__code_8h"/>
      </node>
      <node id="5">
        <label>close_code.h</label>
        <link refid="close__code_8h"/>
      </node>
      <node id="7">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>D:/RayTracing/CApp.cpp</label>
        <link refid="_c_app_8cpp"/>
      </node>
      <node id="3">
        <label>D:/RayTracing/CApp.h</label>
        <link refid="_c_app_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>D:/RayTracing/RayTrace/Image.cpp</label>
        <link refid="_image_8cpp"/>
      </node>
      <node id="6">
        <label>D:/RayTracing/RayTrace/Image.h</label>
        <link refid="_image_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>D:/RayTracing/RayTrace/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
      </node>
      <node id="8">
        <label>D:/RayTracing/RayTrace/Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.cpp</label>
        <link refid="textureimage_8cpp"/>
      </node>
      <node id="10">
        <label>D:/RayTracing/RayTrace/Textures/textureimage.h</label>
        <link refid="textureimage_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>D:/RayTracing/include/SDL.h</label>
        <link refid="_s_d_l_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>D:/RayTracing/include/SDL_atomic.h</label>
        <link refid="_s_d_l__atomic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>D:/RayTracing/include/SDL_audio.h</label>
        <link refid="_s_d_l__audio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>D:/RayTracing/include/SDL_bits.h</label>
        <link refid="_s_d_l__bits_8h"/>
      </node>
      <node id="20">
        <label>D:/RayTracing/include/SDL_clipboard.h</label>
        <link refid="_s_d_l__clipboard_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>D:/RayTracing/include/SDL_cpuinfo.h</label>
        <link refid="_s_d_l__cpuinfo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>D:/RayTracing/include/SDL_endian.h</label>
        <link refid="_s_d_l__endian_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>D:/RayTracing/include/SDL_error.h</label>
        <link refid="_s_d_l__error_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>D:/RayTracing/include/SDL_events.h</label>
        <link refid="_s_d_l__events_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>D:/RayTracing/include/SDL_filesystem.h</label>
        <link refid="_s_d_l__filesystem_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>D:/RayTracing/include/SDL_gamecontroller.h</label>
        <link refid="_s_d_l__gamecontroller_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>D:/RayTracing/include/SDL_gesture.h</label>
        <link refid="_s_d_l__gesture_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>D:/RayTracing/include/SDL_haptic.h</label>
        <link refid="_s_d_l__haptic_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>D:/RayTracing/include/SDL_hidapi.h</label>
        <link refid="_s_d_l__hidapi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>D:/RayTracing/include/SDL_hints.h</label>
        <link refid="_s_d_l__hints_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>D:/RayTracing/include/SDL_joystick.h</label>
        <link refid="_s_d_l__joystick_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>D:/RayTracing/include/SDL_keyboard.h</label>
        <link refid="_s_d_l__keyboard_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>D:/RayTracing/include/SDL_keycode.h</label>
        <link refid="_s_d_l__keycode_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>D:/RayTracing/include/SDL_loadso.h</label>
        <link refid="_s_d_l__loadso_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>D:/RayTracing/include/SDL_locale.h</label>
        <link refid="_s_d_l__locale_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>D:/RayTracing/include/SDL_log.h</label>
        <link refid="_s_d_l__log_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>D:/RayTracing/include/SDL_main.h</label>
        <link refid="_s_d_l__main_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>D:/RayTracing/include/SDL_messagebox.h</label>
        <link refid="_s_d_l__messagebox_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>D:/RayTracing/include/SDL_metal.h</label>
        <link refid="_s_d_l__metal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>D:/RayTracing/include/SDL_misc.h</label>
        <link refid="_s_d_l__misc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>D:/RayTracing/include/SDL_mouse.h</label>
        <link refid="_s_d_l__mouse_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>D:/RayTracing/include/SDL_mutex.h</label>
        <link refid="_s_d_l__mutex_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>D:/RayTracing/include/SDL_pixels.h</label>
        <link refid="_s_d_l__pixels_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>D:/RayTracing/include/SDL_power.h</label>
        <link refid="_s_d_l__power_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>D:/RayTracing/include/SDL_quit.h</label>
        <link refid="_s_d_l__quit_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>D:/RayTracing/include/SDL_rect.h</label>
        <link refid="_s_d_l__rect_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>D:/RayTracing/include/SDL_render.h</label>
        <link refid="_s_d_l__render_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>D:/RayTracing/include/SDL_rwops.h</label>
        <link refid="_s_d_l__rwops_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>D:/RayTracing/include/SDL_scancode.h</label>
        <link refid="_s_d_l__scancode_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>D:/RayTracing/include/SDL_sensor.h</label>
        <link refid="_s_d_l__sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>D:/RayTracing/include/SDL_shape.h</label>
        <link refid="_s_d_l__shape_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>D:/RayTracing/include/SDL_stdinc.h</label>
        <link refid="_s_d_l__stdinc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>D:/RayTracing/include/SDL_surface.h</label>
        <link refid="_s_d_l__surface_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>D:/RayTracing/include/SDL_system.h</label>
        <link refid="_s_d_l__system_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>D:/RayTracing/include/SDL_syswm.h</label>
        <link refid="_s_d_l__syswm_8h"/>
      </node>
      <node id="12">
        <label>D:/RayTracing/include/SDL_test.h</label>
        <link refid="_s_d_l__test_8h"/>
      </node>
      <node id="13">
        <label>D:/RayTracing/include/SDL_test_common.h</label>
        <link refid="_s_d_l__test__common_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>D:/RayTracing/include/SDL_test_compare.h</label>
        <link refid="_s_d_l__test__compare_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>D:/RayTracing/include/SDL_test_images.h</label>
        <link refid="_s_d_l__test__images_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>D:/RayTracing/include/SDL_thread.h</label>
        <link refid="_s_d_l__thread_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>D:/RayTracing/include/SDL_timer.h</label>
        <link refid="_s_d_l__timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>D:/RayTracing/include/SDL_touch.h</label>
        <link refid="_s_d_l__touch_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>D:/RayTracing/include/SDL_types.h</label>
        <link refid="_s_d_l__types_8h"/>
      </node>
      <node id="60">
        <label>D:/RayTracing/include/SDL_version.h</label>
        <link refid="_s_d_l__version_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>D:/RayTracing/include/SDL_video.h</label>
        <link refid="_s_d_l__video_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>D:/RayTracing/include/SDL_vulkan.h</label>
        <link refid="_s_d_l__vulkan_8h"/>
      </node>
      <node id="5">
        <label>D:/RayTracing/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Cast operators</header>
      <description><para>Use proper C++ casts when compiled as C++ to be compatible with the option -Wold-style-cast of GCC (and -Werror=old-style-cast in GCC 4.2 and above). </para>
</description>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a9891f68858953b42cbc18e68a441e39d" prot="public" static="no">
        <name>SDL_reinterpret_cast</name>
        <param><defname>type</defname></param>
        <param><defname>expression</defname></param>
        <initializer>((<ref refid="_s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188" kindref="member">type</ref>)(expression))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="154" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" prot="public" static="no">
        <name>SDL_static_cast</name>
        <param><defname>type</defname></param>
        <param><defname>expression</defname></param>
        <initializer>((<ref refid="_s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188" kindref="member">type</ref>)(expression))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="155" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1aa1364dba66887966247b36f48e19ac62" prot="public" static="no">
        <name>SDL_const_cast</name>
        <param><defname>type</defname></param>
        <param><defname>expression</defname></param>
        <initializer>((<ref refid="_s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188" kindref="member">type</ref>)(expression))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="156" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1af482df3379ebfd4c3cfe44e6e0db7628" prot="public" static="no">
        <name>SDL_FOURCC</name>
        <param><defname>A</defname></param>
        <param><defname>B</defname></param>
        <param><defname>C</defname></param>
        <param><defname>D</defname></param>
        <initializer>    ((<ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>, <ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref>, (A))) &lt;&lt; 0) | \
     (<ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>, <ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref>, (B))) &lt;&lt; 8) | \
     (<ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>, <ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref>, (C))) &lt;&lt; 16) | \
     (<ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>, <ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref>, (D))) &lt;&lt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="161" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Basic data types</header>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a9be4e10b2b4e72a2cce3ad88e9726cb9" prot="public" static="no">
        <name>SDL_MAX_SINT8</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a5fc98623306a32e69eaab63e89e1d138" kindref="member">Sint8</ref>)0x7F)           /* 127 */</initializer>
        <briefdescription>
<para>A signed 8-bit integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="188" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1abfd092b0fd20283ed658d3d8f3071a5f" prot="public" static="no">
        <name>SDL_MIN_SINT8</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a5fc98623306a32e69eaab63e89e1d138" kindref="member">Sint8</ref>)(~0x7F))        /* -128 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="189" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1af55b32a39296c1b24fce86273f390a47" prot="public" static="no">
        <name>SDL_MAX_UINT8</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref>)0xFF)           /* 255 */</initializer>
        <briefdescription>
<para>An unsigned 8-bit integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="194" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ad65adf0e23d13d1c0506457266aed02c" prot="public" static="no">
        <name>SDL_MIN_UINT8</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref>)0x00)           /* 0 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="195" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a3ff206679a193bde4af51987dd9cdbfb" prot="public" static="no">
        <name>SDL_MAX_SINT16</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref>)0x7FFF)        /* 32767 */</initializer>
        <briefdescription>
<para>A signed 16-bit integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="200" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1abbfab63b77bb6390ca2746f854c56096" prot="public" static="no">
        <name>SDL_MIN_SINT16</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref>)(~0x7FFF))     /* -32768 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="201" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a93b34777fdbdd6f60d50788cdd6e2a5b" prot="public" static="no">
        <name>SDL_MAX_UINT16</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref>)0xFFFF)        /* 65535 */</initializer>
        <briefdescription>
<para>An unsigned 16-bit integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="206" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1aeafdd0f5a8ec4a06405db952e7699028" prot="public" static="no">
        <name>SDL_MIN_UINT16</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref>)0x0000)        /* 0 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="207" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ace3c96991b704ef4ec9279dea218cf00" prot="public" static="no">
        <name>SDL_MAX_SINT32</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" kindref="member">Sint32</ref>)0x7FFFFFFF)    /* 2147483647 */</initializer>
        <briefdescription>
<para>A signed 32-bit integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="212" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a621ee889cabf822a72f7c288b3403fb5" prot="public" static="no">
        <name>SDL_MIN_SINT32</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" kindref="member">Sint32</ref>)(~0x7FFFFFFF)) /* -2147483648 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="213" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a1851171ad859663d305344316a73bd22" prot="public" static="no">
        <name>SDL_MAX_UINT32</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>)0xFFFFFFFFu)   /* 4294967295 */</initializer>
        <briefdescription>
<para>An unsigned 32-bit integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="218" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ae57f0b0003bf0776c608f65e1981a95d" prot="public" static="no">
        <name>SDL_MIN_UINT32</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>)0x00000000)    /* 0 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="219" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a419073146b1419899f722f48690875b9" prot="public" static="no">
        <name>SDL_MAX_SINT64</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" kindref="member">Sint64</ref>)0x7FFFFFFFFFFFFFFFll)      /* 9223372036854775807 */</initializer>
        <briefdescription>
<para>A signed 64-bit integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="225" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1acfc724558552194368ad6abf50f0e84f" prot="public" static="no">
        <name>SDL_MIN_SINT64</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" kindref="member">Sint64</ref>)(~0x7FFFFFFFFFFFFFFFll))   /* -9223372036854775808 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="226" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a794429d194ac2c07e8310fc7bad7d0ab" prot="public" static="no">
        <name>SDL_MAX_UINT64</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" kindref="member">Uint64</ref>)0xFFFFFFFFFFFFFFFFull)     /* 18446744073709551615 */</initializer>
        <briefdescription>
<para>An unsigned 64-bit integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="231" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a44fa158b8a6074155a050ff4ba5a8292" prot="public" static="no">
        <name>SDL_MIN_UINT64</name>
        <initializer>((<ref refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" kindref="member">Uint64</ref>)(0x0000000000000000ull))   /* 0 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="232" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1aae47902b4a68b35b6b5a5733af74e99e" prot="public" static="no">
        <name>SDL_PRIs64</name>
        <initializer>&quot;lld&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="248" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a595c1590a52d953f5c34859ff23b0d5c" prot="public" static="no">
        <name>SDL_PRIu64</name>
        <initializer>&quot;llu&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="259" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ada61ee823d794777744d0b190e9cbb1f" prot="public" static="no">
        <name>SDL_PRIx64</name>
        <initializer>&quot;llx&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="270" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a1d0d06015b59be929cbcd44a022ab69c" prot="public" static="no">
        <name>SDL_PRIX64</name>
        <initializer>&quot;llX&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="281" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1aff8263002d42c66ef04687cda86bc3d2" prot="public" static="no">
        <name>SDL_PRIs32</name>
        <initializer>&quot;d&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="288" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a02a9c84dfccf028f88101476c6cc4a9d" prot="public" static="no">
        <name>SDL_PRIu32</name>
        <initializer>&quot;u&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="295" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a5a269b805581a775264f7b179d9c33a8" prot="public" static="no">
        <name>SDL_PRIx32</name>
        <initializer>&quot;x&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="302" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ad805fd002d95f66e0f7414d0f0416fe6" prot="public" static="no">
        <name>SDL_PRIX32</name>
        <initializer>&quot;X&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="309" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a4a03aca91467efc1051ddb85c02385a2" prot="public" static="no">
        <name>SDL_IN_BYTECAP</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="339" column="11" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a7c8c45cf712b53863edc008aa96f24b6" prot="public" static="no">
        <name>SDL_INOUT_Z_CAP</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="340" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" prot="public" static="no">
        <name>SDL_OUT_Z_CAP</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="341" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a56add5577e642481fff247b14376b2de" prot="public" static="no">
        <name>SDL_OUT_CAP</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="342" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" prot="public" static="no">
        <name>SDL_OUT_BYTECAP</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="343" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1acf3bc9681b799ba3d31c03e9a548496d" prot="public" static="no">
        <name>SDL_OUT_Z_BYTECAP</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="344" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ab13a729d2e3e2d1e1b3b2dc0bfb858eb" prot="public" static="no">
        <name>SDL_PRINTF_FORMAT_STRING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="345" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a724eb3fcc488692f106d393193501514" prot="public" static="no">
        <name>SDL_SCANF_FORMAT_STRING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="346" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ab974676e45d9edeef6598d601d4fdd6a" prot="public" static="no">
        <name>SDL_PRINTF_VARARG_FUNC</name>
        <param><defname>fmtargnumber</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="352" column="11" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1acd540fbbc717339e1267b0a884baa66d" prot="public" static="no">
        <name>SDL_SCANF_VARARG_FUNC</name>
        <param><defname>fmtargnumber</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="353" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" prot="public" static="no">
        <name>SDL_COMPILE_TIME_ASSERT</name>
        <param><defname>name</defname></param>
        <param><defname>x</defname></param>
        <initializer>       typedef int SDL_compile_time_assert_ ## <ref refid="_s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239" kindref="member">name</ref>[(<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>) * 2 - 1]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="357" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a6c6778dd1ee11d2edce116271c822fbd" prot="public" static="no">
        <name>SDL_stack_alloc</name>
        <param><defname>type</defname></param>
        <param><defname>count</defname></param>
        <initializer>(<ref refid="_s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188" kindref="member">type</ref>*)<ref refid="_s_d_l__stdinc_8h_1a18324113df54556a3d72049b72615a49" kindref="member">SDL_malloc</ref>(sizeof(<ref refid="_s_d_l__opengl_8h_1ad5ddf6fca7b585646515660e810e0188" kindref="member">type</ref>)*(<ref refid="_s_d_l__opengl_8h_1a619bc20e8198de3bd3f3d7fc34de66b2" kindref="member">count</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="402" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1aca62cdb628b52c2f1f2a3004ddf721ce" prot="public" static="no">
        <name>SDL_stack_free</name>
        <param><defname>data</defname></param>
        <initializer><ref refid="_s_d_l__stdinc_8h_1a0e4ade894d550ada1fa19dc2d46e88b8" kindref="member">SDL_free</ref>(<ref refid="_s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a" kindref="member">data</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="403" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ad93f0b2393a3aa89f9ce24ac2642744e" prot="public" static="no">
        <name>SDL_min</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(((<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>) &lt; (<ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>)) ? (<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>) : (<ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="451" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ae3ab6e7584a16c7217ca0a4622212b61" prot="public" static="no">
        <name>SDL_max</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>(((<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>) &gt; (<ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>)) ? (<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>) : (<ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="452" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a0ab777838788966e7c70bb7df4fe60a0" prot="public" static="no">
        <name>SDL_clamp</name>
        <param><defname>x</defname></param>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>) &lt; (<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>)) ? (<ref refid="_s_d_l__opengl__glext_8h_1a3309789fc188587d666cda5ece79cf82" kindref="member">a</ref>) : (((<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>) &gt; (<ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>)) ? (<ref refid="_s_d_l__opengl__glext_8h_1a0f71581a41fd2264c8944126dabbd010" kindref="member">b</ref>) : (<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="453" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a16b9e31a9558e1cbc9e417b0f35a7b8a" prot="public" static="no">
        <name>SDL_zero</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="_s_d_l__stdinc_8h_1ae175db0d44cd740e2fa1072b71e5f1a4" kindref="member">SDL_memset</ref>(&amp;(<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>), 0, sizeof((<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="474" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a995406d407faf4cfa1ca9dd904672ab6" prot="public" static="no">
        <name>SDL_zerop</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="_s_d_l__stdinc_8h_1ae175db0d44cd740e2fa1072b71e5f1a4" kindref="member">SDL_memset</ref>((<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>), 0, sizeof(*(<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="475" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a1edc08d14c13f587b33d9e482035e3af" prot="public" static="no">
        <name>SDL_zeroa</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="_s_d_l__stdinc_8h_1ae175db0d44cd740e2fa1072b71e5f1a4" kindref="member">SDL_memset</ref>((<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>), 0, sizeof((<ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="476" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ae71449b1cc6e6250b91f539153a7a0d3" prot="public" static="no">
        <name>M_PI</name>
        <initializer>3.14159265358979323846264338327950288</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pi </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="568" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ada422bea61b05ed228c4f42e4aea2144" prot="public" static="no">
        <name>SDL_ICONV_ERROR</name>
        <initializer>(<ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref>)-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="630" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a8147462b96bda427f0b41125e645b9ab" prot="public" static="no">
        <name>SDL_ICONV_E2BIG</name>
        <initializer>(<ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref>)-2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="631" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1adc8b6997623c449e7ed53a605faa9eb0" prot="public" static="no">
        <name>SDL_ICONV_EILSEQ</name>
        <initializer>(<ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref>)-3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="632" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a03d30a2857731df69d31ffa802424a9e" prot="public" static="no">
        <name>SDL_ICONV_EINVAL</name>
        <initializer>(<ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref>)-4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="633" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a773e5f83e392495ad8abab8d71aa84c6" prot="public" static="no">
        <name>SDL_iconv_utf8_locale</name>
        <param><defname>S</defname></param>
        <initializer><ref refid="_s_d_l__stdinc_8h_1ad3b4082f19efa5d3bcf71f3f156b43f7" kindref="member">SDL_iconv_string</ref>(&quot;&quot;, &quot;UTF-8&quot;, S, <ref refid="_s_d_l__stdinc_8h_1ac06c288c339beeecb6f32e5d2a9471c0" kindref="member">SDL_strlen</ref>(S)+1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="654" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a59cd43c02306558671fe05c23284ab3b" prot="public" static="no">
        <name>SDL_iconv_utf8_ucs2</name>
        <param><defname>S</defname></param>
        <initializer>(<ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref> *)<ref refid="_s_d_l__stdinc_8h_1ad3b4082f19efa5d3bcf71f3f156b43f7" kindref="member">SDL_iconv_string</ref>(&quot;UCS-2-INTERNAL&quot;, &quot;UTF-8&quot;, S, <ref refid="_s_d_l__stdinc_8h_1ac06c288c339beeecb6f32e5d2a9471c0" kindref="member">SDL_strlen</ref>(S)+1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="655" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1acdced7c8985d280d87e659f583a5479e" prot="public" static="no">
        <name>SDL_iconv_utf8_ucs4</name>
        <param><defname>S</defname></param>
        <initializer>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref> *)<ref refid="_s_d_l__stdinc_8h_1ad3b4082f19efa5d3bcf71f3f156b43f7" kindref="member">SDL_iconv_string</ref>(&quot;UCS-4-INTERNAL&quot;, &quot;UTF-8&quot;, S, <ref refid="_s_d_l__stdinc_8h_1ac06c288c339beeecb6f32e5d2a9471c0" kindref="member">SDL_strlen</ref>(S)+1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="656" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1afaf3cc7fc7c497cbd3f16ddcd85a8fb5" prot="public" static="no">
        <name>SDL_iconv_wchar_utf8</name>
        <param><defname>S</defname></param>
        <initializer><ref refid="_s_d_l__stdinc_8h_1ad3b4082f19efa5d3bcf71f3f156b43f7" kindref="member">SDL_iconv_string</ref>(&quot;UTF-8&quot;, &quot;WCHAR_T&quot;, (char *)S, (<ref refid="_s_d_l__stdinc_8h_1afddee3f5be8611a2956f21ea899ea6f1" kindref="member">SDL_wcslen</ref>(S)+1)*sizeof(wchar_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="657" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="enum" id="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" prot="public" static="no" strong="no">
        <type></type>
        <name>SDL_bool</name>
        <enumvalue id="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733ba76e680af86c5508ea4ccd9f969eb1ea2" prot="public">
          <name>SDL_FALSE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733ba32efa84cfb0a91b0eee1edf6e941cf74" prot="public">
          <name>SDL_TRUE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="178" column="1" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a5fc98623306a32e69eaab63e89e1d138" prot="public" static="no">
        <type><ref refid="_s_d_l__config_8h_1aef44329758059c91c76d334e8fc09700" kindref="member">int8_t</ref></type>
        <definition>typedef int8_t Sint8</definition>
        <argsstring></argsstring>
        <name>Sint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="190" column="16" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" prot="public" static="no">
        <type><ref refid="_s_d_l__config_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref></type>
        <definition>typedef uint8_t Uint8</definition>
        <argsstring></argsstring>
        <name>Uint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="196" column="17" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" prot="public" static="no">
        <type><ref refid="_s_d_l__config_8h_1a269259c924dce846340ddbb810db2e3c" kindref="member">int16_t</ref></type>
        <definition>typedef int16_t Sint16</definition>
        <argsstring></argsstring>
        <name>Sint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="202" column="17" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" prot="public" static="no">
        <type><ref refid="_s_d_l__config_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref></type>
        <definition>typedef uint16_t Uint16</definition>
        <argsstring></argsstring>
        <name>Uint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="208" column="18" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" prot="public" static="no">
        <type><ref refid="_s_d_l__config_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref></type>
        <definition>typedef int32_t Sint32</definition>
        <argsstring></argsstring>
        <name>Sint32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="214" column="17" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" prot="public" static="no">
        <type><ref refid="_s_d_l__config_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref></type>
        <definition>typedef uint32_t Uint32</definition>
        <argsstring></argsstring>
        <name>Uint32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="220" column="18" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" prot="public" static="no">
        <type><ref refid="_s_d_l__config_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref></type>
        <definition>typedef int64_t Sint64</definition>
        <argsstring></argsstring>
        <name>Sint64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="227" column="17" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" prot="public" static="no">
        <type><ref refid="_s_d_l__config_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref></type>
        <definition>typedef uint64_t Uint64</definition>
        <argsstring></argsstring>
        <name>Uint64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="233" column="18" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a6cc0f44a83a9b9a152274968ad51a3fa" prot="public" static="no">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref> *</type>
        <definition>typedef void *(SDLCALL * SDL_malloc_func) (size_t size)</definition>
        <argsstring>)(size_t size)</argsstring>
        <name>SDL_malloc_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="411" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a3eefe7476901ae3fcc2f4fd9da2d1592" prot="public" static="no">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref> *</type>
        <definition>typedef void *(SDLCALL * SDL_calloc_func) (size_t nmemb, size_t size)</definition>
        <argsstring>)(size_t nmemb, size_t size)</argsstring>
        <name>SDL_calloc_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="412" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a54352256db255d5625108aea19120f36" prot="public" static="no">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref> *</type>
        <definition>typedef void *(SDLCALL * SDL_realloc_func) (void *mem, size_t size)</definition>
        <argsstring>)(void *mem, size_t size)</argsstring>
        <name>SDL_realloc_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="413" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a38b6aadadc8fa09f817ebbd0567b99fb" prot="public" static="no">
        <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref>(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref> *</type>
        <definition>typedef void(SDLCALL * SDL_free_func) (void *mem)</definition>
        <argsstring>)(void *mem)</argsstring>
        <name>SDL_free_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="414" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" prot="public" static="no">
        <type>struct _SDL_iconv_t *</type>
        <definition>typedef struct _SDL_iconv_t* SDL_iconv_t</definition>
        <argsstring></argsstring>
        <name>SDL_iconv_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="636" column="27" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a18324113df54556a3d72049b72615a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_malloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>SDL_malloc</name>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="406" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="406" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a992b08a30e37eb465de30d6d6f59e349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_calloc</definition>
        <argsstring>(size_t nmemb, size_t size)</argsstring>
        <name>SDL_calloc</name>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="407" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="407" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ac7864eb853658f50d6179a264f087c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_realloc</definition>
        <argsstring>(void *mem, size_t size)</argsstring>
        <name>SDL_realloc</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="408" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="408" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a0e4ade894d550ada1fa19dc2d46e88b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_free</definition>
        <argsstring>(void *mem)</argsstring>
        <name>SDL_free</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="409" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="409" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a91cba8a23ba5cae032f1def42a2add99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_GetMemoryFunctions</definition>
        <argsstring>(SDL_malloc_func *malloc_func, SDL_calloc_func *calloc_func, SDL_realloc_func *realloc_func, SDL_free_func *free_func)</argsstring>
        <name>SDL_GetMemoryFunctions</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a6cc0f44a83a9b9a152274968ad51a3fa" kindref="member">SDL_malloc_func</ref> *</type>
          <declname>malloc_func</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a3eefe7476901ae3fcc2f4fd9da2d1592" kindref="member">SDL_calloc_func</ref> *</type>
          <declname>calloc_func</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a54352256db255d5625108aea19120f36" kindref="member">SDL_realloc_func</ref> *</type>
          <declname>realloc_func</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a38b6aadadc8fa09f817ebbd0567b99fb" kindref="member">SDL_free_func</ref> *</type>
          <declname>free_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current set of SDL memory functions</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.7. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="421" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="421" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ad846ee206051a2aebd439c66cd907f9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_SetMemoryFunctions</definition>
        <argsstring>(SDL_malloc_func malloc_func, SDL_calloc_func calloc_func, SDL_realloc_func realloc_func, SDL_free_func free_func)</argsstring>
        <name>SDL_SetMemoryFunctions</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a6cc0f44a83a9b9a152274968ad51a3fa" kindref="member">SDL_malloc_func</ref></type>
          <declname>malloc_func</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a3eefe7476901ae3fcc2f4fd9da2d1592" kindref="member">SDL_calloc_func</ref></type>
          <declname>calloc_func</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a54352256db255d5625108aea19120f36" kindref="member">SDL_realloc_func</ref></type>
          <declname>realloc_func</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a38b6aadadc8fa09f817ebbd0567b99fb" kindref="member">SDL_free_func</ref></type>
          <declname>free_func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace SDL&apos;s memory allocation functions with a custom set</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.7. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="431" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="431" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a853b94eb0e35bf92556807e23d445bc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_GetNumAllocations</definition>
        <argsstring>(void)</argsstring>
        <name>SDL_GetNumAllocations</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of outstanding (unfreed) allocations</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.7. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="441" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="441" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a38d80496c7c3bfefb2634b3b038514c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_getenv</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SDL_getenv</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="443" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="443" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a82561dde7eb250ecb6fcbd3e3786d8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_setenv</definition>
        <argsstring>(const char *name, const char *value, int overwrite)</argsstring>
        <name>SDL_setenv</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>overwrite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="444" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="444" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ae4e475d53a51a90992745186a20d1f01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void SDLCALL SDL_qsort</definition>
        <argsstring>(void *base, size_t nmemb, size_t size, int(*compare)(const void *, const void *))</argsstring>
        <name>SDL_qsort</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>int(*)(const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *, const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *)</type>
          <declname>compare</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="446" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="446" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1abc2986a4608bc9fd73df173d7619c096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_abs</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_abs</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="448" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="448" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a4f75af3d4d39b627ddc022c8ce61fba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isalpha</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isalpha</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="455" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="455" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a5c1cb8c02d932fa9bf5f3b694ace7da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isalnum</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isalnum</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="456" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="456" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ad37f07937f3576aa3fa6e3e3874eb11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isblank</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isblank</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="457" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="457" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1af4efbd1fe6f0a088d61e2240bd7a6039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_iscntrl</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_iscntrl</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="458" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="458" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a3e2b095edf06856900b16babe77809cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isdigit</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isdigit</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="459" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="459" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a7ea87924897c2645016630155ee1c81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isxdigit</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isxdigit</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="460" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="460" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a21ca32924f94078d4901d41f63356a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_ispunct</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_ispunct</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="461" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="461" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a345ef079d2b47f9cda08d383dde1ec65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isspace</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isspace</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="462" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="462" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a072cc40c790442b511b689a6429e12af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isupper</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isupper</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="463" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="463" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1addcc681a35613819350530840d2946de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_islower</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_islower</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="464" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="464" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ac38b553bf3bf3719f96a1d80016d0af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isprint</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isprint</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="465" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="465" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a81b295ab98aca63dfd55b025ce3cee84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_isgraph</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_isgraph</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="466" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="466" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a91fcc07ab87653a6c92ae1288c20a606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_toupper</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_toupper</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="467" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="467" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1af18a897c83986540d4caf4573775f199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_tolower</definition>
        <argsstring>(int x)</argsstring>
        <name>SDL_tolower</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="468" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="468" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aad3433287a9ce5aafad039f4d064c3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Uint32 SDLCALL SDL_crc32</definition>
        <argsstring>(Uint32 crc, const void *data, size_t len)</argsstring>
        <name>SDL_crc32</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>crc</declname>
        </param>
        <param>
          <type>const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="470" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="470" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ae175db0d44cd740e2fa1072b71e5f1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_memset</definition>
        <argsstring>(SDL_OUT_BYTECAP(len) void *dst, int c, size_t len)</argsstring>
        <name>SDL_memset</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" kindref="member">SDL_OUT_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>) <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="472" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="472" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a0f1cd3e844f8fac8e26ca1e2c2101956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1addf1f12c70f89102cc187297860c5961" kindref="member">SDL_FORCE_INLINE</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref></type>
        <definition>SDL_FORCE_INLINE void SDL_memset4</definition>
        <argsstring>(void *dst, Uint32 val, size_t dwords)</argsstring>
        <name>SDL_memset4</name>
        <param>
          <type><ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>dwords</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="479" column="23" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="479" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a627cbec2fd30f1bfc7ccae4c4e4d4b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_memcpy</definition>
        <argsstring>(SDL_OUT_BYTECAP(len) void *dst, SDL_IN_BYTECAP(len) const void *src, size_t len)</argsstring>
        <name>SDL_memcpy</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" kindref="member">SDL_OUT_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>) <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a4a03aca91467efc1051ddb85c02385a2" kindref="member">SDL_IN_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>) const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="509" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="509" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a00f4124a79e4fc79d1aa4c12df3e8a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC void *SDLCALL SDL_memmove</definition>
        <argsstring>(SDL_OUT_BYTECAP(len) void *dst, SDL_IN_BYTECAP(len) const void *src, size_t len)</argsstring>
        <name>SDL_memmove</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" kindref="member">SDL_OUT_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>) <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a4a03aca91467efc1051ddb85c02385a2" kindref="member">SDL_IN_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>) const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="511" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="511" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1af8e26df545c29284291714410fa7731e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_memcmp</definition>
        <argsstring>(const void *s1, const void *s2, size_t len)</argsstring>
        <name>SDL_memcmp</name>
        <param>
          <type>const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="512" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="512" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1afddee3f5be8611a2956f21ea899ea6f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_wcslen</definition>
        <argsstring>(const wchar_t *wstr)</argsstring>
        <name>SDL_wcslen</name>
        <param>
          <type>const wchar_t *</type>
          <declname>wstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="514" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="514" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a611742b034af091bbf678150ede27a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_wcslcpy</definition>
        <argsstring>(SDL_OUT_Z_CAP(maxlen) wchar_t *dst, const wchar_t *src, size_t maxlen)</argsstring>
        <name>SDL_wcslcpy</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(maxlen) wchar_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>maxlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="515" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="515" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a9f29935903b98e66f3d69b336f741712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_wcslcat</definition>
        <argsstring>(SDL_INOUT_Z_CAP(maxlen) wchar_t *dst, const wchar_t *src, size_t maxlen)</argsstring>
        <name>SDL_wcslcat</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a7c8c45cf712b53863edc008aa96f24b6" kindref="member">SDL_INOUT_Z_CAP</ref>(maxlen) wchar_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>maxlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="516" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="516" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a247f3e70927a6dd8306547e25487d86d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> wchar_t *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC wchar_t *SDLCALL SDL_wcsdup</definition>
        <argsstring>(const wchar_t *wstr)</argsstring>
        <name>SDL_wcsdup</name>
        <param>
          <type>const wchar_t *</type>
          <declname>wstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="517" column="33" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="517" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ab5d68da106d85967ea11af55f884ebcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> wchar_t *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC wchar_t *SDLCALL SDL_wcsstr</definition>
        <argsstring>(const wchar_t *haystack, const wchar_t *needle)</argsstring>
        <name>SDL_wcsstr</name>
        <param>
          <type>const wchar_t *</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>needle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="518" column="33" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="518" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a42d3b826f86fc016f76c01dbdf96bce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_wcscmp</definition>
        <argsstring>(const wchar_t *str1, const wchar_t *str2)</argsstring>
        <name>SDL_wcscmp</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="520" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="520" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a215fcb7541fa8d2fd8d179160c752ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_wcsncmp</definition>
        <argsstring>(const wchar_t *str1, const wchar_t *str2, size_t maxlen)</argsstring>
        <name>SDL_wcsncmp</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>maxlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="521" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="521" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1af4d3e5b558c9d819d6628abaa4412af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_wcscasecmp</definition>
        <argsstring>(const wchar_t *str1, const wchar_t *str2)</argsstring>
        <name>SDL_wcscasecmp</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="522" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="522" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ad9530d5e06c34dc152a52f209f327f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_wcsncasecmp</definition>
        <argsstring>(const wchar_t *str1, const wchar_t *str2, size_t len)</argsstring>
        <name>SDL_wcsncasecmp</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="523" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="523" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ac06c288c339beeecb6f32e5d2a9471c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_strlen</definition>
        <argsstring>(const char *str)</argsstring>
        <name>SDL_strlen</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="525" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="525" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ac362d85898cfb51e06e33399a7d3fd03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_strlcpy</definition>
        <argsstring>(SDL_OUT_Z_CAP(maxlen) char *dst, const char *src, size_t maxlen)</argsstring>
        <name>SDL_strlcpy</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(maxlen) char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>maxlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="526" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="526" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a78f061725fa314e775a3978b916a5daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_utf8strlcpy</definition>
        <argsstring>(SDL_OUT_Z_CAP(dst_bytes) char *dst, const char *src, size_t dst_bytes)</argsstring>
        <name>SDL_utf8strlcpy</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(dst_bytes) char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>dst_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="527" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="527" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a50d15493c8921df9a8c2c233703429c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_strlcat</definition>
        <argsstring>(SDL_INOUT_Z_CAP(maxlen) char *dst, const char *src, size_t maxlen)</argsstring>
        <name>SDL_strlcat</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a7c8c45cf712b53863edc008aa96f24b6" kindref="member">SDL_INOUT_Z_CAP</ref>(maxlen) char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>maxlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="528" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="528" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a4b0dde72d9c2a020c9e6405ca080e81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_strdup</definition>
        <argsstring>(const char *str)</argsstring>
        <name>SDL_strdup</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="529" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="529" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1adab03841a0dcf11f95a75c5cb17b5d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_strrev</definition>
        <argsstring>(char *str)</argsstring>
        <name>SDL_strrev</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="530" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="530" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a9c2b7f65e349e0c08047f333f79b4114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_strupr</definition>
        <argsstring>(char *str)</argsstring>
        <name>SDL_strupr</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="531" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="531" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a4918c9af266607b61b7c31c129a45c67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_strlwr</definition>
        <argsstring>(char *str)</argsstring>
        <name>SDL_strlwr</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="532" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="532" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a27a3d8808549daee7eb2b6a67d96d928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_strchr</definition>
        <argsstring>(const char *str, int c)</argsstring>
        <name>SDL_strchr</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="533" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="533" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a32ef5d635ca8305dce08ec46d66c1a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_strrchr</definition>
        <argsstring>(const char *str, int c)</argsstring>
        <name>SDL_strrchr</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="534" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="534" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a39036c682ddb0c0ceff78782a8b7d3b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_strstr</definition>
        <argsstring>(const char *haystack, const char *needle)</argsstring>
        <name>SDL_strstr</name>
        <param>
          <type>const char *</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>needle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="535" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="535" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1af780d689988808aefb92b88920e2ff91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_strtokr</definition>
        <argsstring>(char *s1, const char *s2, char **saveptr)</argsstring>
        <name>SDL_strtokr</name>
        <param>
          <type>char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>saveptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="536" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="536" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a8f0319c8cf55baa072e5caf1dc228286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_utf8strlen</definition>
        <argsstring>(const char *str)</argsstring>
        <name>SDL_utf8strlen</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="537" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="537" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1af533f5144ccdb6287b076c12d2e925af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_itoa</definition>
        <argsstring>(int value, char *str, int radix)</argsstring>
        <name>SDL_itoa</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="539" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="539" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a016d6b88a308688df4393aca3aca1e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_uitoa</definition>
        <argsstring>(unsigned int value, char *str, int radix)</argsstring>
        <name>SDL_uitoa</name>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="540" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="540" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a699d7eef3ecd841bf4bd778da9da1046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_ltoa</definition>
        <argsstring>(long value, char *str, int radix)</argsstring>
        <name>SDL_ltoa</name>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="541" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="541" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1af09800798781e90beaa02f2c14df7347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_ultoa</definition>
        <argsstring>(unsigned long value, char *str, int radix)</argsstring>
        <name>SDL_ultoa</name>
        <param>
          <type>unsigned long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="542" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="542" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a128dee711ea087b35466f1353a26ecea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_lltoa</definition>
        <argsstring>(Sint64 value, char *str, int radix)</argsstring>
        <name>SDL_lltoa</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" kindref="member">Sint64</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="543" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="543" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a7d4157d5ea4b08719e6b8a6baf5f5418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_ulltoa</definition>
        <argsstring>(Uint64 value, char *str, int radix)</argsstring>
        <name>SDL_ulltoa</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" kindref="member">Uint64</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="544" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="544" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a693141d8cd82c97ba5cb0f4bc42c96ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_atoi</definition>
        <argsstring>(const char *str)</argsstring>
        <name>SDL_atoi</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="546" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="546" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a7f36805f126b5712ab14d4b1da721a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_atof</definition>
        <argsstring>(const char *str)</argsstring>
        <name>SDL_atof</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="547" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="547" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aa0674ed6bcaf8a0889dbbee89f4ac19c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> long <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC long SDLCALL SDL_strtol</definition>
        <argsstring>(const char *str, char **endp, int base)</argsstring>
        <name>SDL_strtol</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="548" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="548" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a2b92ab8170e4df3252013d903b9d4051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> unsigned long <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC unsigned long SDLCALL SDL_strtoul</definition>
        <argsstring>(const char *str, char **endp, int base)</argsstring>
        <name>SDL_strtoul</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="549" column="39" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="549" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a4ebd07268af4cf8efe05f1eb28d9ba98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" kindref="member">Sint64</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Sint64 SDLCALL SDL_strtoll</definition>
        <argsstring>(const char *str, char **endp, int base)</argsstring>
        <name>SDL_strtoll</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="550" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="550" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aa893ab27b0d874a0d1eea7025937c006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" kindref="member">Uint64</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC Uint64 SDLCALL SDL_strtoull</definition>
        <argsstring>(const char *str, char **endp, int base)</argsstring>
        <name>SDL_strtoull</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="551" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="551" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aebf098dbc1451c320b48e1760d090db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_strtod</definition>
        <argsstring>(const char *str, char **endp)</argsstring>
        <name>SDL_strtod</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="552" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="552" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a37e18b9103f755d03cf4b0aedeb39fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_strcmp</definition>
        <argsstring>(const char *str1, const char *str2)</argsstring>
        <name>SDL_strcmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="554" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="554" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a21287cfa7609bbc3d46ea10b20234389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_strncmp</definition>
        <argsstring>(const char *str1, const char *str2, size_t maxlen)</argsstring>
        <name>SDL_strncmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>maxlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="555" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="555" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a1de324579fee4225e390df0a7b485d17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_strcasecmp</definition>
        <argsstring>(const char *str1, const char *str2)</argsstring>
        <name>SDL_strcasecmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="556" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="556" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a51b84fa76ad53e7c3b17892d9982c526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_strncasecmp</definition>
        <argsstring>(const char *str1, const char *str2, size_t len)</argsstring>
        <name>SDL_strncasecmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="557" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="557" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a7b721b0e22698c8eb6efc5341003b582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_sscanf</definition>
        <argsstring>(const char *text, SDL_SCANF_FORMAT_STRING const char *fmt,...) SDL_SCANF_VARARG_FUNC(2)</argsstring>
        <name>SDL_sscanf</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a724eb3fcc488692f106d393193501514" kindref="member">SDL_SCANF_FORMAT_STRING</ref> const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="559" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="559" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aec25dc54f0de98ea8d970552f38d6365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_vsscanf</definition>
        <argsstring>(const char *text, const char *fmt, va_list ap)</argsstring>
        <name>SDL_vsscanf</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="560" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="560" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1adcf2cbf4b55834f5727664425f80e6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_snprintf</definition>
        <argsstring>(SDL_OUT_Z_CAP(maxlen) char *text, size_t maxlen, SDL_PRINTF_FORMAT_STRING const char *fmt,...) SDL_PRINTF_VARARG_FUNC(3)</argsstring>
        <name>SDL_snprintf</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(maxlen) char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1ab13a729d2e3e2d1e1b3b2dc0bfb858eb" kindref="member">SDL_PRINTF_FORMAT_STRING</ref> const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="561" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="561" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ae9acdeeb54ccbab3bb53280052541bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_vsnprintf</definition>
        <argsstring>(SDL_OUT_Z_CAP(maxlen) char *text, size_t maxlen, const char *fmt, va_list ap)</argsstring>
        <name>SDL_vsnprintf</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(maxlen) char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>maxlen</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="562" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="562" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ae0f4ba2f23bda0b6928357130bb2daff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_asprintf</definition>
        <argsstring>(char **strp, SDL_PRINTF_FORMAT_STRING const char *fmt,...) SDL_PRINTF_VARARG_FUNC(2)</argsstring>
        <name>SDL_asprintf</name>
        <param>
          <type>char **</type>
          <declname>strp</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1ab13a729d2e3e2d1e1b3b2dc0bfb858eb" kindref="member">SDL_PRINTF_FORMAT_STRING</ref> const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="563" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="563" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a8546e843a34f05e1fbcbe0d92762d7ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_vasprintf</definition>
        <argsstring>(char **strp, const char *fmt, va_list ap)</argsstring>
        <name>SDL_vasprintf</name>
        <param>
          <type>char **</type>
          <declname>strp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="564" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="564" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aad4335bccd2da5d4cbc56227a00c5e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_acos</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_acos</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use this function to compute arc cosine of <computeroutput>x</computeroutput>.</para>
<para>The definition of <computeroutput>y = acos(x)</computeroutput> is <computeroutput>x = cos(y)</computeroutput>.</para>
<para>Domain: <computeroutput>-1 &lt;= x &lt;= 1</computeroutput></para>
<para>Range: <computeroutput>0 &lt;= y &lt;= Pi</computeroutput></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>floating point value, in radians. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>arc cosine of <computeroutput>x</computeroutput>.</para>
</simplesect>
<simplesect kind="since"><para>This function is available since SDL 2.0.2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="586" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="586" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a8df77f77cde849ce6507467289f9161e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_acosf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_acosf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="587" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="587" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a1d20f8c07517e3edff66a483df394a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_asin</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_asin</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="588" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="588" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a3a8db8cf7e449bb3d7f055ba02f5dbc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_asinf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_asinf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="589" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="589" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1af8123e938b403f372e38c9dcf0d532f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_atan</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_atan</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="590" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="590" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aacaab6901a2c37914157d5b000be9e4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_atanf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_atanf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="591" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="591" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a58e02d9393a57c2c2659fff9ae112d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_atan2</definition>
        <argsstring>(double y, double x)</argsstring>
        <name>SDL_atan2</name>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="592" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="592" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a2e5048dc7ba12c1938c9d2cf1995eb69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_atan2f</definition>
        <argsstring>(float y, float x)</argsstring>
        <name>SDL_atan2f</name>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="593" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="593" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a936588a2d12ce83c915d9a2441653370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_ceil</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_ceil</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="594" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="594" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ad6faeefa315255bc0df3ac8ca93691c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_ceilf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_ceilf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="595" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="595" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a4171a3b97ac5cde52618cedd490be481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_copysign</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>SDL_copysign</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="596" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="596" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a0e4028f1feef8764524f99950bb2f75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_copysignf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>SDL_copysignf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="597" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="597" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a188dec0f0bc8eabb58181656eaf41fd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_cos</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_cos</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="598" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="598" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a531f6b784d47ec6719c71e578bccc88d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_cosf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_cosf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="599" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="599" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a79c55f7a1211b69d10dcfec65edfdb31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_exp</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_exp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="600" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="600" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a33e13d60f771d8bf8659bebc5b1150b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_expf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_expf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="601" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="601" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ab3c294fac683198ba196e072bb181f02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_fabs</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_fabs</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="602" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="602" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a88bc179b571e1b81ef939918b853e85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_fabsf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_fabsf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="603" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="603" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aef4788340ec0d94db83efa78a985a633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_floor</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_floor</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="604" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="604" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a7cf5c20a750cc7aefd9a33455bc2cc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_floorf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_floorf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="605" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="605" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1afd309afc21b31ace3b0f433bbf5fa5f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_trunc</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_trunc</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="606" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="606" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1afc7c83b503adc4a911f65fb215a2671b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_truncf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_truncf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="607" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="607" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a6c56858af3e7a3acfc8d3d6099c2c3f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_fmod</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>SDL_fmod</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="608" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="608" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a24b8633bde27b05dae938f79ebbb3898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_fmodf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>SDL_fmodf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="609" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="609" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a2b226b584a9922167301231d3c13bee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_log</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_log</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="610" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="610" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a9548171a530aeb28aa02f22b0263c390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_logf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_logf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="611" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="611" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ae907373550fb1e22242aeb56fb5e86ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_log10</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_log10</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="612" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="612" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a272cf573bc32004a674bdc78a7ce2104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_log10f</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_log10f</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="613" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="613" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a3d52f0185cf0e50a39d82d1c0d9033a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_pow</definition>
        <argsstring>(double x, double y)</argsstring>
        <name>SDL_pow</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="614" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="614" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1adbd43da74ca37ced160f748a35a18e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_powf</definition>
        <argsstring>(float x, float y)</argsstring>
        <name>SDL_powf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="615" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="615" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a6f3a2f23d1d27e06de58b966253032fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_round</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_round</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="616" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="616" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aad53e9e761ce876c2eeecf8b511215f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_roundf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_roundf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="617" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="617" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a9e808d8450216055d1fb4ec2a5abbc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> long <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC long SDLCALL SDL_lround</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_lround</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="618" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="618" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a9309b62decdda5d9abdbed5a1afee7de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> long <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC long SDLCALL SDL_lroundf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_lroundf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="619" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="619" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aadf9f772c77eaac69d873bdc894d8877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_scalbn</definition>
        <argsstring>(double x, int n)</argsstring>
        <name>SDL_scalbn</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="620" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="620" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ac2918cea7f1ad8c10c7ff7d0549f059b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_scalbnf</definition>
        <argsstring>(float x, int n)</argsstring>
        <name>SDL_scalbnf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="621" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="621" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aea6fa73c9125ce7781b16964a12678fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_sin</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_sin</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="622" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="622" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a833d0eb1ac38643cc5e8f71f9231d3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_sinf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_sinf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="623" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="623" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a89a212b3de74f13ce69fd5bea007df86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_sqrt</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_sqrt</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="624" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="624" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aeaa64ed4e3d788ebcb7b7363eb66ff4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_sqrtf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_sqrtf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="625" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="625" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a4d52b941eca596f2f716425c777cb3fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> double <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC double SDLCALL SDL_tan</definition>
        <argsstring>(double x)</argsstring>
        <name>SDL_tan</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="626" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="626" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1afe3ee9cc3fc388193f23d3e5c98197ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> float <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC float SDLCALL SDL_tanf</definition>
        <argsstring>(float x)</argsstring>
        <name>SDL_tanf</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="627" column="31" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="627" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a0ba254663bb7d4b49eaa414d4533c6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" kindref="member">SDL_iconv_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC SDL_iconv_t SDLCALL SDL_iconv_open</definition>
        <argsstring>(const char *tocode, const char *fromcode)</argsstring>
        <name>SDL_iconv_open</name>
        <param>
          <type>const char *</type>
          <declname>tocode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fromcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="637" column="37" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="637" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1a92eeaa95348c308ebd882ca85eccd684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> int <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC int SDLCALL SDL_iconv_close</definition>
        <argsstring>(SDL_iconv_t cd)</argsstring>
        <name>SDL_iconv_close</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" kindref="member">SDL_iconv_t</ref></type>
          <declname>cd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="639" column="29" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="639" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1aeef39b9728425f231fc3e019ffa6c9ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> <ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> <ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC size_t SDLCALL SDL_iconv</definition>
        <argsstring>(SDL_iconv_t cd, const char **inbuf, size_t *inbytesleft, char **outbuf, size_t *outbytesleft)</argsstring>
        <name>SDL_iconv</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" kindref="member">SDL_iconv_t</ref></type>
          <declname>cd</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>inbuf</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> *</type>
          <declname>inbytesleft</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>outbuf</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref> *</type>
          <declname>outbytesleft</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="640" column="32" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="640" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1ad3b4082f19efa5d3bcf71f3f156b43f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref> char *<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref></type>
        <definition>DECLSPEC char *SDLCALL SDL_iconv_string</definition>
        <argsstring>(const char *tocode, const char *fromcode, const char *inbuf, size_t inbytesleft)</argsstring>
        <name>SDL_iconv_string</name>
        <param>
          <type>const char *</type>
          <declname>tocode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fromcode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>inbuf</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>inbytesleft</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts a string between encodings in one pass, returning a string that must be freed with <ref refid="_s_d_l__stdinc_8h_1a0e4ade894d550ada1fa19dc2d46e88b8" kindref="member">SDL_free()</ref> or NULL on error.</para>
<para><simplesect kind="since"><para>This function is available since SDL 2.0.0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="650" column="30" declfile="D:/RayTracing/include/SDL_stdinc.h" declline="650" declcolumn="30"/>
      </memberdef>
      <memberdef kind="function" id="_s_d_l__stdinc_8h_1adc0bad3fa42ea3a629b39272a412842c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="begin__code_8h_1addf1f12c70f89102cc187297860c5961" kindref="member">SDL_FORCE_INLINE</ref> <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
        <definition>SDL_FORCE_INLINE void * SDL_memcpy4</definition>
        <argsstring>(SDL_OUT_BYTECAP(dwords *4) void *dst, SDL_IN_BYTECAP(dwords *4) const void *src, size_t dwords)</argsstring>
        <name>SDL_memcpy4</name>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" kindref="member">SDL_OUT_BYTECAP</ref>(dwords *4) <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__stdinc_8h_1a4a03aca91467efc1051ddb85c02385a2" kindref="member">SDL_IN_BYTECAP</ref>(dwords *4) const <ref refid="_s_d_l__opengles2__gl2ext_8h_1ae5d8fa23ad07c48bb609509eae494c95" kindref="member">void</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="_s_d_l__config_8h_1a7c94ea6f8948649f8d181ae55911eeaf" kindref="member">size_t</ref></type>
          <declname>dwords</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="706" column="23" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="706" bodyend="709"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a3089718d0deba90af8aba1106e9d9eef" prot="public" static="no">
        <name>_SDL_HAS_BUILTIN</name>
        <param><defname>x</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the compiler supports a given builtin. Supported by virtually all clang versions and recent gcc. Use this instead of checking the clang version if possible. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="126" column="10" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a56cfbf2e664506e5f4bb2e05997be8ae" prot="public" static="no">
        <name>SDL_arraysize</name>
        <param><defname>array</defname></param>
        <initializer>(sizeof(<ref refid="_s_d_l__opengl__glext_8h_1a52f38e7d822a46377fde7a02708eedb1" kindref="member">array</ref>)/sizeof(<ref refid="_s_d_l__opengl__glext_8h_1a52f38e7d822a46377fde7a02708eedb1" kindref="member">array</ref>[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The number of elements in an array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="132" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1ac9d76e3a8ba6474d1714f13ca3c9d7e6" prot="public" static="no">
        <name>SDL_TABLESIZE</name>
        <param><defname>table</defname></param>
        <initializer><ref refid="_s_d_l__stdinc_8h_1a56cfbf2e664506e5f4bb2e05997be8ae" kindref="member">SDL_arraysize</ref>(<ref refid="_s_d_l__opengl__glext_8h_1ae45e70612085f6f870e2d650029e5510" kindref="member">table</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="133" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_d_l__stdinc_8h_1a6450d7299f093c95c1bfa8186fa4c866" prot="public" static="no">
        <name>SDL_STRINGIFY_ARG</name>
        <param><defname>arg</defname></param>
        <initializer>#arg</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro useful for building other macros with strings in them</para>
<para>e.g. #define LOG_ERROR(X) OutputDebugString(SDL_STRINGIFY_ARG(<bold>FUNCTION</bold>) &quot;: &quot; X &quot;\n&quot;) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_stdinc.h" line="140" column="9" bodyfile="D:/RayTracing/include/SDL_stdinc.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a general header that includes C language support. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Simple<sp/>DirectMedia<sp/>Layer</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2022<sp/>Sam<sp/>Lantinga<sp/>&lt;slouken@libsdl.org&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_stdinc_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_stdinc_h_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_d_l__config_8h" kindref="compound">SDL_config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_DARWIN_C_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DARWIN_C_SOURCE<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>memset_pattern4()<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYS_TYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_STDIO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STDC_HEADERS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(HAVE_STDLIB_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(HAVE_MALLOC_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(HAVE_STDDEF_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(HAVE_STDARG_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_STRING_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>!defined(STDC_HEADERS)<sp/>&amp;&amp;<sp/>defined(HAVE_MEMORY_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;memory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_STRINGS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;strings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_WCHAR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_INTTYPES_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(HAVE_STDINT_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CTYPE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MATH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__WINRT__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Defining<sp/>_USE_MATH_DEFINES<sp/>is<sp/>required<sp/>to<sp/>get<sp/>M_PI<sp/>to<sp/>be<sp/>defined<sp/>on</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>WinRT.<sp/><sp/>See<sp/>http://msdn.microsoft.com/en-us/library/4hwaceh6.aspx</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>for<sp/>more<sp/>information.</highlight></codeline>
<codeline lineno="87"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_FLOAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_ALLOCA)<sp/>&amp;&amp;<sp/>!defined(alloca)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(HAVE_ALLOCA_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;alloca.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>alloca<sp/>__builtin_alloca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>alloca<sp/>_alloca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__WATCOMC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__BORLANDC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__DMC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__AIX__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>alloca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__MRC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*alloca(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*alloca();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__has_builtin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SDL_HAS_BUILTIN(x)<sp/>__has_builtin(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="_s_d_l__stdinc_8h_1a3089718d0deba90af8aba1106e9d9eef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SDL_HAS_BUILTIN(x)<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="_s_d_l__stdinc_8h_1a56cfbf2e664506e5f4bb2e05997be8ae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_arraysize(array)<sp/><sp/><sp/><sp/>(sizeof(array)/sizeof(array[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="_s_d_l__stdinc_8h_1ac9d76e3a8ba6474d1714f13ca3c9d7e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_TABLESIZE(table)<sp/><sp/><sp/><sp/>SDL_arraysize(table)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="_s_d_l__stdinc_8h_1a6450d7299f093c95c1bfa8186fa4c866" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_STRINGIFY_ARG(arg)<sp/><sp/>#arg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_reinterpret_cast(type,<sp/>expression)<sp/>reinterpret_cast&lt;type&gt;(expression)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_static_cast(type,<sp/>expression)<sp/>static_cast&lt;type&gt;(expression)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_const_cast(type,<sp/>expression)<sp/>const_cast&lt;type&gt;(expression)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="_s_d_l__stdinc_8h_1a9891f68858953b42cbc18e68a441e39d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_reinterpret_cast(type,<sp/>expression)<sp/>((type)(expression))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_static_cast(type,<sp/>expression)<sp/>((type)(expression))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="_s_d_l__stdinc_8h_1aa1364dba66887966247b36f48e19ac62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_const_cast(type,<sp/>expression)<sp/>((type)(expression))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="comment">/*<sp/>Cast<sp/>operators<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>a<sp/>four<sp/>character<sp/>code<sp/>as<sp/>a<sp/>Uint32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="_s_d_l__stdinc_8h_1af482df3379ebfd4c3cfe44e6e0db7628" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_FOURCC(A,<sp/>B,<sp/>C,<sp/>D)<sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((SDL_static_cast(Uint32,<sp/>SDL_static_cast(Uint8,<sp/>(A)))<sp/>&lt;&lt;<sp/>0)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(SDL_static_cast(Uint32,<sp/>SDL_static_cast(Uint8,<sp/>(B)))<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(SDL_static_cast(Uint32,<sp/>SDL_static_cast(Uint8,<sp/>(C)))<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>(SDL_static_cast(Uint32,<sp/>SDL_static_cast(Uint8,<sp/>(D)))<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__CC_ARM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ARM&apos;s<sp/>compiler<sp/>throws<sp/>warnings<sp/>if<sp/>we<sp/>use<sp/>an<sp/>enum:<sp/>like<sp/>&quot;SDL_bool<sp/>x<sp/>=<sp/>a<sp/>&lt;<sp/>b;&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_FALSE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_TRUE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180" refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733ba76e680af86c5508ea4ccd9f969eb1ea2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733ba76e680af86c5508ea4ccd9f969eb1ea2" kindref="member">SDL_FALSE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733ba32efa84cfb0a91b0eee1edf6e941cf74" kindref="member">SDL_TRUE</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="182" refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733ba32efa84cfb0a91b0eee1edf6e941cf74" refkind="member"><highlight class="normal">}<sp/><ref refid="_s_d_l__stdinc_8h_1a8fca68df0f976765230fe589a7c7733b" kindref="member">SDL_bool</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="_s_d_l__stdinc_8h_1a9be4e10b2b4e72a2cce3ad88e9726cb9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAX_SINT8<sp/><sp/><sp/>((Sint8)0x7F)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>127<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="_s_d_l__stdinc_8h_1abfd092b0fd20283ed658d3d8f3071a5f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MIN_SINT8<sp/><sp/><sp/>((Sint8)(~0x7F))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-128<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="_s_d_l__stdinc_8h_1a5fc98623306a32e69eaab63e89e1d138" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__config_8h_1aef44329758059c91c76d334e8fc09700" kindref="member">int8_t</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a5fc98623306a32e69eaab63e89e1d138" kindref="member">Sint8</ref>;</highlight></codeline>
<codeline lineno="194" refid="_s_d_l__stdinc_8h_1af55b32a39296c1b24fce86273f390a47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAX_UINT8<sp/><sp/><sp/>((Uint8)0xFF)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>255<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="_s_d_l__stdinc_8h_1ad65adf0e23d13d1c0506457266aed02c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MIN_UINT8<sp/><sp/><sp/>((Uint8)0x00)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__config_8h_1aba7bc1797add20fe3efdf37ced1182c5" kindref="member">uint8_t</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref>;</highlight></codeline>
<codeline lineno="200" refid="_s_d_l__stdinc_8h_1a3ff206679a193bde4af51987dd9cdbfb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAX_SINT16<sp/><sp/>((Sint16)0x7FFF)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>32767<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="_s_d_l__stdinc_8h_1abbfab63b77bb6390ca2746f854c56096" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MIN_SINT16<sp/><sp/>((Sint16)(~0x7FFF))<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-32768<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__config_8h_1a269259c924dce846340ddbb810db2e3c" kindref="member">int16_t</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref>;</highlight></codeline>
<codeline lineno="206" refid="_s_d_l__stdinc_8h_1a93b34777fdbdd6f60d50788cdd6e2a5b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAX_UINT16<sp/><sp/>((Uint16)0xFFFF)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>65535<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="_s_d_l__stdinc_8h_1aeafdd0f5a8ec4a06405db952e7699028" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MIN_UINT16<sp/><sp/>((Uint16)0x0000)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__config_8h_1a273cf69d639a59973b6019625df33e30" kindref="member">uint16_t</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref>;</highlight></codeline>
<codeline lineno="212" refid="_s_d_l__stdinc_8h_1ace3c96991b704ef4ec9279dea218cf00" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAX_SINT32<sp/><sp/>((Sint32)0x7FFFFFFF)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2147483647<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="_s_d_l__stdinc_8h_1a621ee889cabf822a72f7c288b3403fb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MIN_SINT32<sp/><sp/>((Sint32)(~0x7FFFFFFF))<sp/></highlight><highlight class="comment">/*<sp/>-2147483648<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__config_8h_1ab1967d8591af1a4e48c37fd2b0f184d0" kindref="member">int32_t</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" kindref="member">Sint32</ref>;</highlight></codeline>
<codeline lineno="218" refid="_s_d_l__stdinc_8h_1a1851171ad859663d305344316a73bd22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAX_UINT32<sp/><sp/>((Uint32)0xFFFFFFFFu)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>4294967295<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="_s_d_l__stdinc_8h_1ae57f0b0003bf0776c608f65e1981a95d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MIN_UINT32<sp/><sp/>((Uint32)0x00000000)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__config_8h_1a435d1572bf3f880d55459d9805097f62" kindref="member">uint32_t</ref><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="_s_d_l__stdinc_8h_1a419073146b1419899f722f48690875b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAX_SINT64<sp/><sp/>((Sint64)0x7FFFFFFFFFFFFFFFll)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>9223372036854775807<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="_s_d_l__stdinc_8h_1acfc724558552194368ad6abf50f0e84f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MIN_SINT64<sp/><sp/>((Sint64)(~0x7FFFFFFFFFFFFFFFll))<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-9223372036854775808<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__config_8h_1adec1df1b8b51cb32b77e5b86fff46471" kindref="member">int64_t</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" kindref="member">Sint64</ref>;</highlight></codeline>
<codeline lineno="231" refid="_s_d_l__stdinc_8h_1a794429d194ac2c07e8310fc7bad7d0ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MAX_UINT64<sp/><sp/>((Uint64)0xFFFFFFFFFFFFFFFFull)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>18446744073709551615<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="_s_d_l__stdinc_8h_1a44fa158b8a6074155a050ff4ba5a8292" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_MIN_UINT64<sp/><sp/>((Uint64)(0x0000000000000000ull))<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__config_8h_1aaa5d1cd013383c889537491c3cfd9aad" kindref="member">uint64_t</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" kindref="member">Uint64</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@}<sp/>*/</highlight><highlight class="comment">/*<sp/>Basic<sp/>data<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>we<sp/>have<sp/>macros<sp/>for<sp/>printing<sp/>width-based<sp/>integers.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>&lt;stdint.h&gt;<sp/>should<sp/>define<sp/>these<sp/>but<sp/>this<sp/>is<sp/>not<sp/>true<sp/>all<sp/>platforms.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>(for<sp/>example<sp/>win32)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_PRIs64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIs64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIs64<sp/>PRIs64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__WIN32__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIs64<sp/>&quot;I64d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__LINUX__)<sp/>&amp;&amp;<sp/>defined(__LP64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIs64<sp/>&quot;ld&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="_s_d_l__stdinc_8h_1aae47902b4a68b35b6b5a5733af74e99e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIs64<sp/>&quot;lld&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_PRIu64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIu64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIu64<sp/>PRIu64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__WIN32__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIu64<sp/>&quot;I64u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__LINUX__)<sp/>&amp;&amp;<sp/>defined(__LP64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIu64<sp/>&quot;lu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="_s_d_l__stdinc_8h_1a595c1590a52d953f5c34859ff23b0d5c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIu64<sp/>&quot;llu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_PRIx64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIx64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIx64<sp/>PRIx64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__WIN32__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIx64<sp/>&quot;I64x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__LINUX__)<sp/>&amp;&amp;<sp/>defined(__LP64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIx64<sp/>&quot;lx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="_s_d_l__stdinc_8h_1ada61ee823d794777744d0b190e9cbb1f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIx64<sp/>&quot;llx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_PRIX64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIX64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIX64<sp/>PRIX64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__WIN32__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIX64<sp/>&quot;I64X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__LINUX__)<sp/>&amp;&amp;<sp/>defined(__LP64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIX64<sp/>&quot;lX&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="_s_d_l__stdinc_8h_1a1d0d06015b59be929cbcd44a022ab69c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIX64<sp/>&quot;llX&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_PRIs32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRId32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIs32<sp/>PRId32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="_s_d_l__stdinc_8h_1aff8263002d42c66ef04687cda86bc3d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIs32<sp/>&quot;d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_PRIu32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIu32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIu32<sp/>PRIu32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="_s_d_l__stdinc_8h_1a02a9c84dfccf028f88101476c6cc4a9d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIu32<sp/>&quot;u&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_PRIx32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIx32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIx32<sp/>PRIx32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="_s_d_l__stdinc_8h_1a5a269b805581a775264f7b179d9c33a8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIx32<sp/>&quot;x&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SDL_PRIX32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PRIX32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIX32<sp/>PRIX32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="_s_d_l__stdinc_8h_1ad805fd002d95f66e0f7414d0f0416fe6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRIX32<sp/>&quot;X&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Annotations<sp/>to<sp/>help<sp/>code<sp/>analysis<sp/>tools<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SDL_DISABLE_ANALYZE_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_IN_BYTECAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_INOUT_Z_CAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_Z_CAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_CAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_BYTECAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_Z_BYTECAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRINTF_FORMAT_STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_SCANF_FORMAT_STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRINTF_VARARG_FUNC(<sp/>fmtargnumber<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_SCANF_VARARG_FUNC(<sp/>fmtargnumber<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>(_MSC_VER<sp/>&gt;=<sp/>1600)<sp/></highlight><highlight class="comment">/*<sp/>VS<sp/>2010<sp/>and<sp/>above<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_IN_BYTECAP(x)<sp/>_In_bytecount_(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_INOUT_Z_CAP(x)<sp/>_Inout_z_cap_(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_Z_CAP(x)<sp/>_Out_z_cap_(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_CAP(x)<sp/>_Out_cap_(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_BYTECAP(x)<sp/>_Out_bytecap_(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_Z_BYTECAP(x)<sp/>_Out_z_bytecap_(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRINTF_FORMAT_STRING<sp/>_Printf_format_string_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_SCANF_FORMAT_STRING<sp/>_Scanf_format_string_impl_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="_s_d_l__stdinc_8h_1a4a03aca91467efc1051ddb85c02385a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_IN_BYTECAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="_s_d_l__stdinc_8h_1a7c8c45cf712b53863edc008aa96f24b6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_INOUT_Z_CAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_Z_CAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="_s_d_l__stdinc_8h_1a56add5577e642481fff247b14376b2de" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_CAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_BYTECAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="_s_d_l__stdinc_8h_1acf3bc9681b799ba3d31c03e9a548496d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_OUT_Z_BYTECAP(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="_s_d_l__stdinc_8h_1ab13a729d2e3e2d1e1b3b2dc0bfb858eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRINTF_FORMAT_STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="_s_d_l__stdinc_8h_1a724eb3fcc488692f106d393193501514" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_SCANF_FORMAT_STRING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRINTF_VARARG_FUNC(<sp/>fmtargnumber<sp/>)<sp/>__attribute__<sp/>((<sp/>format(<sp/>__printf__,<sp/>fmtargnumber,<sp/>fmtargnumber+1<sp/>)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_SCANF_VARARG_FUNC(<sp/>fmtargnumber<sp/>)<sp/>__attribute__<sp/>((<sp/>format(<sp/>__scanf__,<sp/>fmtargnumber,<sp/>fmtargnumber+1<sp/>)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="_s_d_l__stdinc_8h_1ab974676e45d9edeef6598d601d4fdd6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_PRINTF_VARARG_FUNC(<sp/>fmtargnumber<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="_s_d_l__stdinc_8h_1acd540fbbc717339e1267b0a884baa66d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_SCANF_VARARG_FUNC(<sp/>fmtargnumber<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_DISABLE_ANALYZE_MACROS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_COMPILE_TIME_ASSERT(name,<sp/>x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>int<sp/>SDL_compile_time_assert_<sp/>##<sp/>name[(x)<sp/>*<sp/>2<sp/>-<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_IGNORE_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(uint8,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_d_l__stdinc_8h_1a2944638813a090aa23e62f4da842c3e2" kindref="member">Uint8</ref>)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(sint8,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_d_l__stdinc_8h_1a5fc98623306a32e69eaab63e89e1d138" kindref="member">Sint8</ref>)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(uint16,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_d_l__stdinc_8h_1a31fcc0a076c9068668173ee26d33e42b" kindref="member">Uint16</ref>)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(sint16,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_d_l__stdinc_8h_1a9d0257032c0e146ab6121bf0122712f5" kindref="member">Sint16</ref>)<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(uint32,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>)<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(sint32,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_d_l__stdinc_8h_1a7a90b941db9d4582e9ad7abb9940ff7e" kindref="member">Sint32</ref>)<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(uint64,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" kindref="member">Uint64</ref>)<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(sint64,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" kindref="member">Sint64</ref>)<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DOXYGEN_SHOULD_IGNORE_THIS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>make<sp/>sure<sp/>enums<sp/>are<sp/>the<sp/>size<sp/>of<sp/>ints,<sp/>for<sp/>structure<sp/>packing.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>For<sp/>both<sp/>Watcom<sp/>C/C++<sp/>and<sp/>Borland<sp/>C/C++<sp/>the<sp/>compiler<sp/>option<sp/>that<sp/>makes</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/>enums<sp/>having<sp/>the<sp/>size<sp/>of<sp/>an<sp/>int<sp/>must<sp/>be<sp/>enabled.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/>This<sp/>is<sp/>&quot;-b&quot;<sp/>for<sp/>Borland<sp/>C/C++<sp/>and<sp/>&quot;-ei&quot;<sp/>for<sp/>Watcom<sp/>C/C++<sp/>(v11).</highlight></codeline>
<codeline lineno="376"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_IGNORE_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__ANDROID__)<sp/>&amp;&amp;<sp/>!defined(__VITA__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>include/SDL_stdinc.h:174:<sp/>error:<sp/>size<sp/>of<sp/>array<sp/>&apos;SDL_dummy_enum&apos;<sp/>is<sp/>negative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>DUMMY_ENUM_VALUE</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}<sp/>SDL_DUMMY_ENUM;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="_s_d_l__stdinc_8h_1aba1f23ae531b67b0455a2e254bdad09b" kindref="member">SDL_COMPILE_TIME_ASSERT</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SDL_DUMMY_ENUM)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DOXYGEN_SHOULD_IGNORE_THIS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="begin__code_8h" kindref="compound">begin_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>for<sp/>C<sp/>function<sp/>definitions,<sp/>even<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ALLOCA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_stack_alloc(type,<sp/>count)<sp/><sp/><sp/><sp/>(type*)alloca(sizeof(type)*(count))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_stack_free(data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="_s_d_l__stdinc_8h_1a6c6778dd1ee11d2edce116271c822fbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_stack_alloc(type,<sp/>count)<sp/><sp/><sp/><sp/>(type*)SDL_malloc(sizeof(type)*(count))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="_s_d_l__stdinc_8h_1aca62cdb628b52c2f1f2a3004ddf721ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_stack_free(data)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_free(data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="_s_d_l__stdinc_8h_1a18324113df54556a3d72049b72615a49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a18324113df54556a3d72049b72615a49" kindref="member">SDL_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="407" refid="_s_d_l__stdinc_8h_1a992b08a30e37eb465de30d6d6f59e349" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a992b08a30e37eb465de30d6d6f59e349" kindref="member">SDL_calloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="408" refid="_s_d_l__stdinc_8h_1ac7864eb853658f50d6179a264f087c24" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ac7864eb853658f50d6179a264f087c24" kindref="member">SDL_realloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="409" refid="_s_d_l__stdinc_8h_1a0e4ade894d550ada1fa19dc2d46e88b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a0e4ade894d550ada1fa19dc2d46e88b8" kindref="member">SDL_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="_s_d_l__stdinc_8h_1a6cc0f44a83a9b9a152274968ad51a3fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/>*<ref refid="_s_d_l__stdinc_8h_1a6cc0f44a83a9b9a152274968ad51a3fa" kindref="member">SDL_malloc_func</ref>)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="412" refid="_s_d_l__stdinc_8h_1a3eefe7476901ae3fcc2f4fd9da2d1592" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/>*<ref refid="_s_d_l__stdinc_8h_1a3eefe7476901ae3fcc2f4fd9da2d1592" kindref="member">SDL_calloc_func</ref>)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="413" refid="_s_d_l__stdinc_8h_1a54352256db255d5625108aea19120f36" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/>*<ref refid="_s_d_l__stdinc_8h_1a54352256db255d5625108aea19120f36" kindref="member">SDL_realloc_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="414" refid="_s_d_l__stdinc_8h_1a38b6aadadc8fa09f817ebbd0567b99fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__audio_8h_1aa5cb90967788ada2711894ca158ece01" kindref="member">void</ref><sp/>(<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/>*<ref refid="_s_d_l__stdinc_8h_1a38b6aadadc8fa09f817ebbd0567b99fb" kindref="member">SDL_free_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mem);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="_s_d_l__stdinc_8h_1a91cba8a23ba5cae032f1def42a2add99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a91cba8a23ba5cae032f1def42a2add99" kindref="member">SDL_GetMemoryFunctions</ref>(<ref refid="_s_d_l__stdinc_8h_1a6cc0f44a83a9b9a152274968ad51a3fa" kindref="member">SDL_malloc_func</ref><sp/>*malloc_func,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a3eefe7476901ae3fcc2f4fd9da2d1592" kindref="member">SDL_calloc_func</ref><sp/>*calloc_func,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a54352256db255d5625108aea19120f36" kindref="member">SDL_realloc_func</ref><sp/>*realloc_func,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a38b6aadadc8fa09f817ebbd0567b99fb" kindref="member">SDL_free_func</ref><sp/>*free_func);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="_s_d_l__stdinc_8h_1ad846ee206051a2aebd439c66cd907f9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ad846ee206051a2aebd439c66cd907f9a" kindref="member">SDL_SetMemoryFunctions</ref>(<ref refid="_s_d_l__stdinc_8h_1a6cc0f44a83a9b9a152274968ad51a3fa" kindref="member">SDL_malloc_func</ref><sp/>malloc_func,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a3eefe7476901ae3fcc2f4fd9da2d1592" kindref="member">SDL_calloc_func</ref><sp/>calloc_func,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a54352256db255d5625108aea19120f36" kindref="member">SDL_realloc_func</ref><sp/>realloc_func,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1a38b6aadadc8fa09f817ebbd0567b99fb" kindref="member">SDL_free_func</ref><sp/>free_func);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="_s_d_l__stdinc_8h_1a853b94eb0e35bf92556807e23d445bc0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a853b94eb0e35bf92556807e23d445bc0" kindref="member">SDL_GetNumAllocations</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="_s_d_l__stdinc_8h_1a38d80496c7c3bfefb2634b3b038514c4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a38d80496c7c3bfefb2634b3b038514c4" kindref="member">SDL_getenv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="444" refid="_s_d_l__stdinc_8h_1a82561dde7eb250ecb6fcbd3e3786d8b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a82561dde7eb250ecb6fcbd3e3786d8b9" kindref="member">SDL_setenv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1aaced7cfc21e7d37775d6921bb8177239" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overwrite);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="_s_d_l__stdinc_8h_1ae4e475d53a51a90992745186a20d1f01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ae4e475d53a51a90992745186a20d1f01" kindref="member">SDL_qsort</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*base,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*compare)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="_s_d_l__stdinc_8h_1abc2986a4608bc9fd73df173d7619c096" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1abc2986a4608bc9fd73df173d7619c096" kindref="member">SDL_abs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>these<sp/>double-evaluate<sp/>their<sp/>arguments,<sp/>so<sp/>you<sp/>should<sp/>never<sp/>have<sp/>side<sp/>effects<sp/>in<sp/>the<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="_s_d_l__stdinc_8h_1ad93f0b2393a3aa89f9ce24ac2642744e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_min(x,<sp/>y)<sp/>(((x)<sp/>&lt;<sp/>(y))<sp/>?<sp/>(x)<sp/>:<sp/>(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="_s_d_l__stdinc_8h_1ae3ab6e7584a16c7217ca0a4622212b61" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_max(x,<sp/>y)<sp/>(((x)<sp/>&gt;<sp/>(y))<sp/>?<sp/>(x)<sp/>:<sp/>(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="_s_d_l__stdinc_8h_1a0ab777838788966e7c70bb7df4fe60a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_clamp(x,<sp/>a,<sp/>b)<sp/>(((x)<sp/>&lt;<sp/>(a))<sp/>?<sp/>(a)<sp/>:<sp/>(((x)<sp/>&gt;<sp/>(b))<sp/>?<sp/>(b)<sp/>:<sp/>(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="_s_d_l__stdinc_8h_1a4f75af3d4d39b627ddc022c8ce61fba9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a4f75af3d4d39b627ddc022c8ce61fba9" kindref="member">SDL_isalpha</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="456" refid="_s_d_l__stdinc_8h_1a5c1cb8c02d932fa9bf5f3b694ace7da4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a5c1cb8c02d932fa9bf5f3b694ace7da4" kindref="member">SDL_isalnum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="457" refid="_s_d_l__stdinc_8h_1ad37f07937f3576aa3fa6e3e3874eb11c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ad37f07937f3576aa3fa6e3e3874eb11c" kindref="member">SDL_isblank</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="458" refid="_s_d_l__stdinc_8h_1af4efbd1fe6f0a088d61e2240bd7a6039" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1af4efbd1fe6f0a088d61e2240bd7a6039" kindref="member">SDL_iscntrl</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="459" refid="_s_d_l__stdinc_8h_1a3e2b095edf06856900b16babe77809cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a3e2b095edf06856900b16babe77809cf" kindref="member">SDL_isdigit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="460" refid="_s_d_l__stdinc_8h_1a7ea87924897c2645016630155ee1c81b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a7ea87924897c2645016630155ee1c81b" kindref="member">SDL_isxdigit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="461" refid="_s_d_l__stdinc_8h_1a21ca32924f94078d4901d41f63356a49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a21ca32924f94078d4901d41f63356a49" kindref="member">SDL_ispunct</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="462" refid="_s_d_l__stdinc_8h_1a345ef079d2b47f9cda08d383dde1ec65" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a345ef079d2b47f9cda08d383dde1ec65" kindref="member">SDL_isspace</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="463" refid="_s_d_l__stdinc_8h_1a072cc40c790442b511b689a6429e12af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a072cc40c790442b511b689a6429e12af" kindref="member">SDL_isupper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="464" refid="_s_d_l__stdinc_8h_1addcc681a35613819350530840d2946de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1addcc681a35613819350530840d2946de" kindref="member">SDL_islower</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="465" refid="_s_d_l__stdinc_8h_1ac38b553bf3bf3719f96a1d80016d0af8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ac38b553bf3bf3719f96a1d80016d0af8" kindref="member">SDL_isprint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="466" refid="_s_d_l__stdinc_8h_1a81b295ab98aca63dfd55b025ce3cee84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a81b295ab98aca63dfd55b025ce3cee84" kindref="member">SDL_isgraph</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="467" refid="_s_d_l__stdinc_8h_1a91fcc07ab87653a6c92ae1288c20a606" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a91fcc07ab87653a6c92ae1288c20a606" kindref="member">SDL_toupper</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="468" refid="_s_d_l__stdinc_8h_1af18a897c83986540d4caf4573775f199" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1af18a897c83986540d4caf4573775f199" kindref="member">SDL_tolower</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="_s_d_l__stdinc_8h_1aad3433287a9ce5aafad039f4d064c3bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aad3433287a9ce5aafad039f4d064c3bd" kindref="member">SDL_crc32</ref>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/>crc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl_8h_1a2e335d56e2846b0fea47eed068b2d34a" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="_s_d_l__stdinc_8h_1ae175db0d44cd740e2fa1072b71e5f1a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ae175db0d44cd740e2fa1072b71e5f1a4" kindref="member">SDL_memset</ref>(<ref refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" kindref="member">SDL_OUT_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>)<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73" kindref="member">c</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="_s_d_l__stdinc_8h_1a16b9e31a9558e1cbc9e417b0f35a7b8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_zero(x)<sp/>SDL_memset(&amp;(x),<sp/>0,<sp/>sizeof((x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="_s_d_l__stdinc_8h_1a995406d407faf4cfa1ca9dd904672ab6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_zerop(x)<sp/>SDL_memset((x),<sp/>0,<sp/>sizeof(*(x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="_s_d_l__stdinc_8h_1a1edc08d14c13f587b33d9e482035e3af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_zeroa(x)<sp/>SDL_memset((x),<sp/>0,<sp/>sizeof((x)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>memset()<sp/>is<sp/>a<sp/>byte<sp/>assignment<sp/>and<sp/>this<sp/>is<sp/>a<sp/>32-bit<sp/>assignment,<sp/>so<sp/>they&apos;re<sp/>not<sp/>directly<sp/>equivalent.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="_s_d_l__stdinc_8h_1a0f1cd3e844f8fac8e26ca1e2c2101956" refkind="member"><highlight class="normal"><ref refid="begin__code_8h_1addf1f12c70f89102cc187297860c5961" kindref="member">SDL_FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a0f1cd3e844f8fac8e26ca1e2c2101956" kindref="member">SDL_memset4</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a26942fd2ed566ef553eae82d2c109c8f" kindref="member">val</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dwords)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>memset_pattern4(<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/>&amp;<ref refid="_s_d_l__opengl__glext_8h_1a26942fd2ed566ef553eae82d2c109c8f" kindref="member">val</ref>,<sp/>dwords<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>defined(__i386__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u0,<sp/><ref refid="_s_d_l__opengl__glext_8h_1ab296853c9d55bfdc62cda6c50d1b4781" kindref="member">u1</ref>,<sp/><ref refid="_s_d_l__opengl__glext_8h_1a1c6bf6fa786a04b729b30e56d68474ef" kindref="member">u2</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cld<sp/>\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rep<sp/>;<sp/>stosl<sp/>\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=&amp;D&quot;</highlight><highlight class="normal"><sp/>(u0),<sp/></highlight><highlight class="stringliteral">&quot;=&amp;a&quot;</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__opengl__glext_8h_1ab296853c9d55bfdc62cda6c50d1b4781" kindref="member">u1</ref>),<sp/></highlight><highlight class="stringliteral">&quot;=&amp;c&quot;</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a1c6bf6fa786a04b729b30e56d68474ef" kindref="member">u2</ref>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>),<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a26942fd2ed566ef553eae82d2c109c8f" kindref="member">val</ref>),<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal"><sp/>(<ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref>,<sp/>dwords))</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;memory&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_n<sp/>=<sp/>(dwords<sp/>+<sp/>3)<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/>*_p<sp/>=<sp/><ref refid="_s_d_l__stdinc_8h_1a774ea048cf20bd5f86f31da56d2937ff" kindref="member">SDL_static_cast</ref>(<ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/>*,<sp/><ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_d_l__stdinc_8h_1add440eff171ea5f55cb00c4a9ab8672d" kindref="member">Uint32</ref><sp/>_val<sp/>=<sp/>(<ref refid="_s_d_l__opengl__glext_8h_1a26942fd2ed566ef553eae82d2c109c8f" kindref="member">val</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dwords<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dwords<sp/>%<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/>*_p++<sp/>=<sp/>_val;<sp/><sp/><sp/><ref refid="begin__code_8h_1a9bbeece5949f076e5130a4dda2a7ede5" kindref="member">SDL_FALLTHROUGH</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_p++<sp/>=<sp/>_val;<sp/><sp/><sp/><ref refid="begin__code_8h_1a9bbeece5949f076e5130a4dda2a7ede5" kindref="member">SDL_FALLTHROUGH</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_p++<sp/>=<sp/>_val;<sp/><sp/><sp/><ref refid="begin__code_8h_1a9bbeece5949f076e5130a4dda2a7ede5" kindref="member">SDL_FALLTHROUGH</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*_p++<sp/>=<sp/>_val;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>--_n<sp/>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="_s_d_l__stdinc_8h_1a627cbec2fd30f1bfc7ccae4c4e4d4b12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a627cbec2fd30f1bfc7ccae4c4e4d4b12" kindref="member">SDL_memcpy</ref>(<ref refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" kindref="member">SDL_OUT_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>)<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/><ref refid="_s_d_l__stdinc_8h_1a4a03aca91467efc1051ddb85c02385a2" kindref="member">SDL_IN_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="_s_d_l__stdinc_8h_1a00f4124a79e4fc79d1aa4c12df3e8a07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a00f4124a79e4fc79d1aa4c12df3e8a07" kindref="member">SDL_memmove</ref>(<ref refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" kindref="member">SDL_OUT_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>)<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/><ref refid="_s_d_l__stdinc_8h_1a4a03aca91467efc1051ddb85c02385a2" kindref="member">SDL_IN_BYTECAP</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="512" refid="_s_d_l__stdinc_8h_1af8e26df545c29284291714410fa7731e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1af8e26df545c29284291714410fa7731e" kindref="member">SDL_memcmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*s2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="_s_d_l__stdinc_8h_1afddee3f5be8611a2956f21ea899ea6f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1afddee3f5be8611a2956f21ea899ea6f1" kindref="member">SDL_wcslen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*wstr);</highlight></codeline>
<codeline lineno="515" refid="_s_d_l__stdinc_8h_1a611742b034af091bbf678150ede27a0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a611742b034af091bbf678150ede27a0f" kindref="member">SDL_wcslcpy</ref>(<ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(maxlen)<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen);</highlight></codeline>
<codeline lineno="516" refid="_s_d_l__stdinc_8h_1a9f29935903b98e66f3d69b336f741712" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a9f29935903b98e66f3d69b336f741712" kindref="member">SDL_wcslcat</ref>(<ref refid="_s_d_l__stdinc_8h_1a7c8c45cf712b53863edc008aa96f24b6" kindref="member">SDL_INOUT_Z_CAP</ref>(maxlen)<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen);</highlight></codeline>
<codeline lineno="517" refid="_s_d_l__stdinc_8h_1a247f3e70927a6dd8306547e25487d86d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a247f3e70927a6dd8306547e25487d86d" kindref="member">SDL_wcsdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*wstr);</highlight></codeline>
<codeline lineno="518" refid="_s_d_l__stdinc_8h_1ab5d68da106d85967ea11af55f884ebcc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ab5d68da106d85967ea11af55f884ebcc" kindref="member">SDL_wcsstr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*haystack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*needle);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="_s_d_l__stdinc_8h_1a42d3b826f86fc016f76c01dbdf96bce9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a42d3b826f86fc016f76c01dbdf96bce9" kindref="member">SDL_wcscmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str2);</highlight></codeline>
<codeline lineno="521" refid="_s_d_l__stdinc_8h_1a215fcb7541fa8d2fd8d179160c752ede" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a215fcb7541fa8d2fd8d179160c752ede" kindref="member">SDL_wcsncmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen);</highlight></codeline>
<codeline lineno="522" refid="_s_d_l__stdinc_8h_1af4d3e5b558c9d819d6628abaa4412af6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1af4d3e5b558c9d819d6628abaa4412af6" kindref="member">SDL_wcscasecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str2);</highlight></codeline>
<codeline lineno="523" refid="_s_d_l__stdinc_8h_1ad9530d5e06c34dc152a52f209f327f32" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ad9530d5e06c34dc152a52f209f327f32" kindref="member">SDL_wcsncasecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="_s_d_l__stdinc_8h_1ac06c288c339beeecb6f32e5d2a9471c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ac06c288c339beeecb6f32e5d2a9471c0" kindref="member">SDL_strlen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="526" refid="_s_d_l__stdinc_8h_1ac362d85898cfb51e06e33399a7d3fd03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ac362d85898cfb51e06e33399a7d3fd03" kindref="member">SDL_strlcpy</ref>(<ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(maxlen)<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen);</highlight></codeline>
<codeline lineno="527" refid="_s_d_l__stdinc_8h_1a78f061725fa314e775a3978b916a5daa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a78f061725fa314e775a3978b916a5daa" kindref="member">SDL_utf8strlcpy</ref>(<ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(dst_bytes)<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dst_bytes);</highlight></codeline>
<codeline lineno="528" refid="_s_d_l__stdinc_8h_1a50d15493c8921df9a8c2c233703429c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a50d15493c8921df9a8c2c233703429c8" kindref="member">SDL_strlcat</ref>(<ref refid="_s_d_l__stdinc_8h_1a7c8c45cf712b53863edc008aa96f24b6" kindref="member">SDL_INOUT_Z_CAP</ref>(maxlen)<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen);</highlight></codeline>
<codeline lineno="529" refid="_s_d_l__stdinc_8h_1a4b0dde72d9c2a020c9e6405ca080e81b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a4b0dde72d9c2a020c9e6405ca080e81b" kindref="member">SDL_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="530" refid="_s_d_l__stdinc_8h_1adab03841a0dcf11f95a75c5cb17b5d3c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1adab03841a0dcf11f95a75c5cb17b5d3c" kindref="member">SDL_strrev</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="531" refid="_s_d_l__stdinc_8h_1a9c2b7f65e349e0c08047f333f79b4114" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a9c2b7f65e349e0c08047f333f79b4114" kindref="member">SDL_strupr</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="532" refid="_s_d_l__stdinc_8h_1a4918c9af266607b61b7c31c129a45c67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a4918c9af266607b61b7c31c129a45c67" kindref="member">SDL_strlwr</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="533" refid="_s_d_l__stdinc_8h_1a27a3d8808549daee7eb2b6a67d96d928" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a27a3d8808549daee7eb2b6a67d96d928" kindref="member">SDL_strchr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="534" refid="_s_d_l__stdinc_8h_1a32ef5d635ca8305dce08ec46d66c1a67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a32ef5d635ca8305dce08ec46d66c1a67" kindref="member">SDL_strrchr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a1f2d7f8147412c43ba2303a56f97ee73" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="535" refid="_s_d_l__stdinc_8h_1a39036c682ddb0c0ceff78782a8b7d3b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a39036c682ddb0c0ceff78782a8b7d3b0" kindref="member">SDL_strstr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*haystack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*needle);</highlight></codeline>
<codeline lineno="536" refid="_s_d_l__stdinc_8h_1af780d689988808aefb92b88920e2ff91" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1af780d689988808aefb92b88920e2ff91" kindref="member">SDL_strtokr</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a4ed25fb4dc5bf1a768a78d2e2f0ca003" kindref="member">s1</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**saveptr);</highlight></codeline>
<codeline lineno="537" refid="_s_d_l__stdinc_8h_1a8f0319c8cf55baa072e5caf1dc228286" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8f0319c8cf55baa072e5caf1dc228286" kindref="member">SDL_utf8strlen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="_s_d_l__stdinc_8h_1af533f5144ccdb6287b076c12d2e925af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1af533f5144ccdb6287b076c12d2e925af" kindref="member">SDL_itoa</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radix);</highlight></codeline>
<codeline lineno="540" refid="_s_d_l__stdinc_8h_1a016d6b88a308688df4393aca3aca1e9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a016d6b88a308688df4393aca3aca1e9a" kindref="member">SDL_uitoa</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radix);</highlight></codeline>
<codeline lineno="541" refid="_s_d_l__stdinc_8h_1a699d7eef3ecd841bf4bd778da9da1046" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a699d7eef3ecd841bf4bd778da9da1046" kindref="member">SDL_ltoa</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radix);</highlight></codeline>
<codeline lineno="542" refid="_s_d_l__stdinc_8h_1af09800798781e90beaa02f2c14df7347" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1af09800798781e90beaa02f2c14df7347" kindref="member">SDL_ultoa</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radix);</highlight></codeline>
<codeline lineno="543" refid="_s_d_l__stdinc_8h_1a128dee711ea087b35466f1353a26ecea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a128dee711ea087b35466f1353a26ecea" kindref="member">SDL_lltoa</ref>(<ref refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" kindref="member">Sint64</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radix);</highlight></codeline>
<codeline lineno="544" refid="_s_d_l__stdinc_8h_1a7d4157d5ea4b08719e6b8a6baf5f5418" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a7d4157d5ea4b08719e6b8a6baf5f5418" kindref="member">SDL_ulltoa</ref>(<ref refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" kindref="member">Uint64</ref><sp/><ref refid="_s_d_l__opengl__glext_8h_1a8ad81492d410ff2ac11f754f4042150f" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>radix);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="_s_d_l__stdinc_8h_1a693141d8cd82c97ba5cb0f4bc42c96ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a693141d8cd82c97ba5cb0f4bc42c96ae" kindref="member">SDL_atoi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="547" refid="_s_d_l__stdinc_8h_1a7f36805f126b5712ab14d4b1da721a2b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a7f36805f126b5712ab14d4b1da721a2b" kindref="member">SDL_atof</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="548" refid="_s_d_l__stdinc_8h_1aa0674ed6bcaf8a0889dbbee89f4ac19c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aa0674ed6bcaf8a0889dbbee89f4ac19c" kindref="member">SDL_strtol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="549" refid="_s_d_l__stdinc_8h_1a2b92ab8170e4df3252013d903b9d4051" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a2b92ab8170e4df3252013d903b9d4051" kindref="member">SDL_strtoul</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="550" refid="_s_d_l__stdinc_8h_1a4ebd07268af4cf8efe05f1eb28d9ba98" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a2c1a61d5c466bb74680be0a8cc1b455d" kindref="member">Sint64</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a4ebd07268af4cf8efe05f1eb28d9ba98" kindref="member">SDL_strtoll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="551" refid="_s_d_l__stdinc_8h_1aa893ab27b0d874a0d1eea7025937c006" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ac006cf2bd55a42a9cc8ae9f123aa7e13" kindref="member">Uint64</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aa893ab27b0d874a0d1eea7025937c006" kindref="member">SDL_strtoull</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="552" refid="_s_d_l__stdinc_8h_1aebf098dbc1451c320b48e1760d090db9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aebf098dbc1451c320b48e1760d090db9" kindref="member">SDL_strtod</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endp);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="_s_d_l__stdinc_8h_1a37e18b9103f755d03cf4b0aedeb39fb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a37e18b9103f755d03cf4b0aedeb39fb8" kindref="member">SDL_strcmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2);</highlight></codeline>
<codeline lineno="555" refid="_s_d_l__stdinc_8h_1a21287cfa7609bbc3d46ea10b20234389" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a21287cfa7609bbc3d46ea10b20234389" kindref="member">SDL_strncmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen);</highlight></codeline>
<codeline lineno="556" refid="_s_d_l__stdinc_8h_1a1de324579fee4225e390df0a7b485d17" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a1de324579fee4225e390df0a7b485d17" kindref="member">SDL_strcasecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2);</highlight></codeline>
<codeline lineno="557" refid="_s_d_l__stdinc_8h_1a51b84fa76ad53e7c3b17892d9982c526" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a51b84fa76ad53e7c3b17892d9982c526" kindref="member">SDL_strncasecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="_s_d_l__stdinc_8h_1a7b721b0e22698c8eb6efc5341003b582" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a7b721b0e22698c8eb6efc5341003b582" kindref="member">SDL_sscanf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/><ref refid="_s_d_l__stdinc_8h_1a724eb3fcc488692f106d393193501514" kindref="member">SDL_SCANF_FORMAT_STRING</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)<sp/><ref refid="_s_d_l__stdinc_8h_1acd540fbbc717339e1267b0a884baa66d" kindref="member">SDL_SCANF_VARARG_FUNC</ref>(2);</highlight></codeline>
<codeline lineno="560" refid="_s_d_l__stdinc_8h_1aec25dc54f0de98ea8d970552f38d6365" refkind="member"><highlight class="normal">extern<sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aec25dc54f0de98ea8d970552f38d6365" kindref="member">SDL_vsscanf</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>ap);</highlight></codeline>
<codeline lineno="561" refid="_s_d_l__stdinc_8h_1adcf2cbf4b55834f5727664425f80e6b5" refkind="member"><highlight class="normal">extern<sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1adcf2cbf4b55834f5727664425f80e6b5" kindref="member">SDL_snprintf</ref>(<ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(maxlen)<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen,<sp/><ref refid="_s_d_l__stdinc_8h_1ab13a729d2e3e2d1e1b3b2dc0bfb858eb" kindref="member">SDL_PRINTF_FORMAT_STRING</ref><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...<sp/>)<sp/><ref refid="_s_d_l__stdinc_8h_1ab974676e45d9edeef6598d601d4fdd6a" kindref="member">SDL_PRINTF_VARARG_FUNC</ref>(3);</highlight></codeline>
<codeline lineno="562" refid="_s_d_l__stdinc_8h_1ae9acdeeb54ccbab3bb53280052541bdd" refkind="member"><highlight class="normal">extern<sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ae9acdeeb54ccbab3bb53280052541bdd" kindref="member">SDL_vsnprintf</ref>(<ref refid="_s_d_l__stdinc_8h_1af908e59c33d8212a2785d160ef322fb1" kindref="member">SDL_OUT_Z_CAP</ref>(maxlen)<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxlen,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>ap);</highlight></codeline>
<codeline lineno="563" refid="_s_d_l__stdinc_8h_1ae0f4ba2f23bda0b6928357130bb2daff" refkind="member"><highlight class="normal">extern<sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ae0f4ba2f23bda0b6928357130bb2daff" kindref="member">SDL_asprintf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**strp,<sp/><ref refid="_s_d_l__stdinc_8h_1ab13a729d2e3e2d1e1b3b2dc0bfb858eb" kindref="member">SDL_PRINTF_FORMAT_STRING</ref><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)<sp/><ref refid="_s_d_l__stdinc_8h_1ab974676e45d9edeef6598d601d4fdd6a" kindref="member">SDL_PRINTF_VARARG_FUNC</ref>(2);</highlight></codeline>
<codeline lineno="564" refid="_s_d_l__stdinc_8h_1a8546e843a34f05e1fbcbe0d92762d7ad" refkind="member"><highlight class="normal">extern<sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8546e843a34f05e1fbcbe0d92762d7ad" kindref="member">SDL_vasprintf</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**strp,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>ap);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="_s_d_l__stdinc_8h_1ae71449b1cc6e6250b91f539153a7a0d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/><sp/><sp/><sp/>3.14159265358979323846264338327950288<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="_s_d_l__stdinc_8h_1aad4335bccd2da5d4cbc56227a00c5e6a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aad4335bccd2da5d4cbc56227a00c5e6a" kindref="member">SDL_acos</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="587" refid="_s_d_l__stdinc_8h_1a8df77f77cde849ce6507467289f9161e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a8df77f77cde849ce6507467289f9161e" kindref="member">SDL_acosf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="588" refid="_s_d_l__stdinc_8h_1a1d20f8c07517e3edff66a483df394a4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a1d20f8c07517e3edff66a483df394a4e" kindref="member">SDL_asin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="589" refid="_s_d_l__stdinc_8h_1a3a8db8cf7e449bb3d7f055ba02f5dbc5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a3a8db8cf7e449bb3d7f055ba02f5dbc5" kindref="member">SDL_asinf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="590" refid="_s_d_l__stdinc_8h_1af8123e938b403f372e38c9dcf0d532f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1af8123e938b403f372e38c9dcf0d532f1" kindref="member">SDL_atan</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="591" refid="_s_d_l__stdinc_8h_1aacaab6901a2c37914157d5b000be9e4b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aacaab6901a2c37914157d5b000be9e4b" kindref="member">SDL_atanf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="592" refid="_s_d_l__stdinc_8h_1a58e02d9393a57c2c2659fff9ae112d1a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a58e02d9393a57c2c2659fff9ae112d1a" kindref="member">SDL_atan2</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="593" refid="_s_d_l__stdinc_8h_1a2e5048dc7ba12c1938c9d2cf1995eb69" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a2e5048dc7ba12c1938c9d2cf1995eb69" kindref="member">SDL_atan2f</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="594" refid="_s_d_l__stdinc_8h_1a936588a2d12ce83c915d9a2441653370" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a936588a2d12ce83c915d9a2441653370" kindref="member">SDL_ceil</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="595" refid="_s_d_l__stdinc_8h_1ad6faeefa315255bc0df3ac8ca93691c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ad6faeefa315255bc0df3ac8ca93691c1" kindref="member">SDL_ceilf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="596" refid="_s_d_l__stdinc_8h_1a4171a3b97ac5cde52618cedd490be481" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a4171a3b97ac5cde52618cedd490be481" kindref="member">SDL_copysign</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="597" refid="_s_d_l__stdinc_8h_1a0e4028f1feef8764524f99950bb2f75f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a0e4028f1feef8764524f99950bb2f75f" kindref="member">SDL_copysignf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="598" refid="_s_d_l__stdinc_8h_1a188dec0f0bc8eabb58181656eaf41fd7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a188dec0f0bc8eabb58181656eaf41fd7" kindref="member">SDL_cos</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="599" refid="_s_d_l__stdinc_8h_1a531f6b784d47ec6719c71e578bccc88d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a531f6b784d47ec6719c71e578bccc88d" kindref="member">SDL_cosf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="600" refid="_s_d_l__stdinc_8h_1a79c55f7a1211b69d10dcfec65edfdb31" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a79c55f7a1211b69d10dcfec65edfdb31" kindref="member">SDL_exp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="601" refid="_s_d_l__stdinc_8h_1a33e13d60f771d8bf8659bebc5b1150b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a33e13d60f771d8bf8659bebc5b1150b3" kindref="member">SDL_expf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="602" refid="_s_d_l__stdinc_8h_1ab3c294fac683198ba196e072bb181f02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ab3c294fac683198ba196e072bb181f02" kindref="member">SDL_fabs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="603" refid="_s_d_l__stdinc_8h_1a88bc179b571e1b81ef939918b853e85b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a88bc179b571e1b81ef939918b853e85b" kindref="member">SDL_fabsf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="604" refid="_s_d_l__stdinc_8h_1aef4788340ec0d94db83efa78a985a633" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aef4788340ec0d94db83efa78a985a633" kindref="member">SDL_floor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="605" refid="_s_d_l__stdinc_8h_1a7cf5c20a750cc7aefd9a33455bc2cc0e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a7cf5c20a750cc7aefd9a33455bc2cc0e" kindref="member">SDL_floorf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="606" refid="_s_d_l__stdinc_8h_1afd309afc21b31ace3b0f433bbf5fa5f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1afd309afc21b31ace3b0f433bbf5fa5f3" kindref="member">SDL_trunc</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="607" refid="_s_d_l__stdinc_8h_1afc7c83b503adc4a911f65fb215a2671b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1afc7c83b503adc4a911f65fb215a2671b" kindref="member">SDL_truncf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="608" refid="_s_d_l__stdinc_8h_1a6c56858af3e7a3acfc8d3d6099c2c3f6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a6c56858af3e7a3acfc8d3d6099c2c3f6" kindref="member">SDL_fmod</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="609" refid="_s_d_l__stdinc_8h_1a24b8633bde27b05dae938f79ebbb3898" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a24b8633bde27b05dae938f79ebbb3898" kindref="member">SDL_fmodf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="610" refid="_s_d_l__stdinc_8h_1a2b226b584a9922167301231d3c13bee2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a2b226b584a9922167301231d3c13bee2" kindref="member">SDL_log</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="611" refid="_s_d_l__stdinc_8h_1a9548171a530aeb28aa02f22b0263c390" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a9548171a530aeb28aa02f22b0263c390" kindref="member">SDL_logf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="612" refid="_s_d_l__stdinc_8h_1ae907373550fb1e22242aeb56fb5e86ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ae907373550fb1e22242aeb56fb5e86ec" kindref="member">SDL_log10</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="613" refid="_s_d_l__stdinc_8h_1a272cf573bc32004a674bdc78a7ce2104" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a272cf573bc32004a674bdc78a7ce2104" kindref="member">SDL_log10f</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="614" refid="_s_d_l__stdinc_8h_1a3d52f0185cf0e50a39d82d1c0d9033a0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a3d52f0185cf0e50a39d82d1c0d9033a0" kindref="member">SDL_pow</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="615" refid="_s_d_l__stdinc_8h_1adbd43da74ca37ced160f748a35a18e28" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1adbd43da74ca37ced160f748a35a18e28" kindref="member">SDL_powf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1a1675d9d7bb68e1657ff028643b4037e3" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="616" refid="_s_d_l__stdinc_8h_1a6f3a2f23d1d27e06de58b966253032fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a6f3a2f23d1d27e06de58b966253032fb" kindref="member">SDL_round</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="617" refid="_s_d_l__stdinc_8h_1aad53e9e761ce876c2eeecf8b511215f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aad53e9e761ce876c2eeecf8b511215f7" kindref="member">SDL_roundf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="618" refid="_s_d_l__stdinc_8h_1a9e808d8450216055d1fb4ec2a5abbc3b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a9e808d8450216055d1fb4ec2a5abbc3b" kindref="member">SDL_lround</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="619" refid="_s_d_l__stdinc_8h_1a9309b62decdda5d9abdbed5a1afee7de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a9309b62decdda5d9abdbed5a1afee7de" kindref="member">SDL_lroundf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="620" refid="_s_d_l__stdinc_8h_1aadf9f772c77eaac69d873bdc894d8877" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aadf9f772c77eaac69d873bdc894d8877" kindref="member">SDL_scalbn</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1ae2b4646468bc89d0ba646f5cf838e051" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="621" refid="_s_d_l__stdinc_8h_1ac2918cea7f1ad8c10c7ff7d0549f059b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ac2918cea7f1ad8c10c7ff7d0549f059b" kindref="member">SDL_scalbnf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1ae2b4646468bc89d0ba646f5cf838e051" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="622" refid="_s_d_l__stdinc_8h_1aea6fa73c9125ce7781b16964a12678fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aea6fa73c9125ce7781b16964a12678fd" kindref="member">SDL_sin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="623" refid="_s_d_l__stdinc_8h_1a833d0eb1ac38643cc5e8f71f9231d3eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a833d0eb1ac38643cc5e8f71f9231d3eb" kindref="member">SDL_sinf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="624" refid="_s_d_l__stdinc_8h_1a89a212b3de74f13ce69fd5bea007df86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a89a212b3de74f13ce69fd5bea007df86" kindref="member">SDL_sqrt</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="625" refid="_s_d_l__stdinc_8h_1aeaa64ed4e3d788ebcb7b7363eb66ff4f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aeaa64ed4e3d788ebcb7b7363eb66ff4f" kindref="member">SDL_sqrtf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="626" refid="_s_d_l__stdinc_8h_1a4d52b941eca596f2f716425c777cb3fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a4d52b941eca596f2f716425c777cb3fc" kindref="member">SDL_tan</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="627" refid="_s_d_l__stdinc_8h_1afe3ee9cc3fc388193f23d3e5c98197ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1afe3ee9cc3fc388193f23d3e5c98197ab" kindref="member">SDL_tanf</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl_8h_1ad0e63d0edcdbd3d79554076bf309fd47" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>SDL<sp/>implementation<sp/>of<sp/>iconv()<sp/>returns<sp/>these<sp/>error<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="_s_d_l__stdinc_8h_1ada422bea61b05ed228c4f42e4aea2144" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_ICONV_ERROR<sp/><sp/><sp/><sp/><sp/>(size_t)-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="_s_d_l__stdinc_8h_1a8147462b96bda427f0b41125e645b9ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_ICONV_E2BIG<sp/><sp/><sp/><sp/><sp/>(size_t)-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="_s_d_l__stdinc_8h_1adc8b6997623c449e7ed53a605faa9eb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_ICONV_EILSEQ<sp/><sp/><sp/><sp/>(size_t)-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="_s_d_l__stdinc_8h_1a03d30a2857731df69d31ffa802424a9e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_ICONV_EINVAL<sp/><sp/><sp/><sp/>(size_t)-4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SDL_iconv_*<sp/>are<sp/>now<sp/>always<sp/>real<sp/>symbols/types,<sp/>not<sp/>macros<sp/>or<sp/>inlined.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_SDL_iconv_t<sp/>*<ref refid="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" kindref="member">SDL_iconv_t</ref>;</highlight></codeline>
<codeline lineno="637" refid="_s_d_l__stdinc_8h_1a0ba254663bb7d4b49eaa414d4533c6b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" kindref="member">SDL_iconv_t</ref><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a0ba254663bb7d4b49eaa414d4533c6b5" kindref="member">SDL_iconv_open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tocode,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fromcode);</highlight></codeline>
<codeline lineno="639" refid="_s_d_l__stdinc_8h_1a92eeaa95348c308ebd882ca85eccd684" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1a92eeaa95348c308ebd882ca85eccd684" kindref="member">SDL_iconv_close</ref>(<ref refid="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" kindref="member">SDL_iconv_t</ref><sp/>cd);</highlight></codeline>
<codeline lineno="640" refid="_s_d_l__stdinc_8h_1aeef39b9728425f231fc3e019ffa6c9ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1aeef39b9728425f231fc3e019ffa6c9ea" kindref="member">SDL_iconv</ref>(<ref refid="_s_d_l__stdinc_8h_1a37ee875bea397030104764a92857ae79" kindref="member">SDL_iconv_t</ref><sp/>cd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**inbuf,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>inbytesleft,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**outbuf,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<sp/>outbytesleft);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="_s_d_l__stdinc_8h_1ad3b4082f19efa5d3bcf71f3f156b43f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="begin__code_8h_1aa4c7a931f4a968f818b2a1b10a432185" kindref="member">DECLSPEC</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="begin__code_8h_1a81faf4ba0455dc75f2e0507eddb79401" kindref="member">SDLCALL</ref><sp/><ref refid="_s_d_l__stdinc_8h_1ad3b4082f19efa5d3bcf71f3f156b43f7" kindref="member">SDL_iconv_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tocode,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fromcode,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*inbuf,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inbytesleft);</highlight></codeline>
<codeline lineno="654" refid="_s_d_l__stdinc_8h_1a773e5f83e392495ad8abab8d71aa84c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_iconv_utf8_locale(S)<sp/><sp/><sp/><sp/>SDL_iconv_string(&quot;&quot;</highlight><highlight class="normal">,<sp/>&quot;UTF-8&quot;,<sp/>S,<sp/>SDL_strlen(S)+1)</highlight></codeline>
<codeline lineno="655" refid="_s_d_l__stdinc_8h_1a59cd43c02306558671fe05c23284ab3b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_iconv_utf8_ucs2(S)<sp/><sp/><sp/><sp/><sp/><sp/>(Uint16<sp/>*)SDL_iconv_string(&quot;UCS-2-INTERNAL&quot;</highlight><highlight class="normal">,<sp/>&quot;UTF-8&quot;,<sp/>S,<sp/>SDL_strlen(S)+1)</highlight></codeline>
<codeline lineno="656" refid="_s_d_l__stdinc_8h_1acdced7c8985d280d87e659f583a5479e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_iconv_utf8_ucs4(S)<sp/><sp/><sp/><sp/><sp/><sp/>(Uint32<sp/>*)SDL_iconv_string(&quot;UCS-4-INTERNAL&quot;</highlight><highlight class="normal">,<sp/>&quot;UTF-8&quot;,<sp/>S,<sp/>SDL_strlen(S)+1)</highlight></codeline>
<codeline lineno="657" refid="_s_d_l__stdinc_8h_1afaf3cc7fc7c497cbd3f16ddcd85a8fb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_iconv_wchar_utf8(S)<sp/><sp/><sp/><sp/><sp/>SDL_iconv_string(&quot;UTF-8&quot;</highlight><highlight class="normal">,<sp/>&quot;WCHAR_T&quot;,<sp/>(char<sp/>*)S,<sp/>(SDL_wcslen(S)+1)*sizeof(wchar_t))</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>force<sp/>builds<sp/>using<sp/>Clang&apos;s<sp/>static<sp/>analysis<sp/>tools<sp/>to<sp/>use<sp/>literal<sp/>C<sp/>runtime</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/>here,<sp/>since<sp/>there<sp/>are<sp/>possibly<sp/>tests<sp/>that<sp/>are<sp/>ineffective<sp/>otherwise.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang_analyzer__)<sp/>&amp;&amp;<sp/>!defined(SDL_DISABLE_ANALYZE_MACROS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>analyzer<sp/>knows<sp/>about<sp/>strlcpy<sp/>even<sp/>when<sp/>the<sp/>system<sp/>doesn&apos;t<sp/>provide<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_STRLCPY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strlcpy(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>analyzer<sp/>knows<sp/>about<sp/>strlcat<sp/>even<sp/>when<sp/>the<sp/>system<sp/>doesn&apos;t<sp/>provide<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_STRLCAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strlcat(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__opengl__glext_8h_1a3d1e3edfcf61ca2d831883e1afbad89e" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_malloc<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_calloc<sp/>calloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_realloc<sp/>realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_free<sp/>free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_memset<sp/>memset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_memcpy<sp/>memcpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_memmove<sp/>memmove</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_memcmp<sp/>memcmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strlcpy<sp/>strlcpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strlcat<sp/>strlcat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strlen<sp/>strlen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_wcslen<sp/>wcslen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_wcslcpy<sp/>wcslcpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_wcslcat<sp/>wcslcat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strdup<sp/>strdup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_wcsdup<sp/>wcsdup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strchr<sp/>strchr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strrchr<sp/>strrchr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strstr<sp/>strstr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_wcsstr<sp/>wcsstr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strtokr<sp/>strtok_r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strcmp<sp/>strcmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_wcscmp<sp/>wcscmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strncmp<sp/>strncmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_wcsncmp<sp/>wcsncmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strcasecmp<sp/>strcasecmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_strncasecmp<sp/>strncasecmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_sscanf<sp/>sscanf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_vsscanf<sp/>vsscanf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_snprintf<sp/>snprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDL_vsnprintf<sp/>vsnprintf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="_s_d_l__stdinc_8h_1adc0bad3fa42ea3a629b39272a412842c" refkind="member"><highlight class="normal"><ref refid="begin__code_8h_1addf1f12c70f89102cc187297860c5961" kindref="member">SDL_FORCE_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__stdinc_8h_1adc0bad3fa42ea3a629b39272a412842c" kindref="member">SDL_memcpy4</ref>(<ref refid="_s_d_l__stdinc_8h_1a2f008605e9e07d875b5f037d470d4c2a" kindref="member">SDL_OUT_BYTECAP</ref>(dwords*4)<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/><ref refid="_s_d_l__stdinc_8h_1a4a03aca91467efc1051ddb85c02385a2" kindref="member">SDL_IN_BYTECAP</ref>(dwords*4)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dwords)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_s_d_l__stdinc_8h_1a627cbec2fd30f1bfc7ccae4c4e4d4b12" kindref="member">SDL_memcpy</ref>(<ref refid="_s_d_l__opengl__glext_8h_1a92034251bfd455d524a9b5610cddba00" kindref="member">dst</ref>,<sp/><ref refid="_s_d_l__opengl__glext_8h_1a72e0fdf0f845ded60b1fada9e9195cd7" kindref="member">src</ref>,<sp/>dwords<sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ends<sp/>C<sp/>function<sp/>definitions<sp/>when<sp/>using<sp/>C++<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="close__code_8h" kindref="compound">close_code.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SDL_stdinc_h_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vi:<sp/>set<sp/>ts=4<sp/>sw=4<sp/>expandtab:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/RayTracing/include/SDL_stdinc.h"/>
  </compounddef>
</doxygen>
