<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="struct_s_d_l___assert_data" kind="struct" language="C++" prot="public">
    <compoundname>SDL_AssertData</compoundname>
    <includes refid="_s_d_l__assert_8h" local="no">SDL_assert.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_s_d_l___assert_data_1a825e1c7772fe24afad33d0afc42cf04c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int SDL_AssertData::always_ignore</definition>
        <argsstring></argsstring>
        <name>always_ignore</name>
        <qualifiedname>SDL_AssertData::always_ignore</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_assert.h" line="117" column="9" bodyfile="D:/RayTracing/include/SDL_assert.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___assert_data_1a230bbcc2d115aab04cf817773e08eb5b" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int SDL_AssertData::trigger_count</definition>
        <argsstring></argsstring>
        <name>trigger_count</name>
        <qualifiedname>SDL_AssertData::trigger_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_assert.h" line="118" column="18" bodyfile="D:/RayTracing/include/SDL_assert.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___assert_data_1aec6d372462fa8c94a9d04c1168cd38c9" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SDL_AssertData::condition</definition>
        <argsstring></argsstring>
        <name>condition</name>
        <qualifiedname>SDL_AssertData::condition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_assert.h" line="119" column="16" bodyfile="D:/RayTracing/include/SDL_assert.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___assert_data_1acf27f593e6a436386d2cbcf826cf1ef7" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SDL_AssertData::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <qualifiedname>SDL_AssertData::filename</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_assert.h" line="120" column="16" bodyfile="D:/RayTracing/include/SDL_assert.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___assert_data_1ad026d8573970d2402230d5fa3c550b0f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int SDL_AssertData::linenum</definition>
        <argsstring></argsstring>
        <name>linenum</name>
        <qualifiedname>SDL_AssertData::linenum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_assert.h" line="121" column="9" bodyfile="D:/RayTracing/include/SDL_assert.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___assert_data_1a4913c57d4affb813feea82fc5f48a25c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* SDL_AssertData::function</definition>
        <argsstring></argsstring>
        <name>function</name>
        <qualifiedname>SDL_AssertData::function</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_assert.h" line="122" column="16" bodyfile="D:/RayTracing/include/SDL_assert.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_d_l___assert_data_1a2081dcf06dce4df497e423bccddfc099" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="struct_s_d_l___assert_data" kindref="compound">SDL_AssertData</ref> *</type>
        <definition>const struct SDL_AssertData* SDL_AssertData::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <qualifiedname>SDL_AssertData::next</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/RayTracing/include/SDL_assert.h" line="123" column="31" bodyfile="D:/RayTracing/include/SDL_assert.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>SDL_AssertData</label>
        <link refid="struct_s_d_l___assert_data"/>
        <childnode refid="1" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/RayTracing/include/SDL_assert.h" line="115" column="1" bodyfile="D:/RayTracing/include/SDL_assert.h" bodystart="116" bodyend="124"/>
    <listofallmembers>
      <member refid="struct_s_d_l___assert_data_1a825e1c7772fe24afad33d0afc42cf04c" prot="public" virt="non-virtual"><scope>SDL_AssertData</scope><name>always_ignore</name></member>
      <member refid="struct_s_d_l___assert_data_1aec6d372462fa8c94a9d04c1168cd38c9" prot="public" virt="non-virtual"><scope>SDL_AssertData</scope><name>condition</name></member>
      <member refid="struct_s_d_l___assert_data_1acf27f593e6a436386d2cbcf826cf1ef7" prot="public" virt="non-virtual"><scope>SDL_AssertData</scope><name>filename</name></member>
      <member refid="struct_s_d_l___assert_data_1a4913c57d4affb813feea82fc5f48a25c" prot="public" virt="non-virtual"><scope>SDL_AssertData</scope><name>function</name></member>
      <member refid="struct_s_d_l___assert_data_1ad026d8573970d2402230d5fa3c550b0f" prot="public" virt="non-virtual"><scope>SDL_AssertData</scope><name>linenum</name></member>
      <member refid="struct_s_d_l___assert_data_1a2081dcf06dce4df497e423bccddfc099" prot="public" virt="non-virtual"><scope>SDL_AssertData</scope><name>next</name></member>
      <member refid="struct_s_d_l___assert_data_1a230bbcc2d115aab04cf817773e08eb5b" prot="public" virt="non-virtual"><scope>SDL_AssertData</scope><name>trigger_count</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
